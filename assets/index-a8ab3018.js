(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function e(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(s){if(s.ep)return;s.ep=!0;const r=e(s);fetch(s.href,r)}})();function rc(i,t){const e=Object.create(null),n=i.split(",");for(let s=0;s<n.length;s++)e[n[s]]=!0;return t?s=>!!e[s.toLowerCase()]:s=>!!e[s]}function oc(i){if(kt(i)){const t={};for(let e=0;e<i.length;e++){const n=i[e],s=be(n)?Tm(n):oc(n);if(s)for(const r in s)t[r]=s[r]}return t}else{if(be(i))return i;if(ue(i))return i}}const Mm=/;(?![^(]*\))/g,bm=/:([^]+)/,Sm=/\/\*.*?\*\//gs;function Tm(i){const t={};return i.replace(Sm,"").split(Mm).forEach(e=>{if(e){const n=e.split(bm);n.length>1&&(t[n[0].trim()]=n[1].trim())}}),t}function ac(i){let t="";if(be(i))t=i;else if(kt(i))for(let e=0;e<i.length;e++){const n=ac(i[e]);n&&(t+=n+" ")}else if(ue(i))for(const e in i)i[e]&&(t+=e+" ");return t.trim()}const Em="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Am=rc(Em);function ed(i){return!!i||i===""}const Pm=i=>be(i)?i:i==null?"":kt(i)||ue(i)&&(i.toString===rd||!Ut(i.toString))?JSON.stringify(i,nd,2):String(i),nd=(i,t)=>t&&t.__v_isRef?nd(i,t.value):Cs(t)?{[`Map(${t.size})`]:[...t.entries()].reduce((e,[n,s])=>(e[`${n} =>`]=s,e),{})}:id(t)?{[`Set(${t.size})`]:[...t.values()]}:ue(t)&&!kt(t)&&!od(t)?String(t):t,he={},Ps=[],Pn=()=>{},Cm=()=>!1,Lm=/^on[^a-z]/,Zo=i=>Lm.test(i),lc=i=>i.startsWith("onUpdate:"),Ne=Object.assign,cc=(i,t)=>{const e=i.indexOf(t);e>-1&&i.splice(e,1)},Rm=Object.prototype.hasOwnProperty,Jt=(i,t)=>Rm.call(i,t),kt=Array.isArray,Cs=i=>Ko(i)==="[object Map]",id=i=>Ko(i)==="[object Set]",Ut=i=>typeof i=="function",be=i=>typeof i=="string",hc=i=>typeof i=="symbol",ue=i=>i!==null&&typeof i=="object",sd=i=>ue(i)&&Ut(i.then)&&Ut(i.catch),rd=Object.prototype.toString,Ko=i=>rd.call(i),Im=i=>Ko(i).slice(8,-1),od=i=>Ko(i)==="[object Object]",uc=i=>be(i)&&i!=="NaN"&&i[0]!=="-"&&""+parseInt(i,10)===i,Io=rc(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Jo=i=>{const t=Object.create(null);return e=>t[e]||(t[e]=i(e))},Dm=/-(\w)/g,kn=Jo(i=>i.replace(Dm,(t,e)=>e?e.toUpperCase():"")),zm=/\B([A-Z])/g,Ws=Jo(i=>i.replace(zm,"-$1").toLowerCase()),Qo=Jo(i=>i.charAt(0).toUpperCase()+i.slice(1)),Ma=Jo(i=>i?`on${Qo(i)}`:""),Er=(i,t)=>!Object.is(i,t),ba=(i,t)=>{for(let e=0;e<i.length;e++)i[e](t)},Bo=(i,t,e)=>{Object.defineProperty(i,t,{configurable:!0,enumerable:!1,value:e})},Fm=i=>{const t=parseFloat(i);return isNaN(t)?i:t};let th;const Om=()=>th||(th=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});let Sn;class Nm{constructor(t=!1){this.detached=t,this._active=!0,this.effects=[],this.cleanups=[],this.parent=Sn,!t&&Sn&&(this.index=(Sn.scopes||(Sn.scopes=[])).push(this)-1)}get active(){return this._active}run(t){if(this._active){const e=Sn;try{return Sn=this,t()}finally{Sn=e}}}on(){Sn=this}off(){Sn=this.parent}stop(t){if(this._active){let e,n;for(e=0,n=this.effects.length;e<n;e++)this.effects[e].stop();for(e=0,n=this.cleanups.length;e<n;e++)this.cleanups[e]();if(this.scopes)for(e=0,n=this.scopes.length;e<n;e++)this.scopes[e].stop(!0);if(!this.detached&&this.parent&&!t){const s=this.parent.scopes.pop();s&&s!==this&&(this.parent.scopes[this.index]=s,s.index=this.index)}this.parent=void 0,this._active=!1}}}function km(i,t=Sn){t&&t.active&&t.effects.push(i)}function Um(){return Sn}const fc=i=>{const t=new Set(i);return t.w=0,t.n=0,t},ad=i=>(i.w&bi)>0,ld=i=>(i.n&bi)>0,Bm=({deps:i})=>{if(i.length)for(let t=0;t<i.length;t++)i[t].w|=bi},Hm=i=>{const{deps:t}=i;if(t.length){let e=0;for(let n=0;n<t.length;n++){const s=t[n];ad(s)&&!ld(s)?s.delete(i):t[e++]=s,s.w&=~bi,s.n&=~bi}t.length=e}},Al=new WeakMap;let fr=0,bi=1;const Pl=30;let En;const Wi=Symbol(""),Cl=Symbol("");class dc{constructor(t,e=null,n){this.fn=t,this.scheduler=e,this.active=!0,this.deps=[],this.parent=void 0,km(this,n)}run(){if(!this.active)return this.fn();let t=En,e=vi;for(;t;){if(t===this)return;t=t.parent}try{return this.parent=En,En=this,vi=!0,bi=1<<++fr,fr<=Pl?Bm(this):eh(this),this.fn()}finally{fr<=Pl&&Hm(this),bi=1<<--fr,En=this.parent,vi=e,this.parent=void 0,this.deferStop&&this.stop()}}stop(){En===this?this.deferStop=!0:this.active&&(eh(this),this.onStop&&this.onStop(),this.active=!1)}}function eh(i){const{deps:t}=i;if(t.length){for(let e=0;e<t.length;e++)t[e].delete(i);t.length=0}}let vi=!0;const cd=[];function Xs(){cd.push(vi),vi=!1}function js(){const i=cd.pop();vi=i===void 0?!0:i}function Je(i,t,e){if(vi&&En){let n=Al.get(i);n||Al.set(i,n=new Map);let s=n.get(e);s||n.set(e,s=fc()),hd(s)}}function hd(i,t){let e=!1;fr<=Pl?ld(i)||(i.n|=bi,e=!ad(i)):e=!i.has(En),e&&(i.add(En),En.deps.push(i))}function ei(i,t,e,n,s,r){const o=Al.get(i);if(!o)return;let a=[];if(t==="clear")a=[...o.values()];else if(e==="length"&&kt(i)){const l=Number(n);o.forEach((c,h)=>{(h==="length"||h>=l)&&a.push(c)})}else switch(e!==void 0&&a.push(o.get(e)),t){case"add":kt(i)?uc(e)&&a.push(o.get("length")):(a.push(o.get(Wi)),Cs(i)&&a.push(o.get(Cl)));break;case"delete":kt(i)||(a.push(o.get(Wi)),Cs(i)&&a.push(o.get(Cl)));break;case"set":Cs(i)&&a.push(o.get(Wi));break}if(a.length===1)a[0]&&Ll(a[0]);else{const l=[];for(const c of a)c&&l.push(...c);Ll(fc(l))}}function Ll(i,t){const e=kt(i)?i:[...i];for(const n of e)n.computed&&nh(n);for(const n of e)n.computed||nh(n)}function nh(i,t){(i!==En||i.allowRecurse)&&(i.scheduler?i.scheduler():i.run())}const Vm=rc("__proto__,__v_isRef,__isVue"),ud=new Set(Object.getOwnPropertyNames(Symbol).filter(i=>i!=="arguments"&&i!=="caller").map(i=>Symbol[i]).filter(hc)),Gm=pc(),Wm=pc(!1,!0),Xm=pc(!0),ih=jm();function jm(){const i={};return["includes","indexOf","lastIndexOf"].forEach(t=>{i[t]=function(...e){const n=ee(this);for(let r=0,o=this.length;r<o;r++)Je(n,"get",r+"");const s=n[t](...e);return s===-1||s===!1?n[t](...e.map(ee)):s}}),["push","pop","shift","unshift","splice"].forEach(t=>{i[t]=function(...e){Xs();const n=ee(this)[t].apply(this,e);return js(),n}}),i}function qm(i){const t=ee(this);return Je(t,"has",i),t.hasOwnProperty(i)}function pc(i=!1,t=!1){return function(n,s,r){if(s==="__v_isReactive")return!i;if(s==="__v_isReadonly")return i;if(s==="__v_isShallow")return t;if(s==="__v_raw"&&r===(i?t?c0:gd:t?md:pd).get(n))return n;const o=kt(n);if(!i){if(o&&Jt(ih,s))return Reflect.get(ih,s,r);if(s==="hasOwnProperty")return qm}const a=Reflect.get(n,s,r);return(hc(s)?ud.has(s):Vm(s))||(i||Je(n,"get",s),t)?a:Oe(a)?o&&uc(s)?a:a.value:ue(a)?i?_d(a):Wr(a):a}}const Ym=fd(),$m=fd(!0);function fd(i=!1){return function(e,n,s,r){let o=e[n];if(Os(o)&&Oe(o)&&!Oe(s))return!1;if(!i&&(!Ho(s)&&!Os(s)&&(o=ee(o),s=ee(s)),!kt(e)&&Oe(o)&&!Oe(s)))return o.value=s,!0;const a=kt(e)&&uc(n)?Number(n)<e.length:Jt(e,n),l=Reflect.set(e,n,s,r);return e===ee(r)&&(a?Er(s,o)&&ei(e,"set",n,s):ei(e,"add",n,s)),l}}function Zm(i,t){const e=Jt(i,t);i[t];const n=Reflect.deleteProperty(i,t);return n&&e&&ei(i,"delete",t,void 0),n}function Km(i,t){const e=Reflect.has(i,t);return(!hc(t)||!ud.has(t))&&Je(i,"has",t),e}function Jm(i){return Je(i,"iterate",kt(i)?"length":Wi),Reflect.ownKeys(i)}const dd={get:Gm,set:Ym,deleteProperty:Zm,has:Km,ownKeys:Jm},Qm={get:Xm,set(i,t){return!0},deleteProperty(i,t){return!0}},t0=Ne({},dd,{get:Wm,set:$m}),mc=i=>i,ta=i=>Reflect.getPrototypeOf(i);function Zr(i,t,e=!1,n=!1){i=i.__v_raw;const s=ee(i),r=ee(t);e||(t!==r&&Je(s,"get",t),Je(s,"get",r));const{has:o}=ta(s),a=n?mc:e?xc:Ar;if(o.call(s,t))return a(i.get(t));if(o.call(s,r))return a(i.get(r));i!==s&&i.get(t)}function Kr(i,t=!1){const e=this.__v_raw,n=ee(e),s=ee(i);return t||(i!==s&&Je(n,"has",i),Je(n,"has",s)),i===s?e.has(i):e.has(i)||e.has(s)}function Jr(i,t=!1){return i=i.__v_raw,!t&&Je(ee(i),"iterate",Wi),Reflect.get(i,"size",i)}function sh(i){i=ee(i);const t=ee(this);return ta(t).has.call(t,i)||(t.add(i),ei(t,"add",i,i)),this}function rh(i,t){t=ee(t);const e=ee(this),{has:n,get:s}=ta(e);let r=n.call(e,i);r||(i=ee(i),r=n.call(e,i));const o=s.call(e,i);return e.set(i,t),r?Er(t,o)&&ei(e,"set",i,t):ei(e,"add",i,t),this}function oh(i){const t=ee(this),{has:e,get:n}=ta(t);let s=e.call(t,i);s||(i=ee(i),s=e.call(t,i)),n&&n.call(t,i);const r=t.delete(i);return s&&ei(t,"delete",i,void 0),r}function ah(){const i=ee(this),t=i.size!==0,e=i.clear();return t&&ei(i,"clear",void 0,void 0),e}function Qr(i,t){return function(n,s){const r=this,o=r.__v_raw,a=ee(o),l=t?mc:i?xc:Ar;return!i&&Je(a,"iterate",Wi),o.forEach((c,h)=>n.call(s,l(c),l(h),r))}}function to(i,t,e){return function(...n){const s=this.__v_raw,r=ee(s),o=Cs(r),a=i==="entries"||i===Symbol.iterator&&o,l=i==="keys"&&o,c=s[i](...n),h=e?mc:t?xc:Ar;return!t&&Je(r,"iterate",l?Cl:Wi),{next(){const{value:u,done:f}=c.next();return f?{value:u,done:f}:{value:a?[h(u[0]),h(u[1])]:h(u),done:f}},[Symbol.iterator](){return this}}}}function ai(i){return function(...t){return i==="delete"?!1:this}}function e0(){const i={get(r){return Zr(this,r)},get size(){return Jr(this)},has:Kr,add:sh,set:rh,delete:oh,clear:ah,forEach:Qr(!1,!1)},t={get(r){return Zr(this,r,!1,!0)},get size(){return Jr(this)},has:Kr,add:sh,set:rh,delete:oh,clear:ah,forEach:Qr(!1,!0)},e={get(r){return Zr(this,r,!0)},get size(){return Jr(this,!0)},has(r){return Kr.call(this,r,!0)},add:ai("add"),set:ai("set"),delete:ai("delete"),clear:ai("clear"),forEach:Qr(!0,!1)},n={get(r){return Zr(this,r,!0,!0)},get size(){return Jr(this,!0)},has(r){return Kr.call(this,r,!0)},add:ai("add"),set:ai("set"),delete:ai("delete"),clear:ai("clear"),forEach:Qr(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(r=>{i[r]=to(r,!1,!1),e[r]=to(r,!0,!1),t[r]=to(r,!1,!0),n[r]=to(r,!0,!0)}),[i,e,t,n]}const[n0,i0,s0,r0]=e0();function gc(i,t){const e=t?i?r0:s0:i?i0:n0;return(n,s,r)=>s==="__v_isReactive"?!i:s==="__v_isReadonly"?i:s==="__v_raw"?n:Reflect.get(Jt(e,s)&&s in n?e:n,s,r)}const o0={get:gc(!1,!1)},a0={get:gc(!1,!0)},l0={get:gc(!0,!1)},pd=new WeakMap,md=new WeakMap,gd=new WeakMap,c0=new WeakMap;function h0(i){switch(i){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function u0(i){return i.__v_skip||!Object.isExtensible(i)?0:h0(Im(i))}function Wr(i){return Os(i)?i:_c(i,!1,dd,o0,pd)}function f0(i){return _c(i,!1,t0,a0,md)}function _d(i){return _c(i,!0,Qm,l0,gd)}function _c(i,t,e,n,s){if(!ue(i)||i.__v_raw&&!(t&&i.__v_isReactive))return i;const r=s.get(i);if(r)return r;const o=u0(i);if(o===0)return i;const a=new Proxy(i,o===2?n:e);return s.set(i,a),a}function Ls(i){return Os(i)?Ls(i.__v_raw):!!(i&&i.__v_isReactive)}function Os(i){return!!(i&&i.__v_isReadonly)}function Ho(i){return!!(i&&i.__v_isShallow)}function xd(i){return Ls(i)||Os(i)}function ee(i){const t=i&&i.__v_raw;return t?ee(t):i}function yd(i){return Bo(i,"__v_skip",!0),i}const Ar=i=>ue(i)?Wr(i):i,xc=i=>ue(i)?_d(i):i;function vd(i){vi&&En&&(i=ee(i),hd(i.dep||(i.dep=fc())))}function wd(i,t){i=ee(i);const e=i.dep;e&&Ll(e)}function Oe(i){return!!(i&&i.__v_isRef===!0)}function d0(i){return Md(i,!1)}function p0(i){return Md(i,!0)}function Md(i,t){return Oe(i)?i:new m0(i,t)}class m0{constructor(t,e){this.__v_isShallow=e,this.dep=void 0,this.__v_isRef=!0,this._rawValue=e?t:ee(t),this._value=e?t:Ar(t)}get value(){return vd(this),this._value}set value(t){const e=this.__v_isShallow||Ho(t)||Os(t);t=e?t:ee(t),Er(t,this._rawValue)&&(this._rawValue=t,this._value=e?t:Ar(t),wd(this))}}function Rs(i){return Oe(i)?i.value:i}const g0={get:(i,t,e)=>Rs(Reflect.get(i,t,e)),set:(i,t,e,n)=>{const s=i[t];return Oe(s)&&!Oe(e)?(s.value=e,!0):Reflect.set(i,t,e,n)}};function bd(i){return Ls(i)?i:new Proxy(i,g0)}var Sd;class _0{constructor(t,e,n,s){this._setter=e,this.dep=void 0,this.__v_isRef=!0,this[Sd]=!1,this._dirty=!0,this.effect=new dc(t,()=>{this._dirty||(this._dirty=!0,wd(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!s,this.__v_isReadonly=n}get value(){const t=ee(this);return vd(t),(t._dirty||!t._cacheable)&&(t._dirty=!1,t._value=t.effect.run()),t._value}set value(t){this._setter(t)}}Sd="__v_isReadonly";function x0(i,t,e=!1){let n,s;const r=Ut(i);return r?(n=i,s=Pn):(n=i.get,s=i.set),new _0(n,s,r||!s,e)}function wi(i,t,e,n){let s;try{s=n?i(...n):i()}catch(r){ea(r,t,e)}return s}function _n(i,t,e,n){if(Ut(i)){const r=wi(i,t,e,n);return r&&sd(r)&&r.catch(o=>{ea(o,t,e)}),r}const s=[];for(let r=0;r<i.length;r++)s.push(_n(i[r],t,e,n));return s}function ea(i,t,e,n=!0){const s=t?t.vnode:null;if(t){let r=t.parent;const o=t.proxy,a=e;for(;r;){const c=r.ec;if(c){for(let h=0;h<c.length;h++)if(c[h](i,o,a)===!1)return}r=r.parent}const l=t.appContext.config.errorHandler;if(l){wi(l,null,10,[i,o,a]);return}}y0(i,e,s,n)}function y0(i,t,e,n=!0){console.error(i)}let Pr=!1,Rl=!1;const Fe=[];let Fn=0;const Is=[];let Zn=null,ki=0;const Td=Promise.resolve();let yc=null;function Ed(i){const t=yc||Td;return i?t.then(this?i.bind(this):i):t}function v0(i){let t=Fn+1,e=Fe.length;for(;t<e;){const n=t+e>>>1;Cr(Fe[n])<i?t=n+1:e=n}return t}function vc(i){(!Fe.length||!Fe.includes(i,Pr&&i.allowRecurse?Fn+1:Fn))&&(i.id==null?Fe.push(i):Fe.splice(v0(i.id),0,i),Ad())}function Ad(){!Pr&&!Rl&&(Rl=!0,yc=Td.then(Cd))}function w0(i){const t=Fe.indexOf(i);t>Fn&&Fe.splice(t,1)}function M0(i){kt(i)?Is.push(...i):(!Zn||!Zn.includes(i,i.allowRecurse?ki+1:ki))&&Is.push(i),Ad()}function lh(i,t=Pr?Fn+1:0){for(;t<Fe.length;t++){const e=Fe[t];e&&e.pre&&(Fe.splice(t,1),t--,e())}}function Pd(i){if(Is.length){const t=[...new Set(Is)];if(Is.length=0,Zn){Zn.push(...t);return}for(Zn=t,Zn.sort((e,n)=>Cr(e)-Cr(n)),ki=0;ki<Zn.length;ki++)Zn[ki]();Zn=null,ki=0}}const Cr=i=>i.id==null?1/0:i.id,b0=(i,t)=>{const e=Cr(i)-Cr(t);if(e===0){if(i.pre&&!t.pre)return-1;if(t.pre&&!i.pre)return 1}return e};function Cd(i){Rl=!1,Pr=!0,Fe.sort(b0);const t=Pn;try{for(Fn=0;Fn<Fe.length;Fn++){const e=Fe[Fn];e&&e.active!==!1&&wi(e,null,14)}}finally{Fn=0,Fe.length=0,Pd(),Pr=!1,yc=null,(Fe.length||Is.length)&&Cd()}}function S0(i,t,...e){if(i.isUnmounted)return;const n=i.vnode.props||he;let s=e;const r=t.startsWith("update:"),o=r&&t.slice(7);if(o&&o in n){const h=`${o==="modelValue"?"model":o}Modifiers`,{number:u,trim:f}=n[h]||he;f&&(s=e.map(d=>be(d)?d.trim():d)),u&&(s=e.map(Fm))}let a,l=n[a=Ma(t)]||n[a=Ma(kn(t))];!l&&r&&(l=n[a=Ma(Ws(t))]),l&&_n(l,i,6,s);const c=n[a+"Once"];if(c){if(!i.emitted)i.emitted={};else if(i.emitted[a])return;i.emitted[a]=!0,_n(c,i,6,s)}}function Ld(i,t,e=!1){const n=t.emitsCache,s=n.get(i);if(s!==void 0)return s;const r=i.emits;let o={},a=!1;if(!Ut(i)){const l=c=>{const h=Ld(c,t,!0);h&&(a=!0,Ne(o,h))};!e&&t.mixins.length&&t.mixins.forEach(l),i.extends&&l(i.extends),i.mixins&&i.mixins.forEach(l)}return!r&&!a?(ue(i)&&n.set(i,null),null):(kt(r)?r.forEach(l=>o[l]=null):Ne(o,r),ue(i)&&n.set(i,o),o)}function na(i,t){return!i||!Zo(t)?!1:(t=t.slice(2).replace(/Once$/,""),Jt(i,t[0].toLowerCase()+t.slice(1))||Jt(i,Ws(t))||Jt(i,t))}let pn=null,ia=null;function Vo(i){const t=pn;return pn=i,ia=i&&i.type.__scopeId||null,t}function T0(i){ia=i}function E0(){ia=null}function Rd(i,t=pn,e){if(!t||i._n)return i;const n=(...s)=>{n._d&&yh(-1);const r=Vo(t);let o;try{o=i(...s)}finally{Vo(r),n._d&&yh(1)}return o};return n._n=!0,n._c=!0,n._d=!0,n}function Sa(i){const{type:t,vnode:e,proxy:n,withProxy:s,props:r,propsOptions:[o],slots:a,attrs:l,emit:c,render:h,renderCache:u,data:f,setupState:d,ctx:g,inheritAttrs:p}=i;let m,_;const w=Vo(i);try{if(e.shapeFlag&4){const b=s||n;m=Dn(h.call(b,b,u,r,d,f,g)),_=l}else{const b=t;m=Dn(b.length>1?b(r,{attrs:l,slots:a,emit:c}):b(r,null)),_=t.props?l:A0(l)}}catch(b){yr.length=0,ea(b,i,1),m=on(Jn)}let x=m;if(_&&p!==!1){const b=Object.keys(_),{shapeFlag:S}=x;b.length&&S&7&&(o&&b.some(lc)&&(_=P0(_,o)),x=Si(x,_))}return e.dirs&&(x=Si(x),x.dirs=x.dirs?x.dirs.concat(e.dirs):e.dirs),e.transition&&(x.transition=e.transition),m=x,Vo(w),m}const A0=i=>{let t;for(const e in i)(e==="class"||e==="style"||Zo(e))&&((t||(t={}))[e]=i[e]);return t},P0=(i,t)=>{const e={};for(const n in i)(!lc(n)||!(n.slice(9)in t))&&(e[n]=i[n]);return e};function C0(i,t,e){const{props:n,children:s,component:r}=i,{props:o,children:a,patchFlag:l}=t,c=r.emitsOptions;if(t.dirs||t.transition)return!0;if(e&&l>=0){if(l&1024)return!0;if(l&16)return n?ch(n,o,c):!!o;if(l&8){const h=t.dynamicProps;for(let u=0;u<h.length;u++){const f=h[u];if(o[f]!==n[f]&&!na(c,f))return!0}}}else return(s||a)&&(!a||!a.$stable)?!0:n===o?!1:n?o?ch(n,o,c):!0:!!o;return!1}function ch(i,t,e){const n=Object.keys(t);if(n.length!==Object.keys(i).length)return!0;for(let s=0;s<n.length;s++){const r=n[s];if(t[r]!==i[r]&&!na(e,r))return!0}return!1}function L0({vnode:i,parent:t},e){for(;t&&t.subTree===i;)(i=t.vnode).el=e,t=t.parent}const R0=i=>i.__isSuspense;function I0(i,t){t&&t.pendingBranch?kt(i)?t.effects.push(...i):t.effects.push(i):M0(i)}function Do(i,t){if(ge){let e=ge.provides;const n=ge.parent&&ge.parent.provides;n===e&&(e=ge.provides=Object.create(n)),e[i]=t}}function Kn(i,t,e=!1){const n=ge||pn;if(n){const s=n.parent==null?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides;if(s&&i in s)return s[i];if(arguments.length>1)return e&&Ut(t)?t.call(n.proxy):t}}const eo={};function zo(i,t,e){return Id(i,t,e)}function Id(i,t,{immediate:e,deep:n,flush:s,onTrack:r,onTrigger:o}=he){const a=Um()===(ge==null?void 0:ge.scope)?ge:null;let l,c=!1,h=!1;if(Oe(i)?(l=()=>i.value,c=Ho(i)):Ls(i)?(l=()=>i,n=!0):kt(i)?(h=!0,c=i.some(x=>Ls(x)||Ho(x)),l=()=>i.map(x=>{if(Oe(x))return x.value;if(Ls(x))return Ts(x);if(Ut(x))return wi(x,a,2)})):Ut(i)?t?l=()=>wi(i,a,2):l=()=>{if(!(a&&a.isUnmounted))return u&&u(),_n(i,a,3,[f])}:l=Pn,t&&n){const x=l;l=()=>Ts(x())}let u,f=x=>{u=_.onStop=()=>{wi(x,a,4)}},d;if(Rr)if(f=Pn,t?e&&_n(t,a,3,[l(),h?[]:void 0,f]):l(),s==="sync"){const x=Cg();d=x.__watcherHandles||(x.__watcherHandles=[])}else return Pn;let g=h?new Array(i.length).fill(eo):eo;const p=()=>{if(_.active)if(t){const x=_.run();(n||c||(h?x.some((b,S)=>Er(b,g[S])):Er(x,g)))&&(u&&u(),_n(t,a,3,[x,g===eo?void 0:h&&g[0]===eo?[]:g,f]),g=x)}else _.run()};p.allowRecurse=!!t;let m;s==="sync"?m=p:s==="post"?m=()=>Ze(p,a&&a.suspense):(p.pre=!0,a&&(p.id=a.uid),m=()=>vc(p));const _=new dc(l,m);t?e?p():g=_.run():s==="post"?Ze(_.run.bind(_),a&&a.suspense):_.run();const w=()=>{_.stop(),a&&a.scope&&cc(a.scope.effects,_)};return d&&d.push(w),w}function D0(i,t,e){const n=this.proxy,s=be(i)?i.includes(".")?Dd(n,i):()=>n[i]:i.bind(n,n);let r;Ut(t)?r=t:(r=t.handler,e=t);const o=ge;Ns(this);const a=Id(s,r.bind(n),e);return o?Ns(o):Xi(),a}function Dd(i,t){const e=t.split(".");return()=>{let n=i;for(let s=0;s<e.length&&n;s++)n=n[e[s]];return n}}function Ts(i,t){if(!ue(i)||i.__v_skip||(t=t||new Set,t.has(i)))return i;if(t.add(i),Oe(i))Ts(i.value,t);else if(kt(i))for(let e=0;e<i.length;e++)Ts(i[e],t);else if(id(i)||Cs(i))i.forEach(e=>{Ts(e,t)});else if(od(i))for(const e in i)Ts(i[e],t);return i}function z0(){const i={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return kd(()=>{i.isMounted=!0}),Ud(()=>{i.isUnmounting=!0}),i}const ln=[Function,Array],F0={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:ln,onEnter:ln,onAfterEnter:ln,onEnterCancelled:ln,onBeforeLeave:ln,onLeave:ln,onAfterLeave:ln,onLeaveCancelled:ln,onBeforeAppear:ln,onAppear:ln,onAfterAppear:ln,onAppearCancelled:ln},setup(i,{slots:t}){const e=wg(),n=z0();let s;return()=>{const r=t.default&&Fd(t.default(),!0);if(!r||!r.length)return;let o=r[0];if(r.length>1){for(const p of r)if(p.type!==Jn){o=p;break}}const a=ee(i),{mode:l}=a;if(n.isLeaving)return Ta(o);const c=hh(o);if(!c)return Ta(o);const h=Il(c,a,n,e);Dl(c,h);const u=e.subTree,f=u&&hh(u);let d=!1;const{getTransitionKey:g}=c.type;if(g){const p=g();s===void 0?s=p:p!==s&&(s=p,d=!0)}if(f&&f.type!==Jn&&(!Ui(c,f)||d)){const p=Il(f,a,n,e);if(Dl(f,p),l==="out-in")return n.isLeaving=!0,p.afterLeave=()=>{n.isLeaving=!1,e.update.active!==!1&&e.update()},Ta(o);l==="in-out"&&c.type!==Jn&&(p.delayLeave=(m,_,w)=>{const x=zd(n,f);x[String(f.key)]=f,m._leaveCb=()=>{_(),m._leaveCb=void 0,delete h.delayedLeave},h.delayedLeave=w})}return o}}},O0=F0;function zd(i,t){const{leavingVNodes:e}=i;let n=e.get(t.type);return n||(n=Object.create(null),e.set(t.type,n)),n}function Il(i,t,e,n){const{appear:s,mode:r,persisted:o=!1,onBeforeEnter:a,onEnter:l,onAfterEnter:c,onEnterCancelled:h,onBeforeLeave:u,onLeave:f,onAfterLeave:d,onLeaveCancelled:g,onBeforeAppear:p,onAppear:m,onAfterAppear:_,onAppearCancelled:w}=t,x=String(i.key),b=zd(e,i),S=(y,A)=>{y&&_n(y,n,9,A)},C=(y,A)=>{const R=A[1];S(y,A),kt(y)?y.every(j=>j.length<=1)&&R():y.length<=1&&R()},D={mode:r,persisted:o,beforeEnter(y){let A=a;if(!e.isMounted)if(s)A=p||a;else return;y._leaveCb&&y._leaveCb(!0);const R=b[x];R&&Ui(i,R)&&R.el._leaveCb&&R.el._leaveCb(),S(A,[y])},enter(y){let A=l,R=c,j=h;if(!e.isMounted)if(s)A=m||l,R=_||c,j=w||h;else return;let Q=!1;const U=y._enterCb=O=>{Q||(Q=!0,O?S(j,[y]):S(R,[y]),D.delayedLeave&&D.delayedLeave(),y._enterCb=void 0)};A?C(A,[y,U]):U()},leave(y,A){const R=String(i.key);if(y._enterCb&&y._enterCb(!0),e.isUnmounting)return A();S(u,[y]);let j=!1;const Q=y._leaveCb=U=>{j||(j=!0,A(),U?S(g,[y]):S(d,[y]),y._leaveCb=void 0,b[R]===i&&delete b[R])};b[R]=i,f?C(f,[y,Q]):Q()},clone(y){return Il(y,t,e,n)}};return D}function Ta(i){if(sa(i))return i=Si(i),i.children=null,i}function hh(i){return sa(i)?i.children?i.children[0]:void 0:i}function Dl(i,t){i.shapeFlag&6&&i.component?Dl(i.component.subTree,t):i.shapeFlag&128?(i.ssContent.transition=t.clone(i.ssContent),i.ssFallback.transition=t.clone(i.ssFallback)):i.transition=t}function Fd(i,t=!1,e){let n=[],s=0;for(let r=0;r<i.length;r++){let o=i[r];const a=e==null?o.key:String(e)+String(o.key!=null?o.key:r);o.type===Tn?(o.patchFlag&128&&s++,n=n.concat(Fd(o.children,t,a))):(t||o.type!==Jn)&&n.push(a!=null?Si(o,{key:a}):o)}if(s>1)for(let r=0;r<n.length;r++)n[r].patchFlag=-2;return n}function Od(i){return Ut(i)?{setup:i,name:i.name}:i}const Fo=i=>!!i.type.__asyncLoader,sa=i=>i.type.__isKeepAlive;function N0(i,t){Nd(i,"a",t)}function k0(i,t){Nd(i,"da",t)}function Nd(i,t,e=ge){const n=i.__wdc||(i.__wdc=()=>{let s=e;for(;s;){if(s.isDeactivated)return;s=s.parent}return i()});if(ra(t,n,e),e){let s=e.parent;for(;s&&s.parent;)sa(s.parent.vnode)&&U0(n,t,e,s),s=s.parent}}function U0(i,t,e,n){const s=ra(t,i,n,!0);Bd(()=>{cc(n[t],s)},e)}function ra(i,t,e=ge,n=!1){if(e){const s=e[i]||(e[i]=[]),r=t.__weh||(t.__weh=(...o)=>{if(e.isUnmounted)return;Xs(),Ns(e);const a=_n(t,e,i,o);return Xi(),js(),a});return n?s.unshift(r):s.push(r),r}}const ii=i=>(t,e=ge)=>(!Rr||i==="sp")&&ra(i,(...n)=>t(...n),e),B0=ii("bm"),kd=ii("m"),H0=ii("bu"),V0=ii("u"),Ud=ii("bum"),Bd=ii("um"),G0=ii("sp"),W0=ii("rtg"),X0=ii("rtc");function j0(i,t=ge){ra("ec",i,t)}function Li(i,t,e,n){const s=i.dirs,r=t&&t.dirs;for(let o=0;o<s.length;o++){const a=s[o];r&&(a.oldValue=r[o].value);let l=a.dir[n];l&&(Xs(),_n(l,e,8,[i.el,a,i,t]),js())}}const Hd="components";function uh(i,t){return Y0(Hd,i,!0,t)||i}const q0=Symbol();function Y0(i,t,e=!0,n=!1){const s=pn||ge;if(s){const r=s.type;if(i===Hd){const a=Eg(r,!1);if(a&&(a===t||a===kn(t)||a===Qo(kn(t))))return r}const o=fh(s[i]||r[i],t)||fh(s.appContext[i],t);return!o&&n?r:o}}function fh(i,t){return i&&(i[t]||i[kn(t)]||i[Qo(kn(t))])}function $0(i,t,e,n){let s;const r=e&&e[n];if(kt(i)||be(i)){s=new Array(i.length);for(let o=0,a=i.length;o<a;o++)s[o]=t(i[o],o,void 0,r&&r[o])}else if(typeof i=="number"){s=new Array(i);for(let o=0;o<i;o++)s[o]=t(o+1,o,void 0,r&&r[o])}else if(ue(i))if(i[Symbol.iterator])s=Array.from(i,(o,a)=>t(o,a,void 0,r&&r[a]));else{const o=Object.keys(i);s=new Array(o.length);for(let a=0,l=o.length;a<l;a++){const c=o[a];s[a]=t(i[c],c,a,r&&r[a])}}else s=[];return e&&(e[n]=s),s}const zl=i=>i?Qd(i)?Sc(i)||i.proxy:zl(i.parent):null,xr=Ne(Object.create(null),{$:i=>i,$el:i=>i.vnode.el,$data:i=>i.data,$props:i=>i.props,$attrs:i=>i.attrs,$slots:i=>i.slots,$refs:i=>i.refs,$parent:i=>zl(i.parent),$root:i=>zl(i.root),$emit:i=>i.emit,$options:i=>wc(i),$forceUpdate:i=>i.f||(i.f=()=>vc(i.update)),$nextTick:i=>i.n||(i.n=Ed.bind(i.proxy)),$watch:i=>D0.bind(i)}),Ea=(i,t)=>i!==he&&!i.__isScriptSetup&&Jt(i,t),Z0={get({_:i},t){const{ctx:e,setupState:n,data:s,props:r,accessCache:o,type:a,appContext:l}=i;let c;if(t[0]!=="$"){const d=o[t];if(d!==void 0)switch(d){case 1:return n[t];case 2:return s[t];case 4:return e[t];case 3:return r[t]}else{if(Ea(n,t))return o[t]=1,n[t];if(s!==he&&Jt(s,t))return o[t]=2,s[t];if((c=i.propsOptions[0])&&Jt(c,t))return o[t]=3,r[t];if(e!==he&&Jt(e,t))return o[t]=4,e[t];Fl&&(o[t]=0)}}const h=xr[t];let u,f;if(h)return t==="$attrs"&&Je(i,"get",t),h(i);if((u=a.__cssModules)&&(u=u[t]))return u;if(e!==he&&Jt(e,t))return o[t]=4,e[t];if(f=l.config.globalProperties,Jt(f,t))return f[t]},set({_:i},t,e){const{data:n,setupState:s,ctx:r}=i;return Ea(s,t)?(s[t]=e,!0):n!==he&&Jt(n,t)?(n[t]=e,!0):Jt(i.props,t)||t[0]==="$"&&t.slice(1)in i?!1:(r[t]=e,!0)},has({_:{data:i,setupState:t,accessCache:e,ctx:n,appContext:s,propsOptions:r}},o){let a;return!!e[o]||i!==he&&Jt(i,o)||Ea(t,o)||(a=r[0])&&Jt(a,o)||Jt(n,o)||Jt(xr,o)||Jt(s.config.globalProperties,o)},defineProperty(i,t,e){return e.get!=null?i._.accessCache[t]=0:Jt(e,"value")&&this.set(i,t,e.value,null),Reflect.defineProperty(i,t,e)}};let Fl=!0;function K0(i){const t=wc(i),e=i.proxy,n=i.ctx;Fl=!1,t.beforeCreate&&dh(t.beforeCreate,i,"bc");const{data:s,computed:r,methods:o,watch:a,provide:l,inject:c,created:h,beforeMount:u,mounted:f,beforeUpdate:d,updated:g,activated:p,deactivated:m,beforeDestroy:_,beforeUnmount:w,destroyed:x,unmounted:b,render:S,renderTracked:C,renderTriggered:D,errorCaptured:y,serverPrefetch:A,expose:R,inheritAttrs:j,components:Q,directives:U,filters:O}=t;if(c&&J0(c,n,null,i.appContext.config.unwrapInjectedRef),o)for(const it in o){const Y=o[it];Ut(Y)&&(n[it]=Y.bind(e))}if(s){const it=s.call(e,e);ue(it)&&(i.data=Wr(it))}if(Fl=!0,r)for(const it in r){const Y=r[it],ft=Ut(Y)?Y.bind(e,e):Ut(Y.get)?Y.get.bind(e,e):Pn,dt=!Ut(Y)&&Ut(Y.set)?Y.set.bind(e):Pn,vt=un({get:ft,set:dt});Object.defineProperty(n,it,{enumerable:!0,configurable:!0,get:()=>vt.value,set:W=>vt.value=W})}if(a)for(const it in a)Vd(a[it],n,e,it);if(l){const it=Ut(l)?l.call(e):l;Reflect.ownKeys(it).forEach(Y=>{Do(Y,it[Y])})}h&&dh(h,i,"c");function Z(it,Y){kt(Y)?Y.forEach(ft=>it(ft.bind(e))):Y&&it(Y.bind(e))}if(Z(B0,u),Z(kd,f),Z(H0,d),Z(V0,g),Z(N0,p),Z(k0,m),Z(j0,y),Z(X0,C),Z(W0,D),Z(Ud,w),Z(Bd,b),Z(G0,A),kt(R))if(R.length){const it=i.exposed||(i.exposed={});R.forEach(Y=>{Object.defineProperty(it,Y,{get:()=>e[Y],set:ft=>e[Y]=ft})})}else i.exposed||(i.exposed={});S&&i.render===Pn&&(i.render=S),j!=null&&(i.inheritAttrs=j),Q&&(i.components=Q),U&&(i.directives=U)}function J0(i,t,e=Pn,n=!1){kt(i)&&(i=Ol(i));for(const s in i){const r=i[s];let o;ue(r)?"default"in r?o=Kn(r.from||s,r.default,!0):o=Kn(r.from||s):o=Kn(r),Oe(o)&&n?Object.defineProperty(t,s,{enumerable:!0,configurable:!0,get:()=>o.value,set:a=>o.value=a}):t[s]=o}}function dh(i,t,e){_n(kt(i)?i.map(n=>n.bind(t.proxy)):i.bind(t.proxy),t,e)}function Vd(i,t,e,n){const s=n.includes(".")?Dd(e,n):()=>e[n];if(be(i)){const r=t[i];Ut(r)&&zo(s,r)}else if(Ut(i))zo(s,i.bind(e));else if(ue(i))if(kt(i))i.forEach(r=>Vd(r,t,e,n));else{const r=Ut(i.handler)?i.handler.bind(e):t[i.handler];Ut(r)&&zo(s,r,i)}}function wc(i){const t=i.type,{mixins:e,extends:n}=t,{mixins:s,optionsCache:r,config:{optionMergeStrategies:o}}=i.appContext,a=r.get(t);let l;return a?l=a:!s.length&&!e&&!n?l=t:(l={},s.length&&s.forEach(c=>Go(l,c,o,!0)),Go(l,t,o)),ue(t)&&r.set(t,l),l}function Go(i,t,e,n=!1){const{mixins:s,extends:r}=t;r&&Go(i,r,e,!0),s&&s.forEach(o=>Go(i,o,e,!0));for(const o in t)if(!(n&&o==="expose")){const a=Q0[o]||e&&e[o];i[o]=a?a(i[o],t[o]):t[o]}return i}const Q0={data:ph,props:Fi,emits:Fi,methods:Fi,computed:Fi,beforeCreate:He,created:He,beforeMount:He,mounted:He,beforeUpdate:He,updated:He,beforeDestroy:He,beforeUnmount:He,destroyed:He,unmounted:He,activated:He,deactivated:He,errorCaptured:He,serverPrefetch:He,components:Fi,directives:Fi,watch:eg,provide:ph,inject:tg};function ph(i,t){return t?i?function(){return Ne(Ut(i)?i.call(this,this):i,Ut(t)?t.call(this,this):t)}:t:i}function tg(i,t){return Fi(Ol(i),Ol(t))}function Ol(i){if(kt(i)){const t={};for(let e=0;e<i.length;e++)t[i[e]]=i[e];return t}return i}function He(i,t){return i?[...new Set([].concat(i,t))]:t}function Fi(i,t){return i?Ne(Ne(Object.create(null),i),t):t}function eg(i,t){if(!i)return t;if(!t)return i;const e=Ne(Object.create(null),i);for(const n in t)e[n]=He(i[n],t[n]);return e}function ng(i,t,e,n=!1){const s={},r={};Bo(r,aa,1),i.propsDefaults=Object.create(null),Gd(i,t,s,r);for(const o in i.propsOptions[0])o in s||(s[o]=void 0);e?i.props=n?s:f0(s):i.type.props?i.props=s:i.props=r,i.attrs=r}function ig(i,t,e,n){const{props:s,attrs:r,vnode:{patchFlag:o}}=i,a=ee(s),[l]=i.propsOptions;let c=!1;if((n||o>0)&&!(o&16)){if(o&8){const h=i.vnode.dynamicProps;for(let u=0;u<h.length;u++){let f=h[u];if(na(i.emitsOptions,f))continue;const d=t[f];if(l)if(Jt(r,f))d!==r[f]&&(r[f]=d,c=!0);else{const g=kn(f);s[g]=Nl(l,a,g,d,i,!1)}else d!==r[f]&&(r[f]=d,c=!0)}}}else{Gd(i,t,s,r)&&(c=!0);let h;for(const u in a)(!t||!Jt(t,u)&&((h=Ws(u))===u||!Jt(t,h)))&&(l?e&&(e[u]!==void 0||e[h]!==void 0)&&(s[u]=Nl(l,a,u,void 0,i,!0)):delete s[u]);if(r!==a)for(const u in r)(!t||!Jt(t,u))&&(delete r[u],c=!0)}c&&ei(i,"set","$attrs")}function Gd(i,t,e,n){const[s,r]=i.propsOptions;let o=!1,a;if(t)for(let l in t){if(Io(l))continue;const c=t[l];let h;s&&Jt(s,h=kn(l))?!r||!r.includes(h)?e[h]=c:(a||(a={}))[h]=c:na(i.emitsOptions,l)||(!(l in n)||c!==n[l])&&(n[l]=c,o=!0)}if(r){const l=ee(e),c=a||he;for(let h=0;h<r.length;h++){const u=r[h];e[u]=Nl(s,l,u,c[u],i,!Jt(c,u))}}return o}function Nl(i,t,e,n,s,r){const o=i[e];if(o!=null){const a=Jt(o,"default");if(a&&n===void 0){const l=o.default;if(o.type!==Function&&Ut(l)){const{propsDefaults:c}=s;e in c?n=c[e]:(Ns(s),n=c[e]=l.call(null,t),Xi())}else n=l}o[0]&&(r&&!a?n=!1:o[1]&&(n===""||n===Ws(e))&&(n=!0))}return n}function Wd(i,t,e=!1){const n=t.propsCache,s=n.get(i);if(s)return s;const r=i.props,o={},a=[];let l=!1;if(!Ut(i)){const h=u=>{l=!0;const[f,d]=Wd(u,t,!0);Ne(o,f),d&&a.push(...d)};!e&&t.mixins.length&&t.mixins.forEach(h),i.extends&&h(i.extends),i.mixins&&i.mixins.forEach(h)}if(!r&&!l)return ue(i)&&n.set(i,Ps),Ps;if(kt(r))for(let h=0;h<r.length;h++){const u=kn(r[h]);mh(u)&&(o[u]=he)}else if(r)for(const h in r){const u=kn(h);if(mh(u)){const f=r[h],d=o[u]=kt(f)||Ut(f)?{type:f}:Object.assign({},f);if(d){const g=xh(Boolean,d.type),p=xh(String,d.type);d[0]=g>-1,d[1]=p<0||g<p,(g>-1||Jt(d,"default"))&&a.push(u)}}}const c=[o,a];return ue(i)&&n.set(i,c),c}function mh(i){return i[0]!=="$"}function gh(i){const t=i&&i.toString().match(/^\s*(function|class) (\w+)/);return t?t[2]:i===null?"null":""}function _h(i,t){return gh(i)===gh(t)}function xh(i,t){return kt(t)?t.findIndex(e=>_h(e,i)):Ut(t)&&_h(t,i)?0:-1}const Xd=i=>i[0]==="_"||i==="$stable",Mc=i=>kt(i)?i.map(Dn):[Dn(i)],sg=(i,t,e)=>{if(t._n)return t;const n=Rd((...s)=>Mc(t(...s)),e);return n._c=!1,n},jd=(i,t,e)=>{const n=i._ctx;for(const s in i){if(Xd(s))continue;const r=i[s];if(Ut(r))t[s]=sg(s,r,n);else if(r!=null){const o=Mc(r);t[s]=()=>o}}},qd=(i,t)=>{const e=Mc(t);i.slots.default=()=>e},rg=(i,t)=>{if(i.vnode.shapeFlag&32){const e=t._;e?(i.slots=ee(t),Bo(t,"_",e)):jd(t,i.slots={})}else i.slots={},t&&qd(i,t);Bo(i.slots,aa,1)},og=(i,t,e)=>{const{vnode:n,slots:s}=i;let r=!0,o=he;if(n.shapeFlag&32){const a=t._;a?e&&a===1?r=!1:(Ne(s,t),!e&&a===1&&delete s._):(r=!t.$stable,jd(t,s)),o=t}else t&&(qd(i,t),o={default:1});if(r)for(const a in s)!Xd(a)&&!(a in o)&&delete s[a]};function Yd(){return{app:null,config:{isNativeTag:Cm,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let ag=0;function lg(i,t){return function(n,s=null){Ut(n)||(n=Object.assign({},n)),s!=null&&!ue(s)&&(s=null);const r=Yd(),o=new Set;let a=!1;const l=r.app={_uid:ag++,_component:n,_props:s,_container:null,_context:r,_instance:null,version:Lg,get config(){return r.config},set config(c){},use(c,...h){return o.has(c)||(c&&Ut(c.install)?(o.add(c),c.install(l,...h)):Ut(c)&&(o.add(c),c(l,...h))),l},mixin(c){return r.mixins.includes(c)||r.mixins.push(c),l},component(c,h){return h?(r.components[c]=h,l):r.components[c]},directive(c,h){return h?(r.directives[c]=h,l):r.directives[c]},mount(c,h,u){if(!a){const f=on(n,s);return f.appContext=r,h&&t?t(f,c):i(f,c,u),a=!0,l._container=c,c.__vue_app__=l,Sc(f.component)||f.component.proxy}},unmount(){a&&(i(null,l._container),delete l._container.__vue_app__)},provide(c,h){return r.provides[c]=h,l}};return l}}function kl(i,t,e,n,s=!1){if(kt(i)){i.forEach((f,d)=>kl(f,t&&(kt(t)?t[d]:t),e,n,s));return}if(Fo(n)&&!s)return;const r=n.shapeFlag&4?Sc(n.component)||n.component.proxy:n.el,o=s?null:r,{i:a,r:l}=i,c=t&&t.r,h=a.refs===he?a.refs={}:a.refs,u=a.setupState;if(c!=null&&c!==l&&(be(c)?(h[c]=null,Jt(u,c)&&(u[c]=null)):Oe(c)&&(c.value=null)),Ut(l))wi(l,a,12,[o,h]);else{const f=be(l),d=Oe(l);if(f||d){const g=()=>{if(i.f){const p=f?Jt(u,l)?u[l]:h[l]:l.value;s?kt(p)&&cc(p,r):kt(p)?p.includes(r)||p.push(r):f?(h[l]=[r],Jt(u,l)&&(u[l]=h[l])):(l.value=[r],i.k&&(h[i.k]=l.value))}else f?(h[l]=o,Jt(u,l)&&(u[l]=o)):d&&(l.value=o,i.k&&(h[i.k]=o))};o?(g.id=-1,Ze(g,e)):g()}}}const Ze=I0;function cg(i){return hg(i)}function hg(i,t){const e=Om();e.__VUE__=!0;const{insert:n,remove:s,patchProp:r,createElement:o,createText:a,createComment:l,setText:c,setElementText:h,parentNode:u,nextSibling:f,setScopeId:d=Pn,insertStaticContent:g}=i,p=(v,T,z,V=null,B=null,et=null,st=!1,$=null,ut=!!T.dynamicChildren)=>{if(v===T)return;v&&!Ui(v,T)&&(V=tt(v),W(v,B,et,!0),v=null),T.patchFlag===-2&&(ut=!1,T.dynamicChildren=null);const{type:nt,ref:E,shapeFlag:M}=T;switch(nt){case oa:m(v,T,z,V);break;case Jn:_(v,T,z,V);break;case Aa:v==null&&w(T,z,V,st);break;case Tn:Q(v,T,z,V,B,et,st,$,ut);break;default:M&1?S(v,T,z,V,B,et,st,$,ut):M&6?U(v,T,z,V,B,et,st,$,ut):(M&64||M&128)&&nt.process(v,T,z,V,B,et,st,$,ut,gt)}E!=null&&B&&kl(E,v&&v.ref,et,T||v,!T)},m=(v,T,z,V)=>{if(v==null)n(T.el=a(T.children),z,V);else{const B=T.el=v.el;T.children!==v.children&&c(B,T.children)}},_=(v,T,z,V)=>{v==null?n(T.el=l(T.children||""),z,V):T.el=v.el},w=(v,T,z,V)=>{[v.el,v.anchor]=g(v.children,T,z,V,v.el,v.anchor)},x=({el:v,anchor:T},z,V)=>{let B;for(;v&&v!==T;)B=f(v),n(v,z,V),v=B;n(T,z,V)},b=({el:v,anchor:T})=>{let z;for(;v&&v!==T;)z=f(v),s(v),v=z;s(T)},S=(v,T,z,V,B,et,st,$,ut)=>{st=st||T.type==="svg",v==null?C(T,z,V,B,et,st,$,ut):A(v,T,B,et,st,$,ut)},C=(v,T,z,V,B,et,st,$)=>{let ut,nt;const{type:E,props:M,shapeFlag:k,transition:K,dirs:rt}=v;if(ut=v.el=o(v.type,et,M&&M.is,M),k&8?h(ut,v.children):k&16&&y(v.children,ut,null,V,B,et&&E!=="foreignObject",st,$),rt&&Li(v,null,V,"created"),D(ut,v,v.scopeId,st,V),M){for(const Mt in M)Mt!=="value"&&!Io(Mt)&&r(ut,Mt,null,M[Mt],et,v.children,V,B,F);"value"in M&&r(ut,"value",null,M.value),(nt=M.onVnodeBeforeMount)&&Rn(nt,V,v)}rt&&Li(v,null,V,"beforeMount");const mt=(!B||B&&!B.pendingBranch)&&K&&!K.persisted;mt&&K.beforeEnter(ut),n(ut,T,z),((nt=M&&M.onVnodeMounted)||mt||rt)&&Ze(()=>{nt&&Rn(nt,V,v),mt&&K.enter(ut),rt&&Li(v,null,V,"mounted")},B)},D=(v,T,z,V,B)=>{if(z&&d(v,z),V)for(let et=0;et<V.length;et++)d(v,V[et]);if(B){let et=B.subTree;if(T===et){const st=B.vnode;D(v,st,st.scopeId,st.slotScopeIds,B.parent)}}},y=(v,T,z,V,B,et,st,$,ut=0)=>{for(let nt=ut;nt<v.length;nt++){const E=v[nt]=$?mi(v[nt]):Dn(v[nt]);p(null,E,T,z,V,B,et,st,$)}},A=(v,T,z,V,B,et,st)=>{const $=T.el=v.el;let{patchFlag:ut,dynamicChildren:nt,dirs:E}=T;ut|=v.patchFlag&16;const M=v.props||he,k=T.props||he;let K;z&&Ri(z,!1),(K=k.onVnodeBeforeUpdate)&&Rn(K,z,T,v),E&&Li(T,v,z,"beforeUpdate"),z&&Ri(z,!0);const rt=B&&T.type!=="foreignObject";if(nt?R(v.dynamicChildren,nt,$,z,V,rt,et):st||Y(v,T,$,null,z,V,rt,et,!1),ut>0){if(ut&16)j($,T,M,k,z,V,B);else if(ut&2&&M.class!==k.class&&r($,"class",null,k.class,B),ut&4&&r($,"style",M.style,k.style,B),ut&8){const mt=T.dynamicProps;for(let Mt=0;Mt<mt.length;Mt++){const L=mt[Mt],G=M[L],bt=k[L];(bt!==G||L==="value")&&r($,L,G,bt,B,v.children,z,V,F)}}ut&1&&v.children!==T.children&&h($,T.children)}else!st&&nt==null&&j($,T,M,k,z,V,B);((K=k.onVnodeUpdated)||E)&&Ze(()=>{K&&Rn(K,z,T,v),E&&Li(T,v,z,"updated")},V)},R=(v,T,z,V,B,et,st)=>{for(let $=0;$<T.length;$++){const ut=v[$],nt=T[$],E=ut.el&&(ut.type===Tn||!Ui(ut,nt)||ut.shapeFlag&70)?u(ut.el):z;p(ut,nt,E,null,V,B,et,st,!0)}},j=(v,T,z,V,B,et,st)=>{if(z!==V){if(z!==he)for(const $ in z)!Io($)&&!($ in V)&&r(v,$,z[$],null,st,T.children,B,et,F);for(const $ in V){if(Io($))continue;const ut=V[$],nt=z[$];ut!==nt&&$!=="value"&&r(v,$,nt,ut,st,T.children,B,et,F)}"value"in V&&r(v,"value",z.value,V.value)}},Q=(v,T,z,V,B,et,st,$,ut)=>{const nt=T.el=v?v.el:a(""),E=T.anchor=v?v.anchor:a("");let{patchFlag:M,dynamicChildren:k,slotScopeIds:K}=T;K&&($=$?$.concat(K):K),v==null?(n(nt,z,V),n(E,z,V),y(T.children,z,E,B,et,st,$,ut)):M>0&&M&64&&k&&v.dynamicChildren?(R(v.dynamicChildren,k,z,B,et,st,$),(T.key!=null||B&&T===B.subTree)&&$d(v,T,!0)):Y(v,T,z,E,B,et,st,$,ut)},U=(v,T,z,V,B,et,st,$,ut)=>{T.slotScopeIds=$,v==null?T.shapeFlag&512?B.ctx.activate(T,z,V,st,ut):O(T,z,V,B,et,st,ut):J(v,T,ut)},O=(v,T,z,V,B,et,st)=>{const $=v.component=vg(v,V,B);if(sa(v)&&($.ctx.renderer=gt),Mg($),$.asyncDep){if(B&&B.registerDep($,Z),!v.el){const ut=$.subTree=on(Jn);_(null,ut,T,z)}return}Z($,v,T,z,B,et,st)},J=(v,T,z)=>{const V=T.component=v.component;if(C0(v,T,z))if(V.asyncDep&&!V.asyncResolved){it(V,T,z);return}else V.next=T,w0(V.update),V.update();else T.el=v.el,V.vnode=T},Z=(v,T,z,V,B,et,st)=>{const $=()=>{if(v.isMounted){let{next:E,bu:M,u:k,parent:K,vnode:rt}=v,mt=E,Mt;Ri(v,!1),E?(E.el=rt.el,it(v,E,st)):E=rt,M&&ba(M),(Mt=E.props&&E.props.onVnodeBeforeUpdate)&&Rn(Mt,K,E,rt),Ri(v,!0);const L=Sa(v),G=v.subTree;v.subTree=L,p(G,L,u(G.el),tt(G),v,B,et),E.el=L.el,mt===null&&L0(v,L.el),k&&Ze(k,B),(Mt=E.props&&E.props.onVnodeUpdated)&&Ze(()=>Rn(Mt,K,E,rt),B)}else{let E;const{el:M,props:k}=T,{bm:K,m:rt,parent:mt}=v,Mt=Fo(T);if(Ri(v,!1),K&&ba(K),!Mt&&(E=k&&k.onVnodeBeforeMount)&&Rn(E,mt,T),Ri(v,!0),M&&wt){const L=()=>{v.subTree=Sa(v),wt(M,v.subTree,v,B,null)};Mt?T.type.__asyncLoader().then(()=>!v.isUnmounted&&L()):L()}else{const L=v.subTree=Sa(v);p(null,L,z,V,v,B,et),T.el=L.el}if(rt&&Ze(rt,B),!Mt&&(E=k&&k.onVnodeMounted)){const L=T;Ze(()=>Rn(E,mt,L),B)}(T.shapeFlag&256||mt&&Fo(mt.vnode)&&mt.vnode.shapeFlag&256)&&v.a&&Ze(v.a,B),v.isMounted=!0,T=z=V=null}},ut=v.effect=new dc($,()=>vc(nt),v.scope),nt=v.update=()=>ut.run();nt.id=v.uid,Ri(v,!0),nt()},it=(v,T,z)=>{T.component=v;const V=v.vnode.props;v.vnode=T,v.next=null,ig(v,T.props,V,z),og(v,T.children,z),Xs(),lh(),js()},Y=(v,T,z,V,B,et,st,$,ut=!1)=>{const nt=v&&v.children,E=v?v.shapeFlag:0,M=T.children,{patchFlag:k,shapeFlag:K}=T;if(k>0){if(k&128){dt(nt,M,z,V,B,et,st,$,ut);return}else if(k&256){ft(nt,M,z,V,B,et,st,$,ut);return}}K&8?(E&16&&F(nt,B,et),M!==nt&&h(z,M)):E&16?K&16?dt(nt,M,z,V,B,et,st,$,ut):F(nt,B,et,!0):(E&8&&h(z,""),K&16&&y(M,z,V,B,et,st,$,ut))},ft=(v,T,z,V,B,et,st,$,ut)=>{v=v||Ps,T=T||Ps;const nt=v.length,E=T.length,M=Math.min(nt,E);let k;for(k=0;k<M;k++){const K=T[k]=ut?mi(T[k]):Dn(T[k]);p(v[k],K,z,null,B,et,st,$,ut)}nt>E?F(v,B,et,!0,!1,M):y(T,z,V,B,et,st,$,ut,M)},dt=(v,T,z,V,B,et,st,$,ut)=>{let nt=0;const E=T.length;let M=v.length-1,k=E-1;for(;nt<=M&&nt<=k;){const K=v[nt],rt=T[nt]=ut?mi(T[nt]):Dn(T[nt]);if(Ui(K,rt))p(K,rt,z,null,B,et,st,$,ut);else break;nt++}for(;nt<=M&&nt<=k;){const K=v[M],rt=T[k]=ut?mi(T[k]):Dn(T[k]);if(Ui(K,rt))p(K,rt,z,null,B,et,st,$,ut);else break;M--,k--}if(nt>M){if(nt<=k){const K=k+1,rt=K<E?T[K].el:V;for(;nt<=k;)p(null,T[nt]=ut?mi(T[nt]):Dn(T[nt]),z,rt,B,et,st,$,ut),nt++}}else if(nt>k)for(;nt<=M;)W(v[nt],B,et,!0),nt++;else{const K=nt,rt=nt,mt=new Map;for(nt=rt;nt<=k;nt++){const Et=T[nt]=ut?mi(T[nt]):Dn(T[nt]);Et.key!=null&&mt.set(Et.key,nt)}let Mt,L=0;const G=k-rt+1;let bt=!1,At=0;const Tt=new Array(G);for(nt=0;nt<G;nt++)Tt[nt]=0;for(nt=K;nt<=M;nt++){const Et=v[nt];if(L>=G){W(Et,B,et,!0);continue}let Ft;if(Et.key!=null)Ft=mt.get(Et.key);else for(Mt=rt;Mt<=k;Mt++)if(Tt[Mt-rt]===0&&Ui(Et,T[Mt])){Ft=Mt;break}Ft===void 0?W(Et,B,et,!0):(Tt[Ft-rt]=nt+1,Ft>=At?At=Ft:bt=!0,p(Et,T[Ft],z,null,B,et,st,$,ut),L++)}const Lt=bt?ug(Tt):Ps;for(Mt=Lt.length-1,nt=G-1;nt>=0;nt--){const Et=rt+nt,Ft=T[Et],Vt=Et+1<E?T[Et+1].el:V;Tt[nt]===0?p(null,Ft,z,Vt,B,et,st,$,ut):bt&&(Mt<0||nt!==Lt[Mt]?vt(Ft,z,Vt,2):Mt--)}}},vt=(v,T,z,V,B=null)=>{const{el:et,type:st,transition:$,children:ut,shapeFlag:nt}=v;if(nt&6){vt(v.component.subTree,T,z,V);return}if(nt&128){v.suspense.move(T,z,V);return}if(nt&64){st.move(v,T,z,gt);return}if(st===Tn){n(et,T,z);for(let M=0;M<ut.length;M++)vt(ut[M],T,z,V);n(v.anchor,T,z);return}if(st===Aa){x(v,T,z);return}if(V!==2&&nt&1&&$)if(V===0)$.beforeEnter(et),n(et,T,z),Ze(()=>$.enter(et),B);else{const{leave:M,delayLeave:k,afterLeave:K}=$,rt=()=>n(et,T,z),mt=()=>{M(et,()=>{rt(),K&&K()})};k?k(et,rt,mt):mt()}else n(et,T,z)},W=(v,T,z,V=!1,B=!1)=>{const{type:et,props:st,ref:$,children:ut,dynamicChildren:nt,shapeFlag:E,patchFlag:M,dirs:k}=v;if($!=null&&kl($,null,z,v,!0),E&256){T.ctx.deactivate(v);return}const K=E&1&&k,rt=!Fo(v);let mt;if(rt&&(mt=st&&st.onVnodeBeforeUnmount)&&Rn(mt,T,v),E&6)N(v.component,z,V);else{if(E&128){v.suspense.unmount(z,V);return}K&&Li(v,null,T,"beforeUnmount"),E&64?v.type.remove(v,T,z,B,gt,V):nt&&(et!==Tn||M>0&&M&64)?F(nt,T,z,!1,!0):(et===Tn&&M&384||!B&&E&16)&&F(ut,T,z),V&&ot(v)}(rt&&(mt=st&&st.onVnodeUnmounted)||K)&&Ze(()=>{mt&&Rn(mt,T,v),K&&Li(v,null,T,"unmounted")},z)},ot=v=>{const{type:T,el:z,anchor:V,transition:B}=v;if(T===Tn){yt(z,V);return}if(T===Aa){b(v);return}const et=()=>{s(z),B&&!B.persisted&&B.afterLeave&&B.afterLeave()};if(v.shapeFlag&1&&B&&!B.persisted){const{leave:st,delayLeave:$}=B,ut=()=>st(z,et);$?$(v.el,et,ut):ut()}else et()},yt=(v,T)=>{let z;for(;v!==T;)z=f(v),s(v),v=z;s(T)},N=(v,T,z)=>{const{bum:V,scope:B,update:et,subTree:st,um:$}=v;V&&ba(V),B.stop(),et&&(et.active=!1,W(st,v,T,z)),$&&Ze($,T),Ze(()=>{v.isUnmounted=!0},T),T&&T.pendingBranch&&!T.isUnmounted&&v.asyncDep&&!v.asyncResolved&&v.suspenseId===T.pendingId&&(T.deps--,T.deps===0&&T.resolve())},F=(v,T,z,V=!1,B=!1,et=0)=>{for(let st=et;st<v.length;st++)W(v[st],T,z,V,B)},tt=v=>v.shapeFlag&6?tt(v.component.subTree):v.shapeFlag&128?v.suspense.next():f(v.anchor||v.el),ct=(v,T,z)=>{v==null?T._vnode&&W(T._vnode,null,null,!0):p(T._vnode||null,v,T,null,null,null,z),lh(),Pd(),T._vnode=v},gt={p,um:W,m:vt,r:ot,mt:O,mc:y,pc:Y,pbc:R,n:tt,o:i};let pt,wt;return t&&([pt,wt]=t(gt)),{render:ct,hydrate:pt,createApp:lg(ct,pt)}}function Ri({effect:i,update:t},e){i.allowRecurse=t.allowRecurse=e}function $d(i,t,e=!1){const n=i.children,s=t.children;if(kt(n)&&kt(s))for(let r=0;r<n.length;r++){const o=n[r];let a=s[r];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=s[r]=mi(s[r]),a.el=o.el),e||$d(o,a)),a.type===oa&&(a.el=o.el)}}function ug(i){const t=i.slice(),e=[0];let n,s,r,o,a;const l=i.length;for(n=0;n<l;n++){const c=i[n];if(c!==0){if(s=e[e.length-1],i[s]<c){t[n]=s,e.push(n);continue}for(r=0,o=e.length-1;r<o;)a=r+o>>1,i[e[a]]<c?r=a+1:o=a;c<i[e[r]]&&(r>0&&(t[n]=e[r-1]),e[r]=n)}}for(r=e.length,o=e[r-1];r-- >0;)e[r]=o,o=t[o];return e}const fg=i=>i.__isTeleport,Tn=Symbol(void 0),oa=Symbol(void 0),Jn=Symbol(void 0),Aa=Symbol(void 0),yr=[];let An=null;function _i(i=!1){yr.push(An=i?null:[])}function dg(){yr.pop(),An=yr[yr.length-1]||null}let Lr=1;function yh(i){Lr+=i}function Zd(i){return i.dynamicChildren=Lr>0?An||Ps:null,dg(),Lr>0&&An&&An.push(i),i}function Vi(i,t,e,n,s,r){return Zd(ni(i,t,e,n,s,r,!0))}function pg(i,t,e,n,s){return Zd(on(i,t,e,n,s,!0))}function Ul(i){return i?i.__v_isVNode===!0:!1}function Ui(i,t){return i.type===t.type&&i.key===t.key}const aa="__vInternal",Kd=({key:i})=>i??null,Oo=({ref:i,ref_key:t,ref_for:e})=>i!=null?be(i)||Oe(i)||Ut(i)?{i:pn,r:i,k:t,f:!!e}:i:null;function ni(i,t=null,e=null,n=0,s=null,r=i===Tn?0:1,o=!1,a=!1){const l={__v_isVNode:!0,__v_skip:!0,type:i,props:t,key:t&&Kd(t),ref:t&&Oo(t),scopeId:ia,slotScopeIds:null,children:e,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:r,patchFlag:n,dynamicProps:s,dynamicChildren:null,appContext:null,ctx:pn};return a?(bc(l,e),r&128&&i.normalize(l)):e&&(l.shapeFlag|=be(e)?8:16),Lr>0&&!o&&An&&(l.patchFlag>0||r&6)&&l.patchFlag!==32&&An.push(l),l}const on=mg;function mg(i,t=null,e=null,n=0,s=null,r=!1){if((!i||i===q0)&&(i=Jn),Ul(i)){const a=Si(i,t,!0);return e&&bc(a,e),Lr>0&&!r&&An&&(a.shapeFlag&6?An[An.indexOf(i)]=a:An.push(a)),a.patchFlag|=-2,a}if(Ag(i)&&(i=i.__vccOpts),t){t=gg(t);let{class:a,style:l}=t;a&&!be(a)&&(t.class=ac(a)),ue(l)&&(xd(l)&&!kt(l)&&(l=Ne({},l)),t.style=oc(l))}const o=be(i)?1:R0(i)?128:fg(i)?64:ue(i)?4:Ut(i)?2:0;return ni(i,t,e,n,s,o,r,!0)}function gg(i){return i?xd(i)||aa in i?Ne({},i):i:null}function Si(i,t,e=!1){const{props:n,ref:s,patchFlag:r,children:o}=i,a=t?_g(n||{},t):n;return{__v_isVNode:!0,__v_skip:!0,type:i.type,props:a,key:a&&Kd(a),ref:t&&t.ref?e&&s?kt(s)?s.concat(Oo(t)):[s,Oo(t)]:Oo(t):s,scopeId:i.scopeId,slotScopeIds:i.slotScopeIds,children:o,target:i.target,targetAnchor:i.targetAnchor,staticCount:i.staticCount,shapeFlag:i.shapeFlag,patchFlag:t&&i.type!==Tn?r===-1?16:r|16:r,dynamicProps:i.dynamicProps,dynamicChildren:i.dynamicChildren,appContext:i.appContext,dirs:i.dirs,transition:i.transition,component:i.component,suspense:i.suspense,ssContent:i.ssContent&&Si(i.ssContent),ssFallback:i.ssFallback&&Si(i.ssFallback),el:i.el,anchor:i.anchor,ctx:i.ctx,ce:i.ce}}function Jd(i=" ",t=0){return on(oa,null,i,t)}function Dn(i){return i==null||typeof i=="boolean"?on(Jn):kt(i)?on(Tn,null,i.slice()):typeof i=="object"?mi(i):on(oa,null,String(i))}function mi(i){return i.el===null&&i.patchFlag!==-1||i.memo?i:Si(i)}function bc(i,t){let e=0;const{shapeFlag:n}=i;if(t==null)t=null;else if(kt(t))e=16;else if(typeof t=="object")if(n&65){const s=t.default;s&&(s._c&&(s._d=!1),bc(i,s()),s._c&&(s._d=!0));return}else{e=32;const s=t._;!s&&!(aa in t)?t._ctx=pn:s===3&&pn&&(pn.slots._===1?t._=1:(t._=2,i.patchFlag|=1024))}else Ut(t)?(t={default:t,_ctx:pn},e=32):(t=String(t),n&64?(e=16,t=[Jd(t)]):e=8);i.children=t,i.shapeFlag|=e}function _g(...i){const t={};for(let e=0;e<i.length;e++){const n=i[e];for(const s in n)if(s==="class")t.class!==n.class&&(t.class=ac([t.class,n.class]));else if(s==="style")t.style=oc([t.style,n.style]);else if(Zo(s)){const r=t[s],o=n[s];o&&r!==o&&!(kt(r)&&r.includes(o))&&(t[s]=r?[].concat(r,o):o)}else s!==""&&(t[s]=n[s])}return t}function Rn(i,t,e,n=null){_n(i,t,7,[e,n])}const xg=Yd();let yg=0;function vg(i,t,e){const n=i.type,s=(t?t.appContext:i.appContext)||xg,r={uid:yg++,vnode:i,type:n,parent:t,appContext:s,root:null,next:null,subTree:null,effect:null,update:null,scope:new Nm(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(s.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Wd(n,s),emitsOptions:Ld(n,s),emit:null,emitted:null,propsDefaults:he,inheritAttrs:n.inheritAttrs,ctx:he,data:he,props:he,attrs:he,slots:he,refs:he,setupState:he,setupContext:null,suspense:e,suspenseId:e?e.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return r.ctx={_:r},r.root=t?t.root:r,r.emit=S0.bind(null,r),i.ce&&i.ce(r),r}let ge=null;const wg=()=>ge||pn,Ns=i=>{ge=i,i.scope.on()},Xi=()=>{ge&&ge.scope.off(),ge=null};function Qd(i){return i.vnode.shapeFlag&4}let Rr=!1;function Mg(i,t=!1){Rr=t;const{props:e,children:n}=i.vnode,s=Qd(i);ng(i,e,s,t),rg(i,n);const r=s?bg(i,t):void 0;return Rr=!1,r}function bg(i,t){const e=i.type;i.accessCache=Object.create(null),i.proxy=yd(new Proxy(i.ctx,Z0));const{setup:n}=e;if(n){const s=i.setupContext=n.length>1?Tg(i):null;Ns(i),Xs();const r=wi(n,i,0,[i.props,s]);if(js(),Xi(),sd(r)){if(r.then(Xi,Xi),t)return r.then(o=>{vh(i,o,t)}).catch(o=>{ea(o,i,0)});i.asyncDep=r}else vh(i,r,t)}else tp(i,t)}function vh(i,t,e){Ut(t)?i.type.__ssrInlineRender?i.ssrRender=t:i.render=t:ue(t)&&(i.setupState=bd(t)),tp(i,e)}let wh;function tp(i,t,e){const n=i.type;if(!i.render){if(!t&&wh&&!n.render){const s=n.template||wc(i).template;if(s){const{isCustomElement:r,compilerOptions:o}=i.appContext.config,{delimiters:a,compilerOptions:l}=n,c=Ne(Ne({isCustomElement:r,delimiters:a},o),l);n.render=wh(s,c)}}i.render=n.render||Pn}Ns(i),Xs(),K0(i),js(),Xi()}function Sg(i){return new Proxy(i.attrs,{get(t,e){return Je(i,"get","$attrs"),t[e]}})}function Tg(i){const t=n=>{i.exposed=n||{}};let e;return{get attrs(){return e||(e=Sg(i))},slots:i.slots,emit:i.emit,expose:t}}function Sc(i){if(i.exposed)return i.exposeProxy||(i.exposeProxy=new Proxy(bd(yd(i.exposed)),{get(t,e){if(e in t)return t[e];if(e in xr)return xr[e](i)},has(t,e){return e in t||e in xr}}))}function Eg(i,t=!0){return Ut(i)?i.displayName||i.name:i.name||t&&i.__name}function Ag(i){return Ut(i)&&"__vccOpts"in i}const un=(i,t)=>x0(i,t,Rr);function ep(i,t,e){const n=arguments.length;return n===2?ue(t)&&!kt(t)?Ul(t)?on(i,null,[t]):on(i,t):on(i,null,t):(n>3?e=Array.prototype.slice.call(arguments,2):n===3&&Ul(e)&&(e=[e]),on(i,t,e))}const Pg=Symbol(""),Cg=()=>Kn(Pg),Lg="3.2.47",Rg="http://www.w3.org/2000/svg",Bi=typeof document<"u"?document:null,Mh=Bi&&Bi.createElement("template"),Ig={insert:(i,t,e)=>{t.insertBefore(i,e||null)},remove:i=>{const t=i.parentNode;t&&t.removeChild(i)},createElement:(i,t,e,n)=>{const s=t?Bi.createElementNS(Rg,i):Bi.createElement(i,e?{is:e}:void 0);return i==="select"&&n&&n.multiple!=null&&s.setAttribute("multiple",n.multiple),s},createText:i=>Bi.createTextNode(i),createComment:i=>Bi.createComment(i),setText:(i,t)=>{i.nodeValue=t},setElementText:(i,t)=>{i.textContent=t},parentNode:i=>i.parentNode,nextSibling:i=>i.nextSibling,querySelector:i=>Bi.querySelector(i),setScopeId(i,t){i.setAttribute(t,"")},insertStaticContent(i,t,e,n,s,r){const o=e?e.previousSibling:t.lastChild;if(s&&(s===r||s.nextSibling))for(;t.insertBefore(s.cloneNode(!0),e),!(s===r||!(s=s.nextSibling)););else{Mh.innerHTML=n?`<svg>${i}</svg>`:i;const a=Mh.content;if(n){const l=a.firstChild;for(;l.firstChild;)a.appendChild(l.firstChild);a.removeChild(l)}t.insertBefore(a,e)}return[o?o.nextSibling:t.firstChild,e?e.previousSibling:t.lastChild]}};function Dg(i,t,e){const n=i._vtc;n&&(t=(t?[t,...n]:[...n]).join(" ")),t==null?i.removeAttribute("class"):e?i.setAttribute("class",t):i.className=t}function zg(i,t,e){const n=i.style,s=be(e);if(e&&!s){if(t&&!be(t))for(const r in t)e[r]==null&&Bl(n,r,"");for(const r in e)Bl(n,r,e[r])}else{const r=n.display;s?t!==e&&(n.cssText=e):t&&i.removeAttribute("style"),"_vod"in i&&(n.display=r)}}const bh=/\s*!important$/;function Bl(i,t,e){if(kt(e))e.forEach(n=>Bl(i,t,n));else if(e==null&&(e=""),t.startsWith("--"))i.setProperty(t,e);else{const n=Fg(i,t);bh.test(e)?i.setProperty(Ws(n),e.replace(bh,""),"important"):i[n]=e}}const Sh=["Webkit","Moz","ms"],Pa={};function Fg(i,t){const e=Pa[t];if(e)return e;let n=kn(t);if(n!=="filter"&&n in i)return Pa[t]=n;n=Qo(n);for(let s=0;s<Sh.length;s++){const r=Sh[s]+n;if(r in i)return Pa[t]=r}return t}const Th="http://www.w3.org/1999/xlink";function Og(i,t,e,n,s){if(n&&t.startsWith("xlink:"))e==null?i.removeAttributeNS(Th,t.slice(6,t.length)):i.setAttributeNS(Th,t,e);else{const r=Am(t);e==null||r&&!ed(e)?i.removeAttribute(t):i.setAttribute(t,r?"":e)}}function Ng(i,t,e,n,s,r,o){if(t==="innerHTML"||t==="textContent"){n&&o(n,s,r),i[t]=e??"";return}if(t==="value"&&i.tagName!=="PROGRESS"&&!i.tagName.includes("-")){i._value=e;const l=e??"";(i.value!==l||i.tagName==="OPTION")&&(i.value=l),e==null&&i.removeAttribute(t);return}let a=!1;if(e===""||e==null){const l=typeof i[t];l==="boolean"?e=ed(e):e==null&&l==="string"?(e="",a=!0):l==="number"&&(e=0,a=!0)}try{i[t]=e}catch{}a&&i.removeAttribute(t)}function kg(i,t,e,n){i.addEventListener(t,e,n)}function Ug(i,t,e,n){i.removeEventListener(t,e,n)}function Bg(i,t,e,n,s=null){const r=i._vei||(i._vei={}),o=r[t];if(n&&o)o.value=n;else{const[a,l]=Hg(t);if(n){const c=r[t]=Wg(n,s);kg(i,a,c,l)}else o&&(Ug(i,a,o,l),r[t]=void 0)}}const Eh=/(?:Once|Passive|Capture)$/;function Hg(i){let t;if(Eh.test(i)){t={};let n;for(;n=i.match(Eh);)i=i.slice(0,i.length-n[0].length),t[n[0].toLowerCase()]=!0}return[i[2]===":"?i.slice(3):Ws(i.slice(2)),t]}let Ca=0;const Vg=Promise.resolve(),Gg=()=>Ca||(Vg.then(()=>Ca=0),Ca=Date.now());function Wg(i,t){const e=n=>{if(!n._vts)n._vts=Date.now();else if(n._vts<=e.attached)return;_n(Xg(n,e.value),t,5,[n])};return e.value=i,e.attached=Gg(),e}function Xg(i,t){if(kt(t)){const e=i.stopImmediatePropagation;return i.stopImmediatePropagation=()=>{e.call(i),i._stopped=!0},t.map(n=>s=>!s._stopped&&n&&n(s))}else return t}const Ah=/^on[a-z]/,jg=(i,t,e,n,s=!1,r,o,a,l)=>{t==="class"?Dg(i,n,s):t==="style"?zg(i,e,n):Zo(t)?lc(t)||Bg(i,t,e,n,o):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):qg(i,t,n,s))?Ng(i,t,n,r,o,a,l):(t==="true-value"?i._trueValue=n:t==="false-value"&&(i._falseValue=n),Og(i,t,n,s))};function qg(i,t,e,n){return n?!!(t==="innerHTML"||t==="textContent"||t in i&&Ah.test(t)&&Ut(e)):t==="spellcheck"||t==="draggable"||t==="translate"||t==="form"||t==="list"&&i.tagName==="INPUT"||t==="type"&&i.tagName==="TEXTAREA"||Ah.test(t)&&be(e)?!1:t in i}const Yg={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String};O0.props;const $g=Ne({patchProp:jg},Ig);let Ph;function Zg(){return Ph||(Ph=cg($g))}const Kg=(...i)=>{const t=Zg().createApp(...i),{mount:e}=t;return t.mount=n=>{const s=Jg(n);if(!s)return;const r=t._component;!Ut(r)&&!r.render&&!r.template&&(r.template=s.innerHTML),s.innerHTML="";const o=e(s,!1,s instanceof SVGElement);return s instanceof Element&&(s.removeAttribute("v-cloak"),s.setAttribute("data-v-app","")),o},t};function Jg(i){return be(i)?document.querySelector(i):i}/*!
  * vue-router v4.1.6
  * (c) 2022 Eduardo San Martin Morote
  * @license MIT
  */const Ms=typeof window<"u";function Qg(i){return i.__esModule||i[Symbol.toStringTag]==="Module"}const re=Object.assign;function La(i,t){const e={};for(const n in t){const s=t[n];e[n]=Cn(s)?s.map(i):i(s)}return e}const vr=()=>{},Cn=Array.isArray,t_=/\/$/,e_=i=>i.replace(t_,"");function Ra(i,t,e="/"){let n,s={},r="",o="";const a=t.indexOf("#");let l=t.indexOf("?");return a<l&&a>=0&&(l=-1),l>-1&&(n=t.slice(0,l),r=t.slice(l+1,a>-1?a:t.length),s=i(r)),a>-1&&(n=n||t.slice(0,a),o=t.slice(a,t.length)),n=r_(n??t,e),{fullPath:n+(r&&"?")+r+o,path:n,query:s,hash:o}}function n_(i,t){const e=t.query?i(t.query):"";return t.path+(e&&"?")+e+(t.hash||"")}function Ch(i,t){return!t||!i.toLowerCase().startsWith(t.toLowerCase())?i:i.slice(t.length)||"/"}function i_(i,t,e){const n=t.matched.length-1,s=e.matched.length-1;return n>-1&&n===s&&ks(t.matched[n],e.matched[s])&&np(t.params,e.params)&&i(t.query)===i(e.query)&&t.hash===e.hash}function ks(i,t){return(i.aliasOf||i)===(t.aliasOf||t)}function np(i,t){if(Object.keys(i).length!==Object.keys(t).length)return!1;for(const e in i)if(!s_(i[e],t[e]))return!1;return!0}function s_(i,t){return Cn(i)?Lh(i,t):Cn(t)?Lh(t,i):i===t}function Lh(i,t){return Cn(t)?i.length===t.length&&i.every((e,n)=>e===t[n]):i.length===1&&i[0]===t}function r_(i,t){if(i.startsWith("/"))return i;if(!i)return t;const e=t.split("/"),n=i.split("/");let s=e.length-1,r,o;for(r=0;r<n.length;r++)if(o=n[r],o!==".")if(o==="..")s>1&&s--;else break;return e.slice(0,s).join("/")+"/"+n.slice(r-(r===n.length?1:0)).join("/")}var Ir;(function(i){i.pop="pop",i.push="push"})(Ir||(Ir={}));var wr;(function(i){i.back="back",i.forward="forward",i.unknown=""})(wr||(wr={}));function o_(i){if(!i)if(Ms){const t=document.querySelector("base");i=t&&t.getAttribute("href")||"/",i=i.replace(/^\w+:\/\/[^\/]+/,"")}else i="/";return i[0]!=="/"&&i[0]!=="#"&&(i="/"+i),e_(i)}const a_=/^[^#]+#/;function l_(i,t){return i.replace(a_,"#")+t}function c_(i,t){const e=document.documentElement.getBoundingClientRect(),n=i.getBoundingClientRect();return{behavior:t.behavior,left:n.left-e.left-(t.left||0),top:n.top-e.top-(t.top||0)}}const la=()=>({left:window.pageXOffset,top:window.pageYOffset});function h_(i){let t;if("el"in i){const e=i.el,n=typeof e=="string"&&e.startsWith("#"),s=typeof e=="string"?n?document.getElementById(e.slice(1)):document.querySelector(e):e;if(!s)return;t=c_(s,i)}else t=i;"scrollBehavior"in document.documentElement.style?window.scrollTo(t):window.scrollTo(t.left!=null?t.left:window.pageXOffset,t.top!=null?t.top:window.pageYOffset)}function Rh(i,t){return(history.state?history.state.position-t:-1)+i}const Hl=new Map;function u_(i,t){Hl.set(i,t)}function f_(i){const t=Hl.get(i);return Hl.delete(i),t}let d_=()=>location.protocol+"//"+location.host;function ip(i,t){const{pathname:e,search:n,hash:s}=t,r=i.indexOf("#");if(r>-1){let a=s.includes(i.slice(r))?i.slice(r).length:1,l=s.slice(a);return l[0]!=="/"&&(l="/"+l),Ch(l,"")}return Ch(e,i)+n+s}function p_(i,t,e,n){let s=[],r=[],o=null;const a=({state:f})=>{const d=ip(i,location),g=e.value,p=t.value;let m=0;if(f){if(e.value=d,t.value=f,o&&o===g){o=null;return}m=p?f.position-p.position:0}else n(d);s.forEach(_=>{_(e.value,g,{delta:m,type:Ir.pop,direction:m?m>0?wr.forward:wr.back:wr.unknown})})};function l(){o=e.value}function c(f){s.push(f);const d=()=>{const g=s.indexOf(f);g>-1&&s.splice(g,1)};return r.push(d),d}function h(){const{history:f}=window;f.state&&f.replaceState(re({},f.state,{scroll:la()}),"")}function u(){for(const f of r)f();r=[],window.removeEventListener("popstate",a),window.removeEventListener("beforeunload",h)}return window.addEventListener("popstate",a),window.addEventListener("beforeunload",h),{pauseListeners:l,listen:c,destroy:u}}function Ih(i,t,e,n=!1,s=!1){return{back:i,current:t,forward:e,replaced:n,position:window.history.length,scroll:s?la():null}}function m_(i){const{history:t,location:e}=window,n={value:ip(i,e)},s={value:t.state};s.value||r(n.value,{back:null,current:n.value,forward:null,position:t.length-1,replaced:!0,scroll:null},!0);function r(l,c,h){const u=i.indexOf("#"),f=u>-1?(e.host&&document.querySelector("base")?i:i.slice(u))+l:d_()+i+l;try{t[h?"replaceState":"pushState"](c,"",f),s.value=c}catch(d){console.error(d),e[h?"replace":"assign"](f)}}function o(l,c){const h=re({},t.state,Ih(s.value.back,l,s.value.forward,!0),c,{position:s.value.position});r(l,h,!0),n.value=l}function a(l,c){const h=re({},s.value,t.state,{forward:l,scroll:la()});r(h.current,h,!0);const u=re({},Ih(n.value,l,null),{position:h.position+1},c);r(l,u,!1),n.value=l}return{location:n,state:s,push:a,replace:o}}function g_(i){i=o_(i);const t=m_(i),e=p_(i,t.state,t.location,t.replace);function n(r,o=!0){o||e.pauseListeners(),history.go(r)}const s=re({location:"",base:i,go:n,createHref:l_.bind(null,i)},t,e);return Object.defineProperty(s,"location",{enumerable:!0,get:()=>t.location.value}),Object.defineProperty(s,"state",{enumerable:!0,get:()=>t.state.value}),s}function __(i){return i=location.host?i||location.pathname+location.search:"",i.includes("#")||(i+="#"),g_(i)}function x_(i){return typeof i=="string"||i&&typeof i=="object"}function sp(i){return typeof i=="string"||typeof i=="symbol"}const li={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},rp=Symbol("");var Dh;(function(i){i[i.aborted=4]="aborted",i[i.cancelled=8]="cancelled",i[i.duplicated=16]="duplicated"})(Dh||(Dh={}));function Us(i,t){return re(new Error,{type:i,[rp]:!0},t)}function Gn(i,t){return i instanceof Error&&rp in i&&(t==null||!!(i.type&t))}const zh="[^/]+?",y_={sensitive:!1,strict:!1,start:!0,end:!0},v_=/[.+*?^${}()[\]/\\]/g;function w_(i,t){const e=re({},y_,t),n=[];let s=e.start?"^":"";const r=[];for(const c of i){const h=c.length?[]:[90];e.strict&&!c.length&&(s+="/");for(let u=0;u<c.length;u++){const f=c[u];let d=40+(e.sensitive?.25:0);if(f.type===0)u||(s+="/"),s+=f.value.replace(v_,"\\$&"),d+=40;else if(f.type===1){const{value:g,repeatable:p,optional:m,regexp:_}=f;r.push({name:g,repeatable:p,optional:m});const w=_||zh;if(w!==zh){d+=10;try{new RegExp(`(${w})`)}catch(b){throw new Error(`Invalid custom RegExp for param "${g}" (${w}): `+b.message)}}let x=p?`((?:${w})(?:/(?:${w}))*)`:`(${w})`;u||(x=m&&c.length<2?`(?:/${x})`:"/"+x),m&&(x+="?"),s+=x,d+=20,m&&(d+=-8),p&&(d+=-20),w===".*"&&(d+=-50)}h.push(d)}n.push(h)}if(e.strict&&e.end){const c=n.length-1;n[c][n[c].length-1]+=.7000000000000001}e.strict||(s+="/?"),e.end?s+="$":e.strict&&(s+="(?:/|$)");const o=new RegExp(s,e.sensitive?"":"i");function a(c){const h=c.match(o),u={};if(!h)return null;for(let f=1;f<h.length;f++){const d=h[f]||"",g=r[f-1];u[g.name]=d&&g.repeatable?d.split("/"):d}return u}function l(c){let h="",u=!1;for(const f of i){(!u||!h.endsWith("/"))&&(h+="/"),u=!1;for(const d of f)if(d.type===0)h+=d.value;else if(d.type===1){const{value:g,repeatable:p,optional:m}=d,_=g in c?c[g]:"";if(Cn(_)&&!p)throw new Error(`Provided param "${g}" is an array but it is not repeatable (* or + modifiers)`);const w=Cn(_)?_.join("/"):_;if(!w)if(m)f.length<2&&(h.endsWith("/")?h=h.slice(0,-1):u=!0);else throw new Error(`Missing required param "${g}"`);h+=w}}return h||"/"}return{re:o,score:n,keys:r,parse:a,stringify:l}}function M_(i,t){let e=0;for(;e<i.length&&e<t.length;){const n=t[e]-i[e];if(n)return n;e++}return i.length<t.length?i.length===1&&i[0]===40+40?-1:1:i.length>t.length?t.length===1&&t[0]===40+40?1:-1:0}function b_(i,t){let e=0;const n=i.score,s=t.score;for(;e<n.length&&e<s.length;){const r=M_(n[e],s[e]);if(r)return r;e++}if(Math.abs(s.length-n.length)===1){if(Fh(n))return 1;if(Fh(s))return-1}return s.length-n.length}function Fh(i){const t=i[i.length-1];return i.length>0&&t[t.length-1]<0}const S_={type:0,value:""},T_=/[a-zA-Z0-9_]/;function E_(i){if(!i)return[[]];if(i==="/")return[[S_]];if(!i.startsWith("/"))throw new Error(`Invalid path "${i}"`);function t(d){throw new Error(`ERR (${e})/"${c}": ${d}`)}let e=0,n=e;const s=[];let r;function o(){r&&s.push(r),r=[]}let a=0,l,c="",h="";function u(){c&&(e===0?r.push({type:0,value:c}):e===1||e===2||e===3?(r.length>1&&(l==="*"||l==="+")&&t(`A repeatable param (${c}) must be alone in its segment. eg: '/:ids+.`),r.push({type:1,value:c,regexp:h,repeatable:l==="*"||l==="+",optional:l==="*"||l==="?"})):t("Invalid state to consume buffer"),c="")}function f(){c+=l}for(;a<i.length;){if(l=i[a++],l==="\\"&&e!==2){n=e,e=4;continue}switch(e){case 0:l==="/"?(c&&u(),o()):l===":"?(u(),e=1):f();break;case 4:f(),e=n;break;case 1:l==="("?e=2:T_.test(l)?f():(u(),e=0,l!=="*"&&l!=="?"&&l!=="+"&&a--);break;case 2:l===")"?h[h.length-1]=="\\"?h=h.slice(0,-1)+l:e=3:h+=l;break;case 3:u(),e=0,l!=="*"&&l!=="?"&&l!=="+"&&a--,h="";break;default:t("Unknown state");break}}return e===2&&t(`Unfinished custom RegExp for param "${c}"`),u(),o(),s}function A_(i,t,e){const n=w_(E_(i.path),e),s=re(n,{record:i,parent:t,children:[],alias:[]});return t&&!s.record.aliasOf==!t.record.aliasOf&&t.children.push(s),s}function P_(i,t){const e=[],n=new Map;t=kh({strict:!1,end:!0,sensitive:!1},t);function s(h){return n.get(h)}function r(h,u,f){const d=!f,g=C_(h);g.aliasOf=f&&f.record;const p=kh(t,h),m=[g];if("alias"in h){const x=typeof h.alias=="string"?[h.alias]:h.alias;for(const b of x)m.push(re({},g,{components:f?f.record.components:g.components,path:b,aliasOf:f?f.record:g}))}let _,w;for(const x of m){const{path:b}=x;if(u&&b[0]!=="/"){const S=u.record.path,C=S[S.length-1]==="/"?"":"/";x.path=u.record.path+(b&&C+b)}if(_=A_(x,u,p),f?f.alias.push(_):(w=w||_,w!==_&&w.alias.push(_),d&&h.name&&!Nh(_)&&o(h.name)),g.children){const S=g.children;for(let C=0;C<S.length;C++)r(S[C],_,f&&f.children[C])}f=f||_,(_.record.components&&Object.keys(_.record.components).length||_.record.name||_.record.redirect)&&l(_)}return w?()=>{o(w)}:vr}function o(h){if(sp(h)){const u=n.get(h);u&&(n.delete(h),e.splice(e.indexOf(u),1),u.children.forEach(o),u.alias.forEach(o))}else{const u=e.indexOf(h);u>-1&&(e.splice(u,1),h.record.name&&n.delete(h.record.name),h.children.forEach(o),h.alias.forEach(o))}}function a(){return e}function l(h){let u=0;for(;u<e.length&&b_(h,e[u])>=0&&(h.record.path!==e[u].record.path||!op(h,e[u]));)u++;e.splice(u,0,h),h.record.name&&!Nh(h)&&n.set(h.record.name,h)}function c(h,u){let f,d={},g,p;if("name"in h&&h.name){if(f=n.get(h.name),!f)throw Us(1,{location:h});p=f.record.name,d=re(Oh(u.params,f.keys.filter(w=>!w.optional).map(w=>w.name)),h.params&&Oh(h.params,f.keys.map(w=>w.name))),g=f.stringify(d)}else if("path"in h)g=h.path,f=e.find(w=>w.re.test(g)),f&&(d=f.parse(g),p=f.record.name);else{if(f=u.name?n.get(u.name):e.find(w=>w.re.test(u.path)),!f)throw Us(1,{location:h,currentLocation:u});p=f.record.name,d=re({},u.params,h.params),g=f.stringify(d)}const m=[];let _=f;for(;_;)m.unshift(_.record),_=_.parent;return{name:p,path:g,params:d,matched:m,meta:R_(m)}}return i.forEach(h=>r(h)),{addRoute:r,resolve:c,removeRoute:o,getRoutes:a,getRecordMatcher:s}}function Oh(i,t){const e={};for(const n of t)n in i&&(e[n]=i[n]);return e}function C_(i){return{path:i.path,redirect:i.redirect,name:i.name,meta:i.meta||{},aliasOf:void 0,beforeEnter:i.beforeEnter,props:L_(i),children:i.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in i?i.components||null:i.component&&{default:i.component}}}function L_(i){const t={},e=i.props||!1;if("component"in i)t.default=e;else for(const n in i.components)t[n]=typeof e=="boolean"?e:e[n];return t}function Nh(i){for(;i;){if(i.record.aliasOf)return!0;i=i.parent}return!1}function R_(i){return i.reduce((t,e)=>re(t,e.meta),{})}function kh(i,t){const e={};for(const n in i)e[n]=n in t?t[n]:i[n];return e}function op(i,t){return t.children.some(e=>e===i||op(i,e))}const ap=/#/g,I_=/&/g,D_=/\//g,z_=/=/g,F_=/\?/g,lp=/\+/g,O_=/%5B/g,N_=/%5D/g,cp=/%5E/g,k_=/%60/g,hp=/%7B/g,U_=/%7C/g,up=/%7D/g,B_=/%20/g;function Tc(i){return encodeURI(""+i).replace(U_,"|").replace(O_,"[").replace(N_,"]")}function H_(i){return Tc(i).replace(hp,"{").replace(up,"}").replace(cp,"^")}function Vl(i){return Tc(i).replace(lp,"%2B").replace(B_,"+").replace(ap,"%23").replace(I_,"%26").replace(k_,"`").replace(hp,"{").replace(up,"}").replace(cp,"^")}function V_(i){return Vl(i).replace(z_,"%3D")}function G_(i){return Tc(i).replace(ap,"%23").replace(F_,"%3F")}function W_(i){return i==null?"":G_(i).replace(D_,"%2F")}function Wo(i){try{return decodeURIComponent(""+i)}catch{}return""+i}function X_(i){const t={};if(i===""||i==="?")return t;const n=(i[0]==="?"?i.slice(1):i).split("&");for(let s=0;s<n.length;++s){const r=n[s].replace(lp," "),o=r.indexOf("="),a=Wo(o<0?r:r.slice(0,o)),l=o<0?null:Wo(r.slice(o+1));if(a in t){let c=t[a];Cn(c)||(c=t[a]=[c]),c.push(l)}else t[a]=l}return t}function Uh(i){let t="";for(let e in i){const n=i[e];if(e=V_(e),n==null){n!==void 0&&(t+=(t.length?"&":"")+e);continue}(Cn(n)?n.map(r=>r&&Vl(r)):[n&&Vl(n)]).forEach(r=>{r!==void 0&&(t+=(t.length?"&":"")+e,r!=null&&(t+="="+r))})}return t}function j_(i){const t={};for(const e in i){const n=i[e];n!==void 0&&(t[e]=Cn(n)?n.map(s=>s==null?null:""+s):n==null?n:""+n)}return t}const q_=Symbol(""),Bh=Symbol(""),Ec=Symbol(""),fp=Symbol(""),Gl=Symbol("");function er(){let i=[];function t(n){return i.push(n),()=>{const s=i.indexOf(n);s>-1&&i.splice(s,1)}}function e(){i=[]}return{add:t,list:()=>i,reset:e}}function gi(i,t,e,n,s){const r=n&&(n.enterCallbacks[s]=n.enterCallbacks[s]||[]);return()=>new Promise((o,a)=>{const l=u=>{u===!1?a(Us(4,{from:e,to:t})):u instanceof Error?a(u):x_(u)?a(Us(2,{from:t,to:u})):(r&&n.enterCallbacks[s]===r&&typeof u=="function"&&r.push(u),o())},c=i.call(n&&n.instances[s],t,e,l);let h=Promise.resolve(c);i.length<3&&(h=h.then(l)),h.catch(u=>a(u))})}function Ia(i,t,e,n){const s=[];for(const r of i)for(const o in r.components){let a=r.components[o];if(!(t!=="beforeRouteEnter"&&!r.instances[o]))if(Y_(a)){const c=(a.__vccOpts||a)[t];c&&s.push(gi(c,e,n,r,o))}else{let l=a();s.push(()=>l.then(c=>{if(!c)return Promise.reject(new Error(`Couldn't resolve component "${o}" at "${r.path}"`));const h=Qg(c)?c.default:c;r.components[o]=h;const f=(h.__vccOpts||h)[t];return f&&gi(f,e,n,r,o)()}))}}return s}function Y_(i){return typeof i=="object"||"displayName"in i||"props"in i||"__vccOpts"in i}function Hh(i){const t=Kn(Ec),e=Kn(fp),n=un(()=>t.resolve(Rs(i.to))),s=un(()=>{const{matched:l}=n.value,{length:c}=l,h=l[c-1],u=e.matched;if(!h||!u.length)return-1;const f=u.findIndex(ks.bind(null,h));if(f>-1)return f;const d=Vh(l[c-2]);return c>1&&Vh(h)===d&&u[u.length-1].path!==d?u.findIndex(ks.bind(null,l[c-2])):f}),r=un(()=>s.value>-1&&J_(e.params,n.value.params)),o=un(()=>s.value>-1&&s.value===e.matched.length-1&&np(e.params,n.value.params));function a(l={}){return K_(l)?t[Rs(i.replace)?"replace":"push"](Rs(i.to)).catch(vr):Promise.resolve()}return{route:n,href:un(()=>n.value.href),isActive:r,isExactActive:o,navigate:a}}const $_=Od({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:Hh,setup(i,{slots:t}){const e=Wr(Hh(i)),{options:n}=Kn(Ec),s=un(()=>({[Gh(i.activeClass,n.linkActiveClass,"router-link-active")]:e.isActive,[Gh(i.exactActiveClass,n.linkExactActiveClass,"router-link-exact-active")]:e.isExactActive}));return()=>{const r=t.default&&t.default(e);return i.custom?r:ep("a",{"aria-current":e.isExactActive?i.ariaCurrentValue:null,href:e.href,onClick:e.navigate,class:s.value},r)}}}),Z_=$_;function K_(i){if(!(i.metaKey||i.altKey||i.ctrlKey||i.shiftKey)&&!i.defaultPrevented&&!(i.button!==void 0&&i.button!==0)){if(i.currentTarget&&i.currentTarget.getAttribute){const t=i.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return i.preventDefault&&i.preventDefault(),!0}}function J_(i,t){for(const e in t){const n=t[e],s=i[e];if(typeof n=="string"){if(n!==s)return!1}else if(!Cn(s)||s.length!==n.length||n.some((r,o)=>r!==s[o]))return!1}return!0}function Vh(i){return i?i.aliasOf?i.aliasOf.path:i.path:""}const Gh=(i,t,e)=>i??t??e,Q_=Od({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(i,{attrs:t,slots:e}){const n=Kn(Gl),s=un(()=>i.route||n.value),r=Kn(Bh,0),o=un(()=>{let c=Rs(r);const{matched:h}=s.value;let u;for(;(u=h[c])&&!u.components;)c++;return c}),a=un(()=>s.value.matched[o.value]);Do(Bh,un(()=>o.value+1)),Do(q_,a),Do(Gl,s);const l=d0();return zo(()=>[l.value,a.value,i.name],([c,h,u],[f,d,g])=>{h&&(h.instances[u]=c,d&&d!==h&&c&&c===f&&(h.leaveGuards.size||(h.leaveGuards=d.leaveGuards),h.updateGuards.size||(h.updateGuards=d.updateGuards))),c&&h&&(!d||!ks(h,d)||!f)&&(h.enterCallbacks[u]||[]).forEach(p=>p(c))},{flush:"post"}),()=>{const c=s.value,h=i.name,u=a.value,f=u&&u.components[h];if(!f)return Wh(e.default,{Component:f,route:c});const d=u.props[h],g=d?d===!0?c.params:typeof d=="function"?d(c):d:null,m=ep(f,re({},g,t,{onVnodeUnmounted:_=>{_.component.isUnmounted&&(u.instances[h]=null)},ref:l}));return Wh(e.default,{Component:m,route:c})||m}}});function Wh(i,t){if(!i)return null;const e=i(t);return e.length===1?e[0]:e}const tx=Q_;function ex(i){const t=P_(i.routes,i),e=i.parseQuery||X_,n=i.stringifyQuery||Uh,s=i.history,r=er(),o=er(),a=er(),l=p0(li);let c=li;Ms&&i.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const h=La.bind(null,N=>""+N),u=La.bind(null,W_),f=La.bind(null,Wo);function d(N,F){let tt,ct;return sp(N)?(tt=t.getRecordMatcher(N),ct=F):ct=N,t.addRoute(ct,tt)}function g(N){const F=t.getRecordMatcher(N);F&&t.removeRoute(F)}function p(){return t.getRoutes().map(N=>N.record)}function m(N){return!!t.getRecordMatcher(N)}function _(N,F){if(F=re({},F||l.value),typeof N=="string"){const v=Ra(e,N,F.path),T=t.resolve({path:v.path},F),z=s.createHref(v.fullPath);return re(v,T,{params:f(T.params),hash:Wo(v.hash),redirectedFrom:void 0,href:z})}let tt;if("path"in N)tt=re({},N,{path:Ra(e,N.path,F.path).path});else{const v=re({},N.params);for(const T in v)v[T]==null&&delete v[T];tt=re({},N,{params:u(N.params)}),F.params=u(F.params)}const ct=t.resolve(tt,F),gt=N.hash||"";ct.params=h(f(ct.params));const pt=n_(n,re({},N,{hash:H_(gt),path:ct.path})),wt=s.createHref(pt);return re({fullPath:pt,hash:gt,query:n===Uh?j_(N.query):N.query||{}},ct,{redirectedFrom:void 0,href:wt})}function w(N){return typeof N=="string"?Ra(e,N,l.value.path):re({},N)}function x(N,F){if(c!==N)return Us(8,{from:F,to:N})}function b(N){return D(N)}function S(N){return b(re(w(N),{replace:!0}))}function C(N){const F=N.matched[N.matched.length-1];if(F&&F.redirect){const{redirect:tt}=F;let ct=typeof tt=="function"?tt(N):tt;return typeof ct=="string"&&(ct=ct.includes("?")||ct.includes("#")?ct=w(ct):{path:ct},ct.params={}),re({query:N.query,hash:N.hash,params:"path"in ct?{}:N.params},ct)}}function D(N,F){const tt=c=_(N),ct=l.value,gt=N.state,pt=N.force,wt=N.replace===!0,v=C(tt);if(v)return D(re(w(v),{state:typeof v=="object"?re({},gt,v.state):gt,force:pt,replace:wt}),F||tt);const T=tt;T.redirectedFrom=F;let z;return!pt&&i_(n,ct,tt)&&(z=Us(16,{to:T,from:ct}),dt(ct,ct,!0,!1)),(z?Promise.resolve(z):A(T,ct)).catch(V=>Gn(V)?Gn(V,2)?V:ft(V):it(V,T,ct)).then(V=>{if(V){if(Gn(V,2))return D(re({replace:wt},w(V.to),{state:typeof V.to=="object"?re({},gt,V.to.state):gt,force:pt}),F||T)}else V=j(T,ct,!0,wt,gt);return R(T,ct,V),V})}function y(N,F){const tt=x(N,F);return tt?Promise.reject(tt):Promise.resolve()}function A(N,F){let tt;const[ct,gt,pt]=nx(N,F);tt=Ia(ct.reverse(),"beforeRouteLeave",N,F);for(const v of ct)v.leaveGuards.forEach(T=>{tt.push(gi(T,N,F))});const wt=y.bind(null,N,F);return tt.push(wt),ts(tt).then(()=>{tt=[];for(const v of r.list())tt.push(gi(v,N,F));return tt.push(wt),ts(tt)}).then(()=>{tt=Ia(gt,"beforeRouteUpdate",N,F);for(const v of gt)v.updateGuards.forEach(T=>{tt.push(gi(T,N,F))});return tt.push(wt),ts(tt)}).then(()=>{tt=[];for(const v of N.matched)if(v.beforeEnter&&!F.matched.includes(v))if(Cn(v.beforeEnter))for(const T of v.beforeEnter)tt.push(gi(T,N,F));else tt.push(gi(v.beforeEnter,N,F));return tt.push(wt),ts(tt)}).then(()=>(N.matched.forEach(v=>v.enterCallbacks={}),tt=Ia(pt,"beforeRouteEnter",N,F),tt.push(wt),ts(tt))).then(()=>{tt=[];for(const v of o.list())tt.push(gi(v,N,F));return tt.push(wt),ts(tt)}).catch(v=>Gn(v,8)?v:Promise.reject(v))}function R(N,F,tt){for(const ct of a.list())ct(N,F,tt)}function j(N,F,tt,ct,gt){const pt=x(N,F);if(pt)return pt;const wt=F===li,v=Ms?history.state:{};tt&&(ct||wt?s.replace(N.fullPath,re({scroll:wt&&v&&v.scroll},gt)):s.push(N.fullPath,gt)),l.value=N,dt(N,F,tt,wt),ft()}let Q;function U(){Q||(Q=s.listen((N,F,tt)=>{if(!yt.listening)return;const ct=_(N),gt=C(ct);if(gt){D(re(gt,{replace:!0}),ct).catch(vr);return}c=ct;const pt=l.value;Ms&&u_(Rh(pt.fullPath,tt.delta),la()),A(ct,pt).catch(wt=>Gn(wt,12)?wt:Gn(wt,2)?(D(wt.to,ct).then(v=>{Gn(v,20)&&!tt.delta&&tt.type===Ir.pop&&s.go(-1,!1)}).catch(vr),Promise.reject()):(tt.delta&&s.go(-tt.delta,!1),it(wt,ct,pt))).then(wt=>{wt=wt||j(ct,pt,!1),wt&&(tt.delta&&!Gn(wt,8)?s.go(-tt.delta,!1):tt.type===Ir.pop&&Gn(wt,20)&&s.go(-1,!1)),R(ct,pt,wt)}).catch(vr)}))}let O=er(),J=er(),Z;function it(N,F,tt){ft(N);const ct=J.list();return ct.length?ct.forEach(gt=>gt(N,F,tt)):console.error(N),Promise.reject(N)}function Y(){return Z&&l.value!==li?Promise.resolve():new Promise((N,F)=>{O.add([N,F])})}function ft(N){return Z||(Z=!N,U(),O.list().forEach(([F,tt])=>N?tt(N):F()),O.reset()),N}function dt(N,F,tt,ct){const{scrollBehavior:gt}=i;if(!Ms||!gt)return Promise.resolve();const pt=!tt&&f_(Rh(N.fullPath,0))||(ct||!tt)&&history.state&&history.state.scroll||null;return Ed().then(()=>gt(N,F,pt)).then(wt=>wt&&h_(wt)).catch(wt=>it(wt,N,F))}const vt=N=>s.go(N);let W;const ot=new Set,yt={currentRoute:l,listening:!0,addRoute:d,removeRoute:g,hasRoute:m,getRoutes:p,resolve:_,options:i,push:b,replace:S,go:vt,back:()=>vt(-1),forward:()=>vt(1),beforeEach:r.add,beforeResolve:o.add,afterEach:a.add,onError:J.add,isReady:Y,install(N){const F=this;N.component("RouterLink",Z_),N.component("RouterView",tx),N.config.globalProperties.$router=F,Object.defineProperty(N.config.globalProperties,"$route",{enumerable:!0,get:()=>Rs(l)}),Ms&&!W&&l.value===li&&(W=!0,b(s.location).catch(gt=>{}));const tt={};for(const gt in li)tt[gt]=un(()=>l.value[gt]);N.provide(Ec,F),N.provide(fp,Wr(tt)),N.provide(Gl,l);const ct=N.unmount;ot.add(N),N.unmount=function(){ot.delete(N),ot.size<1&&(c=li,Q&&Q(),Q=null,l.value=li,W=!1,Z=!1),ct()}}};return yt}function ts(i){return i.reduce((t,e)=>t.then(()=>e()),Promise.resolve())}function nx(i,t){const e=[],n=[],s=[],r=Math.max(t.matched.length,i.matched.length);for(let o=0;o<r;o++){const a=t.matched[o];a&&(i.matched.find(c=>ks(c,a))?n.push(a):e.push(a));const l=i.matched[o];l&&(t.matched.find(c=>ks(c,l))||s.push(l))}return[e,n,s]}/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Ac="149",es={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},ns={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},ix=0,Xh=1,sx=2,dp=1,pp=2,dr=3,xn=0,qe=1,Xe=2,Mi=0,Ds=1,jh=2,qh=3,Yh=4,rx=5,bs=100,ox=101,ax=102,$h=103,Zh=104,lx=200,cx=201,hx=202,ux=203,mp=204,gp=205,fx=206,dx=207,px=208,mx=209,gx=210,_x=0,xx=1,yx=2,Wl=3,vx=4,wx=5,Mx=6,bx=7,ca=0,Sx=1,Tx=2,Qn=0,Ex=1,Ax=2,Px=3,Cx=4,Lx=5,_p=300,Bs=301,Hs=302,Xo=303,Xl=304,ha=306,Dr=1e3,rn=1001,jl=1002,Le=1003,Kh=1004,Da=1005,hn=1006,Rx=1007,zr=1008,Yi=1009,Ix=1010,Dx=1011,xp=1012,zx=1013,Gi=1014,xi=1015,Fr=1016,Fx=1017,Ox=1018,zs=1020,Nx=1021,fn=1023,kx=1024,Ux=1025,ji=1026,Vs=1027,Bx=1028,Hx=1029,Vx=1030,Gx=1031,Wx=1033,za=33776,Fa=33777,Oa=33778,Na=33779,Jh=35840,Qh=35841,tu=35842,eu=35843,Xx=36196,nu=37492,iu=37496,su=37808,ru=37809,ou=37810,au=37811,lu=37812,cu=37813,hu=37814,uu=37815,fu=37816,du=37817,pu=37818,mu=37819,gu=37820,_u=37821,ka=36492,jx=36283,xu=36284,yu=36285,vu=36286,jo=2300,qo=2301,Ua=2302,wu=2400,Mu=2401,bu=2402,qx=2500,$i=3e3,se=3001,Yx=3200,$x=3201,ua=0,Zx=1,In="srgb",Or="srgb-linear",Ba=7680,Kx=519,Su=35044,Tu="300 es",ql=1035;class Ji{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const s=this._listeners[t];if(s!==void 0){const r=s.indexOf(e);r!==-1&&s.splice(r,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const s=n.slice(0);for(let r=0,o=s.length;r<o;r++)s[r].call(this,t);t.target=null}}}const ze=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Eu=1234567;const Fs=Math.PI/180,Nr=180/Math.PI;function si(){const i=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(ze[i&255]+ze[i>>8&255]+ze[i>>16&255]+ze[i>>24&255]+"-"+ze[t&255]+ze[t>>8&255]+"-"+ze[t>>16&15|64]+ze[t>>24&255]+"-"+ze[e&63|128]+ze[e>>8&255]+"-"+ze[e>>16&255]+ze[e>>24&255]+ze[n&255]+ze[n>>8&255]+ze[n>>16&255]+ze[n>>24&255]).toLowerCase()}function Ce(i,t,e){return Math.max(t,Math.min(e,i))}function Pc(i,t){return(i%t+t)%t}function Jx(i,t,e,n,s){return n+(i-t)*(s-n)/(e-t)}function Qx(i,t,e){return i!==t?(e-i)/(t-i):0}function Mr(i,t,e){return(1-e)*i+e*t}function ty(i,t,e,n){return Mr(i,t,1-Math.exp(-e*n))}function ey(i,t=1){return t-Math.abs(Pc(i,t*2)-t)}function ny(i,t,e){return i<=t?0:i>=e?1:(i=(i-t)/(e-t),i*i*(3-2*i))}function iy(i,t,e){return i<=t?0:i>=e?1:(i=(i-t)/(e-t),i*i*i*(i*(i*6-15)+10))}function sy(i,t){return i+Math.floor(Math.random()*(t-i+1))}function ry(i,t){return i+Math.random()*(t-i)}function oy(i){return i*(.5-Math.random())}function ay(i){i!==void 0&&(Eu=i);let t=Eu+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function ly(i){return i*Fs}function cy(i){return i*Nr}function Yl(i){return(i&i-1)===0&&i!==0}function yp(i){return Math.pow(2,Math.ceil(Math.log(i)/Math.LN2))}function Yo(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function hy(i,t,e,n,s){const r=Math.cos,o=Math.sin,a=r(e/2),l=o(e/2),c=r((t+n)/2),h=o((t+n)/2),u=r((t-n)/2),f=o((t-n)/2),d=r((n-t)/2),g=o((n-t)/2);switch(s){case"XYX":i.set(a*h,l*u,l*f,a*c);break;case"YZY":i.set(l*f,a*h,l*u,a*c);break;case"ZXZ":i.set(l*u,l*f,a*h,a*c);break;case"XZX":i.set(a*h,l*g,l*d,a*c);break;case"YXY":i.set(l*d,a*h,l*g,a*c);break;case"ZYZ":i.set(l*g,l*d,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}function pr(i,t){switch(t.constructor){case Float32Array:return i;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function Ye(i,t){switch(t.constructor){case Float32Array:return i;case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}var On=Object.freeze({__proto__:null,DEG2RAD:Fs,RAD2DEG:Nr,ceilPowerOfTwo:yp,clamp:Ce,damp:ty,degToRad:ly,denormalize:pr,euclideanModulo:Pc,floorPowerOfTwo:Yo,generateUUID:si,inverseLerp:Qx,isPowerOfTwo:Yl,lerp:Mr,mapLinear:Jx,normalize:Ye,pingpong:ey,radToDeg:cy,randFloat:ry,randFloatSpread:oy,randInt:sy,seededRandom:ay,setQuaternionFromProperEuler:hy,smootherstep:iy,smoothstep:ny});class xt{constructor(t=0,e=0){xt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,s=t.elements;return this.x=s[0]*e+s[3]*n+s[6],this.y=s[1]*e+s[4]*n+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),s=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*n-o*s+t.x,this.y=r*s+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Ke{constructor(){Ke.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,e,n,s,r,o,a,l,c){const h=this.elements;return h[0]=t,h[1]=s,h[2]=a,h[3]=e,h[4]=r,h[5]=l,h[6]=n,h[7]=o,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,s=e.elements,r=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],h=n[4],u=n[7],f=n[2],d=n[5],g=n[8],p=s[0],m=s[3],_=s[6],w=s[1],x=s[4],b=s[7],S=s[2],C=s[5],D=s[8];return r[0]=o*p+a*w+l*S,r[3]=o*m+a*x+l*C,r[6]=o*_+a*b+l*D,r[1]=c*p+h*w+u*S,r[4]=c*m+h*x+u*C,r[7]=c*_+h*b+u*D,r[2]=f*p+d*w+g*S,r[5]=f*m+d*x+g*C,r[8]=f*_+d*b+g*D,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],s=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],h=t[8];return e*o*h-e*a*c-n*r*h+n*a*l+s*r*c-s*o*l}invert(){const t=this.elements,e=t[0],n=t[1],s=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],h=t[8],u=h*o-a*c,f=a*l-h*r,d=c*r-o*l,g=e*u+n*f+s*d;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const p=1/g;return t[0]=u*p,t[1]=(s*c-h*n)*p,t[2]=(a*n-s*o)*p,t[3]=f*p,t[4]=(h*e-s*l)*p,t[5]=(s*r-a*e)*p,t[6]=d*p,t[7]=(n*l-c*e)*p,t[8]=(o*e-n*r)*p,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,s,r,o,a){const l=Math.cos(r),c=Math.sin(r);return this.set(n*l,n*c,-n*(l*o+c*a)+o+t,-s*c,s*l,-s*(-c*o+l*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(Ha.makeScale(t,e)),this}rotate(t){return this.premultiply(Ha.makeRotation(-t)),this}translate(t,e){return this.premultiply(Ha.makeTranslation(t,e)),this}makeTranslation(t,e){return this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let s=0;s<9;s++)if(e[s]!==n[s])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Ha=new Ke;function vp(i){for(let t=i.length-1;t>=0;--t)if(i[t]>=65535)return!0;return!1}function kr(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function qi(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function No(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}const Va={[In]:{[Or]:qi},[Or]:{[In]:No}},Ue={legacyMode:!0,get workingColorSpace(){return Or},set workingColorSpace(i){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(i,t,e){if(this.legacyMode||t===e||!t||!e)return i;if(Va[t]&&Va[t][e]!==void 0){const n=Va[t][e];return i.r=n(i.r),i.g=n(i.g),i.b=n(i.b),i}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(i,t){return this.convert(i,this.workingColorSpace,t)},toWorkingColorSpace:function(i,t){return this.convert(i,t,this.workingColorSpace)}},wp={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Me={r:0,g:0,b:0},vn={h:0,s:0,l:0},no={h:0,s:0,l:0};function Ga(i,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?i+(t-i)*6*e:e<1/2?t:e<2/3?i+(t-i)*6*(2/3-e):i}function io(i,t){return t.r=i.r,t.g=i.g,t.b=i.b,t}class Ct{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,e===void 0&&n===void 0?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=In){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Ue.toWorkingColorSpace(this,e),this}setRGB(t,e,n,s=Ue.workingColorSpace){return this.r=t,this.g=e,this.b=n,Ue.toWorkingColorSpace(this,s),this}setHSL(t,e,n,s=Ue.workingColorSpace){if(t=Pc(t,1),e=Ce(e,0,1),n=Ce(n,0,1),e===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,o=2*n-r;this.r=Ga(o,r,t+1/3),this.g=Ga(o,r,t),this.b=Ga(o,r,t-1/3)}return Ue.toWorkingColorSpace(this,s),this}setStyle(t,e=In){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let r;const o=s[1],a=s[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,Ue.toWorkingColorSpace(this,e),n(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,Ue.toWorkingColorSpace(this,e),n(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(r[1])/360,c=parseFloat(r[2])/100,h=parseFloat(r[3])/100;return n(r[4]),this.setHSL(l,c,h,e)}break}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=s[1],o=r.length;if(o===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,Ue.toWorkingColorSpace(this,e),this;if(o===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,Ue.toWorkingColorSpace(this,e),this}return t&&t.length>0?this.setColorName(t,e):this}setColorName(t,e=In){const n=wp[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=qi(t.r),this.g=qi(t.g),this.b=qi(t.b),this}copyLinearToSRGB(t){return this.r=No(t.r),this.g=No(t.g),this.b=No(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=In){return Ue.fromWorkingColorSpace(io(this,Me),t),Ce(Me.r*255,0,255)<<16^Ce(Me.g*255,0,255)<<8^Ce(Me.b*255,0,255)<<0}getHexString(t=In){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Ue.workingColorSpace){Ue.fromWorkingColorSpace(io(this,Me),e);const n=Me.r,s=Me.g,r=Me.b,o=Math.max(n,s,r),a=Math.min(n,s,r);let l,c;const h=(a+o)/2;if(a===o)l=0,c=0;else{const u=o-a;switch(c=h<=.5?u/(o+a):u/(2-o-a),o){case n:l=(s-r)/u+(s<r?6:0);break;case s:l=(r-n)/u+2;break;case r:l=(n-s)/u+4;break}l/=6}return t.h=l,t.s=c,t.l=h,t}getRGB(t,e=Ue.workingColorSpace){return Ue.fromWorkingColorSpace(io(this,Me),e),t.r=Me.r,t.g=Me.g,t.b=Me.b,t}getStyle(t=In){return Ue.fromWorkingColorSpace(io(this,Me),t),t!==In?`color(${t} ${Me.r} ${Me.g} ${Me.b})`:`rgb(${Me.r*255|0},${Me.g*255|0},${Me.b*255|0})`}offsetHSL(t,e,n){return this.getHSL(vn),vn.h+=t,vn.s+=e,vn.l+=n,this.setHSL(vn.h,vn.s,vn.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(vn),t.getHSL(no);const n=Mr(vn.h,no.h,e),s=Mr(vn.s,no.s,e),r=Mr(vn.l,no.l,e);return this.setHSL(n,s,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Ct.NAMES=wp;let is;class Mp{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{is===void 0&&(is=kr("canvas")),is.width=t.width,is.height=t.height;const n=is.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=is}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=kr("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const s=n.getImageData(0,0,t.width,t.height),r=s.data;for(let o=0;o<r.length;o++)r[o]=qi(r[o]/255)*255;return n.putImageData(s,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(qi(e[n]/255)*255):e[n]=qi(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class bp{constructor(t=null){this.isSource=!0,this.uuid=si(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},s=this.data;if(s!==null){let r;if(Array.isArray(s)){r=[];for(let o=0,a=s.length;o<a;o++)s[o].isDataTexture?r.push(Wa(s[o].image)):r.push(Wa(s[o]))}else r=Wa(s);n.url=r}return e||(t.images[this.uuid]=n),n}}function Wa(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?Mp.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let uy=0;class Re extends Ji{constructor(t=Re.DEFAULT_IMAGE,e=Re.DEFAULT_MAPPING,n=rn,s=rn,r=hn,o=zr,a=fn,l=Yi,c=Re.DEFAULT_ANISOTROPY,h=$i){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:uy++}),this.uuid=si(),this.name="",this.source=new bp(t),this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=s,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new xt(0,0),this.repeat=new xt(1,1),this.center=new xt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ke,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==_p)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Dr:t.x=t.x-Math.floor(t.x);break;case rn:t.x=t.x<0?0:1;break;case jl:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Dr:t.y=t.y-Math.floor(t.y);break;case rn:t.y=t.y<0?0:1;break;case jl:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}}Re.DEFAULT_IMAGE=null;Re.DEFAULT_MAPPING=_p;Re.DEFAULT_ANISOTROPY=1;class ne{constructor(t=0,e=0,n=0,s=1){ne.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=s}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,s){return this.x=t,this.y=e,this.z=n,this.w=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,s=this.z,r=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*s+o[12]*r,this.y=o[1]*e+o[5]*n+o[9]*s+o[13]*r,this.z=o[2]*e+o[6]*n+o[10]*s+o[14]*r,this.w=o[3]*e+o[7]*n+o[11]*s+o[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,s,r;const l=t.elements,c=l[0],h=l[4],u=l[8],f=l[1],d=l[5],g=l[9],p=l[2],m=l[6],_=l[10];if(Math.abs(h-f)<.01&&Math.abs(u-p)<.01&&Math.abs(g-m)<.01){if(Math.abs(h+f)<.1&&Math.abs(u+p)<.1&&Math.abs(g+m)<.1&&Math.abs(c+d+_-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const x=(c+1)/2,b=(d+1)/2,S=(_+1)/2,C=(h+f)/4,D=(u+p)/4,y=(g+m)/4;return x>b&&x>S?x<.01?(n=0,s=.707106781,r=.707106781):(n=Math.sqrt(x),s=C/n,r=D/n):b>S?b<.01?(n=.707106781,s=0,r=.707106781):(s=Math.sqrt(b),n=C/s,r=y/s):S<.01?(n=.707106781,s=.707106781,r=0):(r=Math.sqrt(S),n=D/r,s=y/r),this.set(n,s,r,e),this}let w=Math.sqrt((m-g)*(m-g)+(u-p)*(u-p)+(f-h)*(f-h));return Math.abs(w)<.001&&(w=1),this.x=(m-g)/w,this.y=(u-p)/w,this.z=(f-h)/w,this.w=Math.acos((c+d+_-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Zi extends Ji{constructor(t=1,e=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new ne(0,0,t,e),this.scissorTest=!1,this.viewport=new ne(0,0,t,e);const s={width:t,height:e,depth:1};this.texture=new Re(s,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:hn,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(t,e,n=1){(this.width!==t||this.height!==e||this.depth!==n)&&(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new bp(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Sp extends Re{constructor(t=null,e=1,n=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:s},this.magFilter=Le,this.minFilter=Le,this.wrapR=rn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class fy extends Re{constructor(t=null,e=1,n=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:s},this.magFilter=Le,this.minFilter=Le,this.wrapR=rn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class mn{constructor(t=0,e=0,n=0,s=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=s}static slerpFlat(t,e,n,s,r,o,a){let l=n[s+0],c=n[s+1],h=n[s+2],u=n[s+3];const f=r[o+0],d=r[o+1],g=r[o+2],p=r[o+3];if(a===0){t[e+0]=l,t[e+1]=c,t[e+2]=h,t[e+3]=u;return}if(a===1){t[e+0]=f,t[e+1]=d,t[e+2]=g,t[e+3]=p;return}if(u!==p||l!==f||c!==d||h!==g){let m=1-a;const _=l*f+c*d+h*g+u*p,w=_>=0?1:-1,x=1-_*_;if(x>Number.EPSILON){const S=Math.sqrt(x),C=Math.atan2(S,_*w);m=Math.sin(m*C)/S,a=Math.sin(a*C)/S}const b=a*w;if(l=l*m+f*b,c=c*m+d*b,h=h*m+g*b,u=u*m+p*b,m===1-a){const S=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=S,c*=S,h*=S,u*=S}}t[e]=l,t[e+1]=c,t[e+2]=h,t[e+3]=u}static multiplyQuaternionsFlat(t,e,n,s,r,o){const a=n[s],l=n[s+1],c=n[s+2],h=n[s+3],u=r[o],f=r[o+1],d=r[o+2],g=r[o+3];return t[e]=a*g+h*u+l*d-c*f,t[e+1]=l*g+h*f+c*u-a*d,t[e+2]=c*g+h*d+a*f-l*u,t[e+3]=h*g-a*u-l*f-c*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,s){return this._x=t,this._y=e,this._z=n,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){const n=t._x,s=t._y,r=t._z,o=t._order,a=Math.cos,l=Math.sin,c=a(n/2),h=a(s/2),u=a(r/2),f=l(n/2),d=l(s/2),g=l(r/2);switch(o){case"XYZ":this._x=f*h*u+c*d*g,this._y=c*d*u-f*h*g,this._z=c*h*g+f*d*u,this._w=c*h*u-f*d*g;break;case"YXZ":this._x=f*h*u+c*d*g,this._y=c*d*u-f*h*g,this._z=c*h*g-f*d*u,this._w=c*h*u+f*d*g;break;case"ZXY":this._x=f*h*u-c*d*g,this._y=c*d*u+f*h*g,this._z=c*h*g+f*d*u,this._w=c*h*u-f*d*g;break;case"ZYX":this._x=f*h*u-c*d*g,this._y=c*d*u+f*h*g,this._z=c*h*g-f*d*u,this._w=c*h*u+f*d*g;break;case"YZX":this._x=f*h*u+c*d*g,this._y=c*d*u+f*h*g,this._z=c*h*g-f*d*u,this._w=c*h*u-f*d*g;break;case"XZY":this._x=f*h*u-c*d*g,this._y=c*d*u-f*h*g,this._z=c*h*g+f*d*u,this._w=c*h*u+f*d*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,s=Math.sin(n);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],s=e[4],r=e[8],o=e[1],a=e[5],l=e[9],c=e[2],h=e[6],u=e[10],f=n+a+u;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(h-l)*d,this._y=(r-c)*d,this._z=(o-s)*d}else if(n>a&&n>u){const d=2*Math.sqrt(1+n-a-u);this._w=(h-l)/d,this._x=.25*d,this._y=(s+o)/d,this._z=(r+c)/d}else if(a>u){const d=2*Math.sqrt(1+a-n-u);this._w=(r-c)/d,this._x=(s+o)/d,this._y=.25*d,this._z=(l+h)/d}else{const d=2*Math.sqrt(1+u-n-a);this._w=(o-s)/d,this._x=(r+c)/d,this._y=(l+h)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Ce(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const s=Math.min(1,e/n);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,s=t._y,r=t._z,o=t._w,a=e._x,l=e._y,c=e._z,h=e._w;return this._x=n*h+o*a+s*c-r*l,this._y=s*h+o*l+r*a-n*c,this._z=r*h+o*c+n*l-s*a,this._w=o*h-n*a-s*l-r*c,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,s=this._y,r=this._z,o=this._w;let a=o*t._w+n*t._x+s*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=n,this._y=s,this._z=r,this;const l=1-a*a;if(l<=Number.EPSILON){const d=1-e;return this._w=d*o+e*this._w,this._x=d*n+e*this._x,this._y=d*s+e*this._y,this._z=d*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),h=Math.atan2(c,a),u=Math.sin((1-e)*h)/c,f=Math.sin(e*h)/c;return this._w=o*u+this._w*f,this._x=n*u+this._x*f,this._y=s*u+this._y*f,this._z=r*u+this._z*f,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),s=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(e*Math.cos(s),n*Math.sin(r),n*Math.cos(r),e*Math.sin(s))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class I{constructor(t=0,e=0,n=0){I.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Au.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Au.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,s=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*s,this.y=r[1]*e+r[4]*n+r[7]*s,this.z=r[2]*e+r[5]*n+r[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,s=this.z,r=t.elements,o=1/(r[3]*e+r[7]*n+r[11]*s+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*s+r[12])*o,this.y=(r[1]*e+r[5]*n+r[9]*s+r[13])*o,this.z=(r[2]*e+r[6]*n+r[10]*s+r[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,s=this.z,r=t.x,o=t.y,a=t.z,l=t.w,c=l*e+o*s-a*n,h=l*n+a*e-r*s,u=l*s+r*n-o*e,f=-r*e-o*n-a*s;return this.x=c*l+f*-r+h*-a-u*-o,this.y=h*l+f*-o+u*-r-c*-a,this.z=u*l+f*-a+c*-o-h*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,s=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*s,this.y=r[1]*e+r[5]*n+r[9]*s,this.z=r[2]*e+r[6]*n+r[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,s=t.y,r=t.z,o=e.x,a=e.y,l=e.z;return this.x=s*l-r*a,this.y=r*o-n*l,this.z=n*a-s*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Xa.copy(this).projectOnVector(t),this.sub(Xa)}reflect(t){return this.sub(Xa.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Ce(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,s=this.z-t.z;return e*e+n*n+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const s=Math.sin(e)*t;return this.x=s*Math.sin(n),this.y=Math.cos(e)*t,this.z=s*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=s,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Xa=new I,Au=new mn;class Xr{constructor(t=new I(1/0,1/0,1/0),e=new I(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,s=1/0,r=-1/0,o=-1/0,a=-1/0;for(let l=0,c=t.length;l<c;l+=3){const h=t[l],u=t[l+1],f=t[l+2];h<e&&(e=h),u<n&&(n=u),f<s&&(s=f),h>r&&(r=h),u>o&&(o=u),f>a&&(a=f)}return this.min.set(e,n,s),this.max.set(r,o,a),this}setFromBufferAttribute(t){let e=1/0,n=1/0,s=1/0,r=-1/0,o=-1/0,a=-1/0;for(let l=0,c=t.count;l<c;l++){const h=t.getX(l),u=t.getY(l),f=t.getZ(l);h<e&&(e=h),u<n&&(n=u),f<s&&(s=f),h>r&&(r=h),u>o&&(o=u),f>a&&(a=f)}return this.min.set(e,n,s),this.max.set(r,o,a),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Ii.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0)if(e&&n.attributes!=null&&n.attributes.position!==void 0){const r=n.attributes.position;for(let o=0,a=r.count;o<a;o++)Ii.fromBufferAttribute(r,o).applyMatrix4(t.matrixWorld),this.expandByPoint(Ii)}else n.boundingBox===null&&n.computeBoundingBox(),ja.copy(n.boundingBox),ja.applyMatrix4(t.matrixWorld),this.union(ja);const s=t.children;for(let r=0,o=s.length;r<o;r++)this.expandByObject(s[r],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Ii),Ii.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(nr),so.subVectors(this.max,nr),ss.subVectors(t.a,nr),rs.subVectors(t.b,nr),os.subVectors(t.c,nr),ci.subVectors(rs,ss),hi.subVectors(os,rs),Di.subVectors(ss,os);let e=[0,-ci.z,ci.y,0,-hi.z,hi.y,0,-Di.z,Di.y,ci.z,0,-ci.x,hi.z,0,-hi.x,Di.z,0,-Di.x,-ci.y,ci.x,0,-hi.y,hi.x,0,-Di.y,Di.x,0];return!qa(e,ss,rs,os,so)||(e=[1,0,0,0,1,0,0,0,1],!qa(e,ss,rs,os,so))?!1:(ro.crossVectors(ci,hi),e=[ro.x,ro.y,ro.z],qa(e,ss,rs,os,so))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Ii.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=this.getSize(Ii).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Wn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Wn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Wn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Wn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Wn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Wn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Wn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Wn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Wn),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Wn=[new I,new I,new I,new I,new I,new I,new I,new I],Ii=new I,ja=new Xr,ss=new I,rs=new I,os=new I,ci=new I,hi=new I,Di=new I,nr=new I,so=new I,ro=new I,zi=new I;function qa(i,t,e,n,s){for(let r=0,o=i.length-3;r<=o;r+=3){zi.fromArray(i,r);const a=s.x*Math.abs(zi.x)+s.y*Math.abs(zi.y)+s.z*Math.abs(zi.z),l=t.dot(zi),c=e.dot(zi),h=n.dot(zi);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const dy=new Xr,ir=new I,Ya=new I;let jr=class{constructor(t=new I,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):dy.setFromPoints(t).getCenter(n);let s=0;for(let r=0,o=t.length;r<o;r++)s=Math.max(s,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;ir.subVectors(t,this.center);const e=ir.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),s=(n-this.radius)*.5;this.center.addScaledVector(ir,s/n),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Ya.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(ir.copy(t.center).add(Ya)),this.expandByPoint(ir.copy(t.center).sub(Ya))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}};const Xn=new I,$a=new I,oo=new I,ui=new I,Za=new I,ao=new I,Ka=new I;class fa{constructor(t=new I,e=new I(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Xn)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Xn.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Xn.copy(this.direction).multiplyScalar(e).add(this.origin),Xn.distanceToSquared(t))}distanceSqToSegment(t,e,n,s){$a.copy(t).add(e).multiplyScalar(.5),oo.copy(e).sub(t).normalize(),ui.copy(this.origin).sub($a);const r=t.distanceTo(e)*.5,o=-this.direction.dot(oo),a=ui.dot(this.direction),l=-ui.dot(oo),c=ui.lengthSq(),h=Math.abs(1-o*o);let u,f,d,g;if(h>0)if(u=o*l-a,f=o*a-l,g=r*h,u>=0)if(f>=-g)if(f<=g){const p=1/h;u*=p,f*=p,d=u*(u+o*f+2*a)+f*(o*u+f+2*l)+c}else f=r,u=Math.max(0,-(o*f+a)),d=-u*u+f*(f+2*l)+c;else f=-r,u=Math.max(0,-(o*f+a)),d=-u*u+f*(f+2*l)+c;else f<=-g?(u=Math.max(0,-(-o*r+a)),f=u>0?-r:Math.min(Math.max(-r,-l),r),d=-u*u+f*(f+2*l)+c):f<=g?(u=0,f=Math.min(Math.max(-r,-l),r),d=f*(f+2*l)+c):(u=Math.max(0,-(o*r+a)),f=u>0?r:Math.min(Math.max(-r,-l),r),d=-u*u+f*(f+2*l)+c);else f=o>0?-r:r,u=Math.max(0,-(o*f+a)),d=-u*u+f*(f+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(u).add(this.origin),s&&s.copy(oo).multiplyScalar(f).add($a),d}intersectSphere(t,e){Xn.subVectors(t.center,this.origin);const n=Xn.dot(this.direction),s=Xn.dot(Xn)-n*n,r=t.radius*t.radius;if(s>r)return null;const o=Math.sqrt(r-s),a=n-o,l=n+o;return a<0&&l<0?null:a<0?this.at(l,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,s,r,o,a,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,f=this.origin;return c>=0?(n=(t.min.x-f.x)*c,s=(t.max.x-f.x)*c):(n=(t.max.x-f.x)*c,s=(t.min.x-f.x)*c),h>=0?(r=(t.min.y-f.y)*h,o=(t.max.y-f.y)*h):(r=(t.max.y-f.y)*h,o=(t.min.y-f.y)*h),n>o||r>s||((r>n||isNaN(n))&&(n=r),(o<s||isNaN(s))&&(s=o),u>=0?(a=(t.min.z-f.z)*u,l=(t.max.z-f.z)*u):(a=(t.max.z-f.z)*u,l=(t.min.z-f.z)*u),n>l||a>s)||((a>n||n!==n)&&(n=a),(l<s||s!==s)&&(s=l),s<0)?null:this.at(n>=0?n:s,e)}intersectsBox(t){return this.intersectBox(t,Xn)!==null}intersectTriangle(t,e,n,s,r){Za.subVectors(e,t),ao.subVectors(n,t),Ka.crossVectors(Za,ao);let o=this.direction.dot(Ka),a;if(o>0){if(s)return null;a=1}else if(o<0)a=-1,o=-o;else return null;ui.subVectors(this.origin,t);const l=a*this.direction.dot(ao.crossVectors(ui,ao));if(l<0)return null;const c=a*this.direction.dot(Za.cross(ui));if(c<0||l+c>o)return null;const h=-a*ui.dot(Ka);return h<0?null:this.at(h/o,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Dt{constructor(){Dt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,e,n,s,r,o,a,l,c,h,u,f,d,g,p,m){const _=this.elements;return _[0]=t,_[4]=e,_[8]=n,_[12]=s,_[1]=r,_[5]=o,_[9]=a,_[13]=l,_[2]=c,_[6]=h,_[10]=u,_[14]=f,_[3]=d,_[7]=g,_[11]=p,_[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Dt().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,s=1/as.setFromMatrixColumn(t,0).length(),r=1/as.setFromMatrixColumn(t,1).length(),o=1/as.setFromMatrixColumn(t,2).length();return e[0]=n[0]*s,e[1]=n[1]*s,e[2]=n[2]*s,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,s=t.y,r=t.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(s),c=Math.sin(s),h=Math.cos(r),u=Math.sin(r);if(t.order==="XYZ"){const f=o*h,d=o*u,g=a*h,p=a*u;e[0]=l*h,e[4]=-l*u,e[8]=c,e[1]=d+g*c,e[5]=f-p*c,e[9]=-a*l,e[2]=p-f*c,e[6]=g+d*c,e[10]=o*l}else if(t.order==="YXZ"){const f=l*h,d=l*u,g=c*h,p=c*u;e[0]=f+p*a,e[4]=g*a-d,e[8]=o*c,e[1]=o*u,e[5]=o*h,e[9]=-a,e[2]=d*a-g,e[6]=p+f*a,e[10]=o*l}else if(t.order==="ZXY"){const f=l*h,d=l*u,g=c*h,p=c*u;e[0]=f-p*a,e[4]=-o*u,e[8]=g+d*a,e[1]=d+g*a,e[5]=o*h,e[9]=p-f*a,e[2]=-o*c,e[6]=a,e[10]=o*l}else if(t.order==="ZYX"){const f=o*h,d=o*u,g=a*h,p=a*u;e[0]=l*h,e[4]=g*c-d,e[8]=f*c+p,e[1]=l*u,e[5]=p*c+f,e[9]=d*c-g,e[2]=-c,e[6]=a*l,e[10]=o*l}else if(t.order==="YZX"){const f=o*l,d=o*c,g=a*l,p=a*c;e[0]=l*h,e[4]=p-f*u,e[8]=g*u+d,e[1]=u,e[5]=o*h,e[9]=-a*h,e[2]=-c*h,e[6]=d*u+g,e[10]=f-p*u}else if(t.order==="XZY"){const f=o*l,d=o*c,g=a*l,p=a*c;e[0]=l*h,e[4]=-u,e[8]=c*h,e[1]=f*u+p,e[5]=o*h,e[9]=d*u-g,e[2]=g*u-d,e[6]=a*h,e[10]=p*u+f}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(py,t,my)}lookAt(t,e,n){const s=this.elements;return en.subVectors(t,e),en.lengthSq()===0&&(en.z=1),en.normalize(),fi.crossVectors(n,en),fi.lengthSq()===0&&(Math.abs(n.z)===1?en.x+=1e-4:en.z+=1e-4,en.normalize(),fi.crossVectors(n,en)),fi.normalize(),lo.crossVectors(en,fi),s[0]=fi.x,s[4]=lo.x,s[8]=en.x,s[1]=fi.y,s[5]=lo.y,s[9]=en.y,s[2]=fi.z,s[6]=lo.z,s[10]=en.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,s=e.elements,r=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],h=n[1],u=n[5],f=n[9],d=n[13],g=n[2],p=n[6],m=n[10],_=n[14],w=n[3],x=n[7],b=n[11],S=n[15],C=s[0],D=s[4],y=s[8],A=s[12],R=s[1],j=s[5],Q=s[9],U=s[13],O=s[2],J=s[6],Z=s[10],it=s[14],Y=s[3],ft=s[7],dt=s[11],vt=s[15];return r[0]=o*C+a*R+l*O+c*Y,r[4]=o*D+a*j+l*J+c*ft,r[8]=o*y+a*Q+l*Z+c*dt,r[12]=o*A+a*U+l*it+c*vt,r[1]=h*C+u*R+f*O+d*Y,r[5]=h*D+u*j+f*J+d*ft,r[9]=h*y+u*Q+f*Z+d*dt,r[13]=h*A+u*U+f*it+d*vt,r[2]=g*C+p*R+m*O+_*Y,r[6]=g*D+p*j+m*J+_*ft,r[10]=g*y+p*Q+m*Z+_*dt,r[14]=g*A+p*U+m*it+_*vt,r[3]=w*C+x*R+b*O+S*Y,r[7]=w*D+x*j+b*J+S*ft,r[11]=w*y+x*Q+b*Z+S*dt,r[15]=w*A+x*U+b*it+S*vt,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],s=t[8],r=t[12],o=t[1],a=t[5],l=t[9],c=t[13],h=t[2],u=t[6],f=t[10],d=t[14],g=t[3],p=t[7],m=t[11],_=t[15];return g*(+r*l*u-s*c*u-r*a*f+n*c*f+s*a*d-n*l*d)+p*(+e*l*d-e*c*f+r*o*f-s*o*d+s*c*h-r*l*h)+m*(+e*c*u-e*a*d-r*o*u+n*o*d+r*a*h-n*c*h)+_*(-s*a*h-e*l*u+e*a*f+s*o*u-n*o*f+n*l*h)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=e,s[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],s=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],h=t[8],u=t[9],f=t[10],d=t[11],g=t[12],p=t[13],m=t[14],_=t[15],w=u*m*c-p*f*c+p*l*d-a*m*d-u*l*_+a*f*_,x=g*f*c-h*m*c-g*l*d+o*m*d+h*l*_-o*f*_,b=h*p*c-g*u*c+g*a*d-o*p*d-h*a*_+o*u*_,S=g*u*l-h*p*l-g*a*f+o*p*f+h*a*m-o*u*m,C=e*w+n*x+s*b+r*S;if(C===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const D=1/C;return t[0]=w*D,t[1]=(p*f*r-u*m*r-p*s*d+n*m*d+u*s*_-n*f*_)*D,t[2]=(a*m*r-p*l*r+p*s*c-n*m*c-a*s*_+n*l*_)*D,t[3]=(u*l*r-a*f*r-u*s*c+n*f*c+a*s*d-n*l*d)*D,t[4]=x*D,t[5]=(h*m*r-g*f*r+g*s*d-e*m*d-h*s*_+e*f*_)*D,t[6]=(g*l*r-o*m*r-g*s*c+e*m*c+o*s*_-e*l*_)*D,t[7]=(o*f*r-h*l*r+h*s*c-e*f*c-o*s*d+e*l*d)*D,t[8]=b*D,t[9]=(g*u*r-h*p*r-g*n*d+e*p*d+h*n*_-e*u*_)*D,t[10]=(o*p*r-g*a*r+g*n*c-e*p*c-o*n*_+e*a*_)*D,t[11]=(h*a*r-o*u*r-h*n*c+e*u*c+o*n*d-e*a*d)*D,t[12]=S*D,t[13]=(h*p*s-g*u*s+g*n*f-e*p*f-h*n*m+e*u*m)*D,t[14]=(g*a*s-o*p*s-g*n*l+e*p*l+o*n*m-e*a*m)*D,t[15]=(o*u*s-h*a*s+h*n*l-e*u*l-o*n*f+e*a*f)*D,this}scale(t){const e=this.elements,n=t.x,s=t.y,r=t.z;return e[0]*=n,e[4]*=s,e[8]*=r,e[1]*=n,e[5]*=s,e[9]*=r,e[2]*=n,e[6]*=s,e[10]*=r,e[3]*=n,e[7]*=s,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,s))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),s=Math.sin(e),r=1-n,o=t.x,a=t.y,l=t.z,c=r*o,h=r*a;return this.set(c*o+n,c*a-s*l,c*l+s*a,0,c*a+s*l,h*a+n,h*l-s*o,0,c*l-s*a,h*l+s*o,r*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,s,r,o){return this.set(1,n,r,0,t,1,o,0,e,s,1,0,0,0,0,1),this}compose(t,e,n){const s=this.elements,r=e._x,o=e._y,a=e._z,l=e._w,c=r+r,h=o+o,u=a+a,f=r*c,d=r*h,g=r*u,p=o*h,m=o*u,_=a*u,w=l*c,x=l*h,b=l*u,S=n.x,C=n.y,D=n.z;return s[0]=(1-(p+_))*S,s[1]=(d+b)*S,s[2]=(g-x)*S,s[3]=0,s[4]=(d-b)*C,s[5]=(1-(f+_))*C,s[6]=(m+w)*C,s[7]=0,s[8]=(g+x)*D,s[9]=(m-w)*D,s[10]=(1-(f+p))*D,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,e,n){const s=this.elements;let r=as.set(s[0],s[1],s[2]).length();const o=as.set(s[4],s[5],s[6]).length(),a=as.set(s[8],s[9],s[10]).length();this.determinant()<0&&(r=-r),t.x=s[12],t.y=s[13],t.z=s[14],wn.copy(this);const c=1/r,h=1/o,u=1/a;return wn.elements[0]*=c,wn.elements[1]*=c,wn.elements[2]*=c,wn.elements[4]*=h,wn.elements[5]*=h,wn.elements[6]*=h,wn.elements[8]*=u,wn.elements[9]*=u,wn.elements[10]*=u,e.setFromRotationMatrix(wn),n.x=r,n.y=o,n.z=a,this}makePerspective(t,e,n,s,r,o){const a=this.elements,l=2*r/(e-t),c=2*r/(n-s),h=(e+t)/(e-t),u=(n+s)/(n-s),f=-(o+r)/(o-r),d=-2*o*r/(o-r);return a[0]=l,a[4]=0,a[8]=h,a[12]=0,a[1]=0,a[5]=c,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=f,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,n,s,r,o){const a=this.elements,l=1/(e-t),c=1/(n-s),h=1/(o-r),u=(e+t)*l,f=(n+s)*c,d=(o+r)*h;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-f,a[2]=0,a[6]=0,a[10]=-2*h,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let s=0;s<16;s++)if(e[s]!==n[s])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const as=new I,wn=new Dt,py=new I(0,0,0),my=new I(1,1,1),fi=new I,lo=new I,en=new I,Pu=new Dt,Cu=new mn;class gn{constructor(t=0,e=0,n=0,s=gn.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,s=this._order){return this._x=t,this._y=e,this._z=n,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const s=t.elements,r=s[0],o=s[4],a=s[8],l=s[1],c=s[5],h=s[9],u=s[2],f=s[6],d=s[10];switch(e){case"XYZ":this._y=Math.asin(Ce(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Ce(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(Ce(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-Ce(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(Ce(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-Ce(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Pu.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Pu,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Cu.setFromEuler(this),this.setFromQuaternion(Cu,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}gn.DEFAULT_ORDER="XYZ";class Cc{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let gy=0;const Lu=new I,ls=new mn,jn=new Dt,co=new I,sr=new I,_y=new I,xy=new mn,Ru=new I(1,0,0),Iu=new I(0,1,0),Du=new I(0,0,1),yy={type:"added"},zu={type:"removed"};class ae extends Ji{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:gy++}),this.uuid=si(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ae.DEFAULT_UP.clone();const t=new I,e=new gn,n=new mn,s=new I(1,1,1);function r(){n.setFromEuler(e,!1)}function o(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new Dt},normalMatrix:{value:new Ke}}),this.matrix=new Dt,this.matrixWorld=new Dt,this.matrixAutoUpdate=ae.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=ae.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new Cc,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return ls.setFromAxisAngle(t,e),this.quaternion.multiply(ls),this}rotateOnWorldAxis(t,e){return ls.setFromAxisAngle(t,e),this.quaternion.premultiply(ls),this}rotateX(t){return this.rotateOnAxis(Ru,t)}rotateY(t){return this.rotateOnAxis(Iu,t)}rotateZ(t){return this.rotateOnAxis(Du,t)}translateOnAxis(t,e){return Lu.copy(t).applyQuaternion(this.quaternion),this.position.add(Lu.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Ru,t)}translateY(t){return this.translateOnAxis(Iu,t)}translateZ(t){return this.translateOnAxis(Du,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(jn.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?co.copy(t):co.set(t,e,n);const s=this.parent;this.updateWorldMatrix(!0,!1),sr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?jn.lookAt(sr,co,this.up):jn.lookAt(co,sr,this.up),this.quaternion.setFromRotationMatrix(jn),s&&(jn.extractRotation(s.matrixWorld),ls.setFromRotationMatrix(jn),this.quaternion.premultiply(ls.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(yy)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(zu)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(zu)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),jn.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),jn.multiply(t.parent.matrixWorld)),t.applyMatrix4(jn),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,s=this.children.length;n<s;n++){const o=this.children[n].getObjectByProperty(t,e);if(o!==void 0)return o}}getObjectsByProperty(t,e){let n=[];this[t]===e&&n.push(this);for(let s=0,r=this.children.length;s<r;s++){const o=this.children[s].getObjectsByProperty(t,e);o.length>0&&(n=n.concat(o))}return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(sr,t,_y),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(sr,xy,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,s=e.length;n<s;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,s=e.length;n<s;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,s=e.length;n<s;n++){const r=e[n];(r.matrixWorldAutoUpdate===!0||t===!0)&&r.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const s=this.children;for(let r=0,o=s.length;r<o;r++){const a=s[r];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON()));function r(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=r(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];r(t.shapes,u)}else r(t.shapes,l)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(r(t.materials,this.material[l]));s.material=a}else s.material=r(t.materials,this.material);if(this.children.length>0){s.children=[];for(let a=0;a<this.children.length;a++)s.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];s.animations.push(r(t.animations,l))}}if(e){const a=o(t.geometries),l=o(t.materials),c=o(t.textures),h=o(t.images),u=o(t.shapes),f=o(t.skeletons),d=o(t.animations),g=o(t.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),f.length>0&&(n.skeletons=f),d.length>0&&(n.animations=d),g.length>0&&(n.nodes=g)}return n.object=s,n;function o(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const s=t.children[n];this.add(s.clone())}return this}}ae.DEFAULT_UP=new I(0,1,0);ae.DEFAULT_MATRIX_AUTO_UPDATE=!0;ae.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Mn=new I,qn=new I,Ja=new I,Yn=new I,cs=new I,hs=new I,Fu=new I,Qa=new I,tl=new I,el=new I;class Nn{constructor(t=new I,e=new I,n=new I){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,s){s.subVectors(n,e),Mn.subVectors(t,e),s.cross(Mn);const r=s.lengthSq();return r>0?s.multiplyScalar(1/Math.sqrt(r)):s.set(0,0,0)}static getBarycoord(t,e,n,s,r){Mn.subVectors(s,e),qn.subVectors(n,e),Ja.subVectors(t,e);const o=Mn.dot(Mn),a=Mn.dot(qn),l=Mn.dot(Ja),c=qn.dot(qn),h=qn.dot(Ja),u=o*c-a*a;if(u===0)return r.set(-2,-1,-1);const f=1/u,d=(c*l-a*h)*f,g=(o*h-a*l)*f;return r.set(1-d-g,g,d)}static containsPoint(t,e,n,s){return this.getBarycoord(t,e,n,s,Yn),Yn.x>=0&&Yn.y>=0&&Yn.x+Yn.y<=1}static getUV(t,e,n,s,r,o,a,l){return this.getBarycoord(t,e,n,s,Yn),l.set(0,0),l.addScaledVector(r,Yn.x),l.addScaledVector(o,Yn.y),l.addScaledVector(a,Yn.z),l}static isFrontFacing(t,e,n,s){return Mn.subVectors(n,e),qn.subVectors(t,e),Mn.cross(qn).dot(s)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,s){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,e,n,s){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,s),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Mn.subVectors(this.c,this.b),qn.subVectors(this.a,this.b),Mn.cross(qn).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Nn.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Nn.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,s,r){return Nn.getUV(t,this.a,this.b,this.c,e,n,s,r)}containsPoint(t){return Nn.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Nn.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,s=this.b,r=this.c;let o,a;cs.subVectors(s,n),hs.subVectors(r,n),Qa.subVectors(t,n);const l=cs.dot(Qa),c=hs.dot(Qa);if(l<=0&&c<=0)return e.copy(n);tl.subVectors(t,s);const h=cs.dot(tl),u=hs.dot(tl);if(h>=0&&u<=h)return e.copy(s);const f=l*u-h*c;if(f<=0&&l>=0&&h<=0)return o=l/(l-h),e.copy(n).addScaledVector(cs,o);el.subVectors(t,r);const d=cs.dot(el),g=hs.dot(el);if(g>=0&&d<=g)return e.copy(r);const p=d*c-l*g;if(p<=0&&c>=0&&g<=0)return a=c/(c-g),e.copy(n).addScaledVector(hs,a);const m=h*g-d*u;if(m<=0&&u-h>=0&&d-g>=0)return Fu.subVectors(r,s),a=(u-h)/(u-h+(d-g)),e.copy(s).addScaledVector(Fu,a);const _=1/(m+p+f);return o=p*_,a=f*_,e.copy(n).addScaledVector(cs,o).addScaledVector(hs,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let vy=0;class ri extends Ji{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:vy++}),this.uuid=si(),this.name="",this.type="Material",this.blending=Ds,this.side=xn,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=mp,this.blendDst=gp,this.blendEquation=bs,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Wl,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Kx,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ba,this.stencilZFail=Ba,this.stencilZPass=Ba,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}const s=this[e];if(s===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}s&&s.isColor?s.set(n):s&&s.isVector3&&n&&n.isVector3?s.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Ds&&(n.blending=this.blending),this.side!==xn&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function s(r){const o=[];for(const a in r){const l=r[a];delete l.metadata,o.push(l)}return o}if(e){const r=s(t.textures),o=s(t.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const s=e.length;n=new Array(s);for(let r=0;r!==s;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class Ti extends ri{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ct(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ca,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const ye=new I,ho=new xt;class je{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=Su,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let s=0,r=this.itemSize;s<r;s++)this.array[t+s]=e.array[n+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)ho.fromBufferAttribute(this,e),ho.applyMatrix3(t),this.setXY(e,ho.x,ho.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)ye.fromBufferAttribute(this,e),ye.applyMatrix3(t),this.setXYZ(e,ye.x,ye.y,ye.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)ye.fromBufferAttribute(this,e),ye.applyMatrix4(t),this.setXYZ(e,ye.x,ye.y,ye.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)ye.fromBufferAttribute(this,e),ye.applyNormalMatrix(t),this.setXYZ(e,ye.x,ye.y,ye.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)ye.fromBufferAttribute(this,e),ye.transformDirection(t),this.setXYZ(e,ye.x,ye.y,ye.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=pr(e,this.array)),e}setX(t,e){return this.normalized&&(e=Ye(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=pr(e,this.array)),e}setY(t,e){return this.normalized&&(e=Ye(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=pr(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Ye(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=pr(e,this.array)),e}setW(t,e){return this.normalized&&(e=Ye(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=Ye(e,this.array),n=Ye(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,s){return t*=this.itemSize,this.normalized&&(e=Ye(e,this.array),n=Ye(n,this.array),s=Ye(s,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=s,this}setXYZW(t,e,n,s,r){return t*=this.itemSize,this.normalized&&(e=Ye(e,this.array),n=Ye(n,this.array),s=Ye(s,this.array),r=Ye(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=s,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Su&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Lc extends je{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class Tp extends je{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class jt extends je{constructor(t,e,n){super(new Float32Array(t),e,n)}}let wy=0;const cn=new Dt,nl=new ae,us=new I,nn=new Xr,rr=new Xr,Pe=new I;class pe extends Ji{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:wy++}),this.uuid=si(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(vp(t)?Tp:Lc)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new Ke().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return cn.makeRotationFromQuaternion(t),this.applyMatrix4(cn),this}rotateX(t){return cn.makeRotationX(t),this.applyMatrix4(cn),this}rotateY(t){return cn.makeRotationY(t),this.applyMatrix4(cn),this}rotateZ(t){return cn.makeRotationZ(t),this.applyMatrix4(cn),this}translate(t,e,n){return cn.makeTranslation(t,e,n),this.applyMatrix4(cn),this}scale(t,e,n){return cn.makeScale(t,e,n),this.applyMatrix4(cn),this}lookAt(t){return nl.lookAt(t),nl.updateMatrix(),this.applyMatrix4(nl.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(us).negate(),this.translate(us.x,us.y,us.z),this}setFromPoints(t){const e=[];for(let n=0,s=t.length;n<s;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new jt(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Xr);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new I(-1/0,-1/0,-1/0),new I(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,s=e.length;n<s;n++){const r=e[n];nn.setFromBufferAttribute(r),this.morphTargetsRelative?(Pe.addVectors(this.boundingBox.min,nn.min),this.boundingBox.expandByPoint(Pe),Pe.addVectors(this.boundingBox.max,nn.max),this.boundingBox.expandByPoint(Pe)):(this.boundingBox.expandByPoint(nn.min),this.boundingBox.expandByPoint(nn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new jr);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new I,1/0);return}if(t){const n=this.boundingSphere.center;if(nn.setFromBufferAttribute(t),e)for(let r=0,o=e.length;r<o;r++){const a=e[r];rr.setFromBufferAttribute(a),this.morphTargetsRelative?(Pe.addVectors(nn.min,rr.min),nn.expandByPoint(Pe),Pe.addVectors(nn.max,rr.max),nn.expandByPoint(Pe)):(nn.expandByPoint(rr.min),nn.expandByPoint(rr.max))}nn.getCenter(n);let s=0;for(let r=0,o=t.count;r<o;r++)Pe.fromBufferAttribute(t,r),s=Math.max(s,n.distanceToSquared(Pe));if(e)for(let r=0,o=e.length;r<o;r++){const a=e[r],l=this.morphTargetsRelative;for(let c=0,h=a.count;c<h;c++)Pe.fromBufferAttribute(a,c),l&&(us.fromBufferAttribute(t,c),Pe.add(us)),s=Math.max(s,n.distanceToSquared(Pe))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.array,s=e.position.array,r=e.normal.array,o=e.uv.array,a=s.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new je(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],h=[];for(let R=0;R<a;R++)c[R]=new I,h[R]=new I;const u=new I,f=new I,d=new I,g=new xt,p=new xt,m=new xt,_=new I,w=new I;function x(R,j,Q){u.fromArray(s,R*3),f.fromArray(s,j*3),d.fromArray(s,Q*3),g.fromArray(o,R*2),p.fromArray(o,j*2),m.fromArray(o,Q*2),f.sub(u),d.sub(u),p.sub(g),m.sub(g);const U=1/(p.x*m.y-m.x*p.y);isFinite(U)&&(_.copy(f).multiplyScalar(m.y).addScaledVector(d,-p.y).multiplyScalar(U),w.copy(d).multiplyScalar(p.x).addScaledVector(f,-m.x).multiplyScalar(U),c[R].add(_),c[j].add(_),c[Q].add(_),h[R].add(w),h[j].add(w),h[Q].add(w))}let b=this.groups;b.length===0&&(b=[{start:0,count:n.length}]);for(let R=0,j=b.length;R<j;++R){const Q=b[R],U=Q.start,O=Q.count;for(let J=U,Z=U+O;J<Z;J+=3)x(n[J+0],n[J+1],n[J+2])}const S=new I,C=new I,D=new I,y=new I;function A(R){D.fromArray(r,R*3),y.copy(D);const j=c[R];S.copy(j),S.sub(D.multiplyScalar(D.dot(j))).normalize(),C.crossVectors(y,j);const U=C.dot(h[R])<0?-1:1;l[R*4]=S.x,l[R*4+1]=S.y,l[R*4+2]=S.z,l[R*4+3]=U}for(let R=0,j=b.length;R<j;++R){const Q=b[R],U=Q.start,O=Q.count;for(let J=U,Z=U+O;J<Z;J+=3)A(n[J+0]),A(n[J+1]),A(n[J+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new je(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let f=0,d=n.count;f<d;f++)n.setXYZ(f,0,0,0);const s=new I,r=new I,o=new I,a=new I,l=new I,c=new I,h=new I,u=new I;if(t)for(let f=0,d=t.count;f<d;f+=3){const g=t.getX(f+0),p=t.getX(f+1),m=t.getX(f+2);s.fromBufferAttribute(e,g),r.fromBufferAttribute(e,p),o.fromBufferAttribute(e,m),h.subVectors(o,r),u.subVectors(s,r),h.cross(u),a.fromBufferAttribute(n,g),l.fromBufferAttribute(n,p),c.fromBufferAttribute(n,m),a.add(h),l.add(h),c.add(h),n.setXYZ(g,a.x,a.y,a.z),n.setXYZ(p,l.x,l.y,l.z),n.setXYZ(m,c.x,c.y,c.z)}else for(let f=0,d=e.count;f<d;f+=3)s.fromBufferAttribute(e,f+0),r.fromBufferAttribute(e,f+1),o.fromBufferAttribute(e,f+2),h.subVectors(o,r),u.subVectors(s,r),h.cross(u),n.setXYZ(f+0,h.x,h.y,h.z),n.setXYZ(f+1,h.x,h.y,h.z),n.setXYZ(f+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Pe.fromBufferAttribute(t,e),Pe.normalize(),t.setXYZ(e,Pe.x,Pe.y,Pe.z)}toNonIndexed(){function t(a,l){const c=a.array,h=a.itemSize,u=a.normalized,f=new c.constructor(l.length*h);let d=0,g=0;for(let p=0,m=l.length;p<m;p++){a.isInterleavedBufferAttribute?d=l[p]*a.data.stride+a.offset:d=l[p]*h;for(let _=0;_<h;_++)f[g++]=c[d++]}return new je(f,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new pe,n=this.index.array,s=this.attributes;for(const a in s){const l=s[a],c=t(l,n);e.setAttribute(a,c)}const r=this.morphAttributes;for(const a in r){const l=[],c=r[a];for(let h=0,u=c.length;h<u;h++){const f=c[h],d=t(f,n);l.push(d)}e.morphAttributes[a]=l}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];e.addGroup(c.start,c.count,c.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(t[c]=l[c]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const l in n){const c=n[l];t.data.attributes[l]=c.toJSON(t.data)}const s={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,f=c.length;u<f;u++){const d=c[u];h.push(d.toJSON(t.data))}h.length>0&&(s[l]=h,r=!0)}r&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const s=t.attributes;for(const c in s){const h=s[c];this.setAttribute(c,h.clone(e))}const r=t.morphAttributes;for(const c in r){const h=[],u=r[c];for(let f=0,d=u.length;f<d;f++)h.push(u[f].clone(e));this.morphAttributes[c]=h}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let c=0,h=o.length;c<h;c++){const u=o[c];this.addGroup(u.start,u.count,u.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,t.parameters!==void 0&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const Ou=new Dt,fs=new fa,il=new jr,or=new I,ar=new I,lr=new I,sl=new I,uo=new I,fo=new xt,po=new xt,mo=new xt,rl=new I,go=new I;class Ot extends ae{constructor(t=new pe,e=new Ti){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const s=e[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=s.length;r<o;r++){const a=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(t,e){const n=this.geometry,s=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;e.fromBufferAttribute(s,t);const a=this.morphTargetInfluences;if(r&&a){uo.set(0,0,0);for(let l=0,c=r.length;l<c;l++){const h=a[l],u=r[l];h!==0&&(sl.fromBufferAttribute(u,t),o?uo.addScaledVector(sl,h):uo.addScaledVector(sl.sub(e),h))}e.add(uo)}return this.isSkinnedMesh&&this.boneTransform(t,e),e}raycast(t,e){const n=this.geometry,s=this.material,r=this.matrixWorld;if(s===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),il.copy(n.boundingSphere),il.applyMatrix4(r),t.ray.intersectsSphere(il)===!1)||(Ou.copy(r).invert(),fs.copy(t.ray).applyMatrix4(Ou),n.boundingBox!==null&&fs.intersectsBox(n.boundingBox)===!1))return;let o;const a=n.index,l=n.attributes.position,c=n.attributes.uv,h=n.attributes.uv2,u=n.groups,f=n.drawRange;if(a!==null)if(Array.isArray(s))for(let d=0,g=u.length;d<g;d++){const p=u[d],m=s[p.materialIndex],_=Math.max(p.start,f.start),w=Math.min(a.count,Math.min(p.start+p.count,f.start+f.count));for(let x=_,b=w;x<b;x+=3){const S=a.getX(x),C=a.getX(x+1),D=a.getX(x+2);o=_o(this,m,t,fs,c,h,S,C,D),o&&(o.faceIndex=Math.floor(x/3),o.face.materialIndex=p.materialIndex,e.push(o))}}else{const d=Math.max(0,f.start),g=Math.min(a.count,f.start+f.count);for(let p=d,m=g;p<m;p+=3){const _=a.getX(p),w=a.getX(p+1),x=a.getX(p+2);o=_o(this,s,t,fs,c,h,_,w,x),o&&(o.faceIndex=Math.floor(p/3),e.push(o))}}else if(l!==void 0)if(Array.isArray(s))for(let d=0,g=u.length;d<g;d++){const p=u[d],m=s[p.materialIndex],_=Math.max(p.start,f.start),w=Math.min(l.count,Math.min(p.start+p.count,f.start+f.count));for(let x=_,b=w;x<b;x+=3){const S=x,C=x+1,D=x+2;o=_o(this,m,t,fs,c,h,S,C,D),o&&(o.faceIndex=Math.floor(x/3),o.face.materialIndex=p.materialIndex,e.push(o))}}else{const d=Math.max(0,f.start),g=Math.min(l.count,f.start+f.count);for(let p=d,m=g;p<m;p+=3){const _=p,w=p+1,x=p+2;o=_o(this,s,t,fs,c,h,_,w,x),o&&(o.faceIndex=Math.floor(p/3),e.push(o))}}}}function My(i,t,e,n,s,r,o,a){let l;if(t.side===qe?l=n.intersectTriangle(o,r,s,!0,a):l=n.intersectTriangle(s,r,o,t.side===xn,a),l===null)return null;go.copy(a),go.applyMatrix4(i.matrixWorld);const c=e.ray.origin.distanceTo(go);return c<e.near||c>e.far?null:{distance:c,point:go.clone(),object:i}}function _o(i,t,e,n,s,r,o,a,l){i.getVertexPosition(o,or),i.getVertexPosition(a,ar),i.getVertexPosition(l,lr);const c=My(i,t,e,n,or,ar,lr,rl);if(c){s&&(fo.fromBufferAttribute(s,o),po.fromBufferAttribute(s,a),mo.fromBufferAttribute(s,l),c.uv=Nn.getUV(rl,or,ar,lr,fo,po,mo,new xt)),r&&(fo.fromBufferAttribute(r,o),po.fromBufferAttribute(r,a),mo.fromBufferAttribute(r,l),c.uv2=Nn.getUV(rl,or,ar,lr,fo,po,mo,new xt));const h={a:o,b:a,c:l,normal:new I,materialIndex:0};Nn.getNormal(or,ar,lr,h.normal),c.face=h}return c}class Qi extends pe{constructor(t=1,e=1,n=1,s=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:s,heightSegments:r,depthSegments:o};const a=this;s=Math.floor(s),r=Math.floor(r),o=Math.floor(o);const l=[],c=[],h=[],u=[];let f=0,d=0;g("z","y","x",-1,-1,n,e,t,o,r,0),g("z","y","x",1,-1,n,e,-t,o,r,1),g("x","z","y",1,1,t,n,e,s,o,2),g("x","z","y",1,-1,t,n,-e,s,o,3),g("x","y","z",1,-1,t,e,n,s,r,4),g("x","y","z",-1,-1,t,e,-n,s,r,5),this.setIndex(l),this.setAttribute("position",new jt(c,3)),this.setAttribute("normal",new jt(h,3)),this.setAttribute("uv",new jt(u,2));function g(p,m,_,w,x,b,S,C,D,y,A){const R=b/D,j=S/y,Q=b/2,U=S/2,O=C/2,J=D+1,Z=y+1;let it=0,Y=0;const ft=new I;for(let dt=0;dt<Z;dt++){const vt=dt*j-U;for(let W=0;W<J;W++){const ot=W*R-Q;ft[p]=ot*w,ft[m]=vt*x,ft[_]=O,c.push(ft.x,ft.y,ft.z),ft[p]=0,ft[m]=0,ft[_]=C>0?1:-1,h.push(ft.x,ft.y,ft.z),u.push(W/D),u.push(1-dt/y),it+=1}}for(let dt=0;dt<y;dt++)for(let vt=0;vt<D;vt++){const W=f+vt+J*dt,ot=f+vt+J*(dt+1),yt=f+(vt+1)+J*(dt+1),N=f+(vt+1)+J*dt;l.push(W,ot,N),l.push(ot,yt,N),Y+=6}a.addGroup(d,Y,A),d+=Y,f+=it}}static fromJSON(t){return new Qi(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Gs(i){const t={};for(const e in i){t[e]={};for(const n in i[e]){const s=i[e][n];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?t[e][n]=s.clone():Array.isArray(s)?t[e][n]=s.slice():t[e][n]=s}}return t}function Ve(i){const t={};for(let e=0;e<i.length;e++){const n=Gs(i[e]);for(const s in n)t[s]=n[s]}return t}function by(i){const t=[];for(let e=0;e<i.length;e++)t.push(i[e].clone());return t}function Ep(i){return i.getRenderTarget()===null&&i.outputEncoding===se?In:Or}const Sy={clone:Gs,merge:Ve};var Ty=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Ey=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class we extends ri{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Ty,this.fragmentShader=Ey,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Gs(t.uniforms),this.uniformsGroups=by(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const s in this.uniforms){const o=this.uniforms[s].value;o&&o.isTexture?e.uniforms[s]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[s]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[s]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[s]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[s]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[s]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[s]={type:"m4",value:o.toArray()}:e.uniforms[s]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const s in this.extensions)this.extensions[s]===!0&&(n[s]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class Ap extends ae{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Dt,this.projectionMatrix=new Dt,this.projectionMatrixInverse=new Dt}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Ge extends Ap{constructor(t=50,e=1,n=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=s,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Nr*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(Fs*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Nr*2*Math.atan(Math.tan(Fs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,s,r,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(Fs*.5*this.fov)/this.zoom,n=2*e,s=this.aspect*n,r=-.5*s;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;r+=o.offsetX*s/l,e-=o.offsetY*n/c,s*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+s,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const ds=-90,ps=1;class Ay extends ae{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n;const s=new Ge(ds,ps,t,e);s.layers=this.layers,s.up.set(0,1,0),s.lookAt(1,0,0),this.add(s);const r=new Ge(ds,ps,t,e);r.layers=this.layers,r.up.set(0,1,0),r.lookAt(-1,0,0),this.add(r);const o=new Ge(ds,ps,t,e);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(0,1,0),this.add(o);const a=new Ge(ds,ps,t,e);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(0,-1,0),this.add(a);const l=new Ge(ds,ps,t,e);l.layers=this.layers,l.up.set(0,1,0),l.lookAt(0,0,1),this.add(l);const c=new Ge(ds,ps,t,e);c.layers=this.layers,c.up.set(0,1,0),c.lookAt(0,0,-1),this.add(c)}update(t,e){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[s,r,o,a,l,c]=this.children,h=t.getRenderTarget(),u=t.toneMapping,f=t.xr.enabled;t.toneMapping=Qn,t.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,s),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,o),t.setRenderTarget(n,3),t.render(e,a),t.setRenderTarget(n,4),t.render(e,l),n.texture.generateMipmaps=d,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(h),t.toneMapping=u,t.xr.enabled=f,n.texture.needsPMREMUpdate=!0}}class Pp extends Re{constructor(t,e,n,s,r,o,a,l,c,h){t=t!==void 0?t:[],e=e!==void 0?e:Bs,super(t,e,n,s,r,o,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class Py extends Zi{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},s=[n,n,n,n,n,n];this.texture=new Pp(s,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:hn}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new Qi(5,5,5),r=new we({name:"CubemapFromEquirect",uniforms:Gs(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:qe,blending:Mi});r.uniforms.tEquirect.value=e;const o=new Ot(s,r),a=e.minFilter;return e.minFilter===zr&&(e.minFilter=hn),new Ay(1,10,this).update(t,o),e.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,s){const r=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(e,n,s);t.setRenderTarget(r)}}const ol=new I,Cy=new I,Ly=new Ke;let Oi=class{constructor(t=new I(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,s){return this.normal.set(t,e,n),this.constant=s,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const s=ol.subVectors(n,e).cross(Cy.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(s,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const n=t.delta(ol),s=this.normal.dot(n);if(s===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/s;return r<0||r>1?null:e.copy(n).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||Ly.getNormalMatrix(t),s=this.coplanarPoint(ol).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-s.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}};const ms=new jr,xo=new I;class Rc{constructor(t=new Oi,e=new Oi,n=new Oi,s=new Oi,r=new Oi,o=new Oi){this.planes=[t,e,n,s,r,o]}set(t,e,n,s,r,o){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(s),a[4].copy(r),a[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,s=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],h=n[6],u=n[7],f=n[8],d=n[9],g=n[10],p=n[11],m=n[12],_=n[13],w=n[14],x=n[15];return e[0].setComponents(a-s,u-l,p-f,x-m).normalize(),e[1].setComponents(a+s,u+l,p+f,x+m).normalize(),e[2].setComponents(a+r,u+c,p+d,x+_).normalize(),e[3].setComponents(a-r,u-c,p-d,x-_).normalize(),e[4].setComponents(a-o,u-h,p-g,x-w).normalize(),e[5].setComponents(a+o,u+h,p+g,x+w).normalize(),this}intersectsObject(t){const e=t.geometry;return e.boundingSphere===null&&e.computeBoundingSphere(),ms.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(ms)}intersectsSprite(t){return ms.center.set(0,0,0),ms.radius=.7071067811865476,ms.applyMatrix4(t.matrixWorld),this.intersectsSphere(ms)}intersectsSphere(t){const e=this.planes,n=t.center,s=-t.radius;for(let r=0;r<6;r++)if(e[r].distanceToPoint(n)<s)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const s=e[n];if(xo.x=s.normal.x>0?t.max.x:t.min.x,xo.y=s.normal.y>0?t.max.y:t.min.y,xo.z=s.normal.z>0?t.max.z:t.min.z,s.distanceToPoint(xo)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Cp(){let i=null,t=!1,e=null,n=null;function s(r,o){e(r,o),n=i.requestAnimationFrame(s)}return{start:function(){t!==!0&&e!==null&&(n=i.requestAnimationFrame(s),t=!0)},stop:function(){i.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(r){e=r},setContext:function(r){i=r}}}function Ry(i,t){const e=t.isWebGL2,n=new WeakMap;function s(c,h){const u=c.array,f=c.usage,d=i.createBuffer();i.bindBuffer(h,d),i.bufferData(h,u,f),c.onUploadCallback();let g;if(u instanceof Float32Array)g=5126;else if(u instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(e)g=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else g=5123;else if(u instanceof Int16Array)g=5122;else if(u instanceof Uint32Array)g=5125;else if(u instanceof Int32Array)g=5124;else if(u instanceof Int8Array)g=5120;else if(u instanceof Uint8Array)g=5121;else if(u instanceof Uint8ClampedArray)g=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:d,type:g,bytesPerElement:u.BYTES_PER_ELEMENT,version:c.version}}function r(c,h,u){const f=h.array,d=h.updateRange;i.bindBuffer(u,c),d.count===-1?i.bufferSubData(u,0,f):(e?i.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):i.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1),h.onUploadCallback()}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h&&(i.deleteBuffer(h.buffer),n.delete(c))}function l(c,h){if(c.isGLBufferAttribute){const f=n.get(c);(!f||f.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u===void 0?n.set(c,s(c,h)):u.version<c.version&&(r(u.buffer,c,h),u.version=c.version)}return{get:o,remove:a,update:l}}class qs extends pe{constructor(t=1,e=1,n=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:s};const r=t/2,o=e/2,a=Math.floor(n),l=Math.floor(s),c=a+1,h=l+1,u=t/a,f=e/l,d=[],g=[],p=[],m=[];for(let _=0;_<h;_++){const w=_*f-o;for(let x=0;x<c;x++){const b=x*u-r;g.push(b,-w,0),p.push(0,0,1),m.push(x/a),m.push(1-_/l)}}for(let _=0;_<l;_++)for(let w=0;w<a;w++){const x=w+c*_,b=w+c*(_+1),S=w+1+c*(_+1),C=w+1+c*_;d.push(x,b,C),d.push(b,S,C)}this.setIndex(d),this.setAttribute("position",new jt(g,3)),this.setAttribute("normal",new jt(p,3)),this.setAttribute("uv",new jt(m,2))}static fromJSON(t){return new qs(t.width,t.height,t.widthSegments,t.heightSegments)}}var Iy=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Dy=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,zy=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Fy=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Oy=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Ny=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,ky="vec3 transformed = vec3( position );",Uy=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,By=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,Hy=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Vy=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Gy=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Wy=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Xy=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,jy=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,qy=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Yy=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,$y=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Zy=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Ky=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Jy=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Qy=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,tv=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,ev=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,nv=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,iv=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,sv="gl_FragColor = linearToOutputTexel( gl_FragColor );",rv=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,ov=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,av=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,lv=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,cv=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,hv=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,uv=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,fv=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,dv=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,pv=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,mv=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,gv=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,_v=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,xv=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,yv=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,vv=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,wv=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,Mv=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,bv=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,Sv=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Tv=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,Ev=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,Av=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Pv=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Cv=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Lv=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Rv=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Iv=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Dv=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,zv=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Fv=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Ov=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Nv=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,kv=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Uv=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Bv=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Hv=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Vv=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Gv=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Wv=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Xv=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,jv=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,qv=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Yv=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,$v=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Zv=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,Kv=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Jv=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,Qv=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,tw=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,ew=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,nw=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,iw=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,sw=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,rw=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,ow=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,aw=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,lw=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,cw=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,hw=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,uw=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,fw=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,dw=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,pw=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,mw=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,gw=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,_w=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,xw=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,yw=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,vw=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,ww=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,Mw=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,bw=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,Sw=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,Tw=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,Ew=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,Aw=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,Pw=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,Cw=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Lw=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Rw=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Iw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Dw=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,zw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Fw=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Ow=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Nw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,kw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Uw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Bw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Hw=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Vw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Gw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Ww=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Xw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,jw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,qw=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Yw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,$w=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Zw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Kw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Jw=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Qw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,tM=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,eM=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,nM=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,iM=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,sM=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,rM=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,oM=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,aM=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,lM=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,cM=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Bt={alphamap_fragment:Iy,alphamap_pars_fragment:Dy,alphatest_fragment:zy,alphatest_pars_fragment:Fy,aomap_fragment:Oy,aomap_pars_fragment:Ny,begin_vertex:ky,beginnormal_vertex:Uy,bsdfs:By,iridescence_fragment:Hy,bumpmap_pars_fragment:Vy,clipping_planes_fragment:Gy,clipping_planes_pars_fragment:Wy,clipping_planes_pars_vertex:Xy,clipping_planes_vertex:jy,color_fragment:qy,color_pars_fragment:Yy,color_pars_vertex:$y,color_vertex:Zy,common:Ky,cube_uv_reflection_fragment:Jy,defaultnormal_vertex:Qy,displacementmap_pars_vertex:tv,displacementmap_vertex:ev,emissivemap_fragment:nv,emissivemap_pars_fragment:iv,encodings_fragment:sv,encodings_pars_fragment:rv,envmap_fragment:ov,envmap_common_pars_fragment:av,envmap_pars_fragment:lv,envmap_pars_vertex:cv,envmap_physical_pars_fragment:wv,envmap_vertex:hv,fog_vertex:uv,fog_pars_vertex:fv,fog_fragment:dv,fog_pars_fragment:pv,gradientmap_pars_fragment:mv,lightmap_fragment:gv,lightmap_pars_fragment:_v,lights_lambert_fragment:xv,lights_lambert_pars_fragment:yv,lights_pars_begin:vv,lights_toon_fragment:Mv,lights_toon_pars_fragment:bv,lights_phong_fragment:Sv,lights_phong_pars_fragment:Tv,lights_physical_fragment:Ev,lights_physical_pars_fragment:Av,lights_fragment_begin:Pv,lights_fragment_maps:Cv,lights_fragment_end:Lv,logdepthbuf_fragment:Rv,logdepthbuf_pars_fragment:Iv,logdepthbuf_pars_vertex:Dv,logdepthbuf_vertex:zv,map_fragment:Fv,map_pars_fragment:Ov,map_particle_fragment:Nv,map_particle_pars_fragment:kv,metalnessmap_fragment:Uv,metalnessmap_pars_fragment:Bv,morphcolor_vertex:Hv,morphnormal_vertex:Vv,morphtarget_pars_vertex:Gv,morphtarget_vertex:Wv,normal_fragment_begin:Xv,normal_fragment_maps:jv,normal_pars_fragment:qv,normal_pars_vertex:Yv,normal_vertex:$v,normalmap_pars_fragment:Zv,clearcoat_normal_fragment_begin:Kv,clearcoat_normal_fragment_maps:Jv,clearcoat_pars_fragment:Qv,iridescence_pars_fragment:tw,output_fragment:ew,packing:nw,premultiplied_alpha_fragment:iw,project_vertex:sw,dithering_fragment:rw,dithering_pars_fragment:ow,roughnessmap_fragment:aw,roughnessmap_pars_fragment:lw,shadowmap_pars_fragment:cw,shadowmap_pars_vertex:hw,shadowmap_vertex:uw,shadowmask_pars_fragment:fw,skinbase_vertex:dw,skinning_pars_vertex:pw,skinning_vertex:mw,skinnormal_vertex:gw,specularmap_fragment:_w,specularmap_pars_fragment:xw,tonemapping_fragment:yw,tonemapping_pars_fragment:vw,transmission_fragment:ww,transmission_pars_fragment:Mw,uv_pars_fragment:bw,uv_pars_vertex:Sw,uv_vertex:Tw,uv2_pars_fragment:Ew,uv2_pars_vertex:Aw,uv2_vertex:Pw,worldpos_vertex:Cw,background_vert:Lw,background_frag:Rw,backgroundCube_vert:Iw,backgroundCube_frag:Dw,cube_vert:zw,cube_frag:Fw,depth_vert:Ow,depth_frag:Nw,distanceRGBA_vert:kw,distanceRGBA_frag:Uw,equirect_vert:Bw,equirect_frag:Hw,linedashed_vert:Vw,linedashed_frag:Gw,meshbasic_vert:Ww,meshbasic_frag:Xw,meshlambert_vert:jw,meshlambert_frag:qw,meshmatcap_vert:Yw,meshmatcap_frag:$w,meshnormal_vert:Zw,meshnormal_frag:Kw,meshphong_vert:Jw,meshphong_frag:Qw,meshphysical_vert:tM,meshphysical_frag:eM,meshtoon_vert:nM,meshtoon_frag:iM,points_vert:sM,points_frag:rM,shadow_vert:oM,shadow_frag:aM,sprite_vert:lM,sprite_frag:cM},St={common:{diffuse:{value:new Ct(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Ke},uv2Transform:{value:new Ke},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new xt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ct(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ct(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Ke}},sprite:{diffuse:{value:new Ct(16777215)},opacity:{value:1},center:{value:new xt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Ke}}},zn={basic:{uniforms:Ve([St.common,St.specularmap,St.envmap,St.aomap,St.lightmap,St.fog]),vertexShader:Bt.meshbasic_vert,fragmentShader:Bt.meshbasic_frag},lambert:{uniforms:Ve([St.common,St.specularmap,St.envmap,St.aomap,St.lightmap,St.emissivemap,St.bumpmap,St.normalmap,St.displacementmap,St.fog,St.lights,{emissive:{value:new Ct(0)}}]),vertexShader:Bt.meshlambert_vert,fragmentShader:Bt.meshlambert_frag},phong:{uniforms:Ve([St.common,St.specularmap,St.envmap,St.aomap,St.lightmap,St.emissivemap,St.bumpmap,St.normalmap,St.displacementmap,St.fog,St.lights,{emissive:{value:new Ct(0)},specular:{value:new Ct(1118481)},shininess:{value:30}}]),vertexShader:Bt.meshphong_vert,fragmentShader:Bt.meshphong_frag},standard:{uniforms:Ve([St.common,St.envmap,St.aomap,St.lightmap,St.emissivemap,St.bumpmap,St.normalmap,St.displacementmap,St.roughnessmap,St.metalnessmap,St.fog,St.lights,{emissive:{value:new Ct(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Bt.meshphysical_vert,fragmentShader:Bt.meshphysical_frag},toon:{uniforms:Ve([St.common,St.aomap,St.lightmap,St.emissivemap,St.bumpmap,St.normalmap,St.displacementmap,St.gradientmap,St.fog,St.lights,{emissive:{value:new Ct(0)}}]),vertexShader:Bt.meshtoon_vert,fragmentShader:Bt.meshtoon_frag},matcap:{uniforms:Ve([St.common,St.bumpmap,St.normalmap,St.displacementmap,St.fog,{matcap:{value:null}}]),vertexShader:Bt.meshmatcap_vert,fragmentShader:Bt.meshmatcap_frag},points:{uniforms:Ve([St.points,St.fog]),vertexShader:Bt.points_vert,fragmentShader:Bt.points_frag},dashed:{uniforms:Ve([St.common,St.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Bt.linedashed_vert,fragmentShader:Bt.linedashed_frag},depth:{uniforms:Ve([St.common,St.displacementmap]),vertexShader:Bt.depth_vert,fragmentShader:Bt.depth_frag},normal:{uniforms:Ve([St.common,St.bumpmap,St.normalmap,St.displacementmap,{opacity:{value:1}}]),vertexShader:Bt.meshnormal_vert,fragmentShader:Bt.meshnormal_frag},sprite:{uniforms:Ve([St.sprite,St.fog]),vertexShader:Bt.sprite_vert,fragmentShader:Bt.sprite_frag},background:{uniforms:{uvTransform:{value:new Ke},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Bt.background_vert,fragmentShader:Bt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Bt.backgroundCube_vert,fragmentShader:Bt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Bt.cube_vert,fragmentShader:Bt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Bt.equirect_vert,fragmentShader:Bt.equirect_frag},distanceRGBA:{uniforms:Ve([St.common,St.displacementmap,{referencePosition:{value:new I},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Bt.distanceRGBA_vert,fragmentShader:Bt.distanceRGBA_frag},shadow:{uniforms:Ve([St.lights,St.fog,{color:{value:new Ct(0)},opacity:{value:1}}]),vertexShader:Bt.shadow_vert,fragmentShader:Bt.shadow_frag}};zn.physical={uniforms:Ve([zn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new xt(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Ct(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new xt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Ct(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Ct(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Bt.meshphysical_vert,fragmentShader:Bt.meshphysical_frag};const yo={r:0,b:0,g:0};function hM(i,t,e,n,s,r,o){const a=new Ct(0);let l=r===!0?0:1,c,h,u=null,f=0,d=null;function g(m,_){let w=!1,x=_.isScene===!0?_.background:null;x&&x.isTexture&&(x=(_.backgroundBlurriness>0?e:t).get(x));const b=i.xr,S=b.getSession&&b.getSession();S&&S.environmentBlendMode==="additive"&&(x=null),x===null?p(a,l):x&&x.isColor&&(p(x,1),w=!0),(i.autoClear||w)&&i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil),x&&(x.isCubeTexture||x.mapping===ha)?(h===void 0&&(h=new Ot(new Qi(1,1,1),new we({name:"BackgroundCubeMaterial",uniforms:Gs(zn.backgroundCube.uniforms),vertexShader:zn.backgroundCube.vertexShader,fragmentShader:zn.backgroundCube.fragmentShader,side:qe,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(C,D,y){this.matrixWorld.copyPosition(y.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(h)),h.material.uniforms.envMap.value=x,h.material.uniforms.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.toneMapped=x.encoding!==se,(u!==x||f!==x.version||d!==i.toneMapping)&&(h.material.needsUpdate=!0,u=x,f=x.version,d=i.toneMapping),h.layers.enableAll(),m.unshift(h,h.geometry,h.material,0,0,null)):x&&x.isTexture&&(c===void 0&&(c=new Ot(new qs(2,2),new we({name:"BackgroundMaterial",uniforms:Gs(zn.background.uniforms),vertexShader:zn.background.vertexShader,fragmentShader:zn.background.fragmentShader,side:xn,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(c)),c.material.uniforms.t2D.value=x,c.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,c.material.toneMapped=x.encoding!==se,x.matrixAutoUpdate===!0&&x.updateMatrix(),c.material.uniforms.uvTransform.value.copy(x.matrix),(u!==x||f!==x.version||d!==i.toneMapping)&&(c.material.needsUpdate=!0,u=x,f=x.version,d=i.toneMapping),c.layers.enableAll(),m.unshift(c,c.geometry,c.material,0,0,null))}function p(m,_){m.getRGB(yo,Ep(i)),n.buffers.color.setClear(yo.r,yo.g,yo.b,_,o)}return{getClearColor:function(){return a},setClearColor:function(m,_=1){a.set(m),l=_,p(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(m){l=m,p(a,l)},render:g}}function uM(i,t,e,n){const s=i.getParameter(34921),r=n.isWebGL2?null:t.get("OES_vertex_array_object"),o=n.isWebGL2||r!==null,a={},l=m(null);let c=l,h=!1;function u(O,J,Z,it,Y){let ft=!1;if(o){const dt=p(it,Z,J);c!==dt&&(c=dt,d(c.object)),ft=_(O,it,Z,Y),ft&&w(O,it,Z,Y)}else{const dt=J.wireframe===!0;(c.geometry!==it.id||c.program!==Z.id||c.wireframe!==dt)&&(c.geometry=it.id,c.program=Z.id,c.wireframe=dt,ft=!0)}Y!==null&&e.update(Y,34963),(ft||h)&&(h=!1,y(O,J,Z,it),Y!==null&&i.bindBuffer(34963,e.get(Y).buffer))}function f(){return n.isWebGL2?i.createVertexArray():r.createVertexArrayOES()}function d(O){return n.isWebGL2?i.bindVertexArray(O):r.bindVertexArrayOES(O)}function g(O){return n.isWebGL2?i.deleteVertexArray(O):r.deleteVertexArrayOES(O)}function p(O,J,Z){const it=Z.wireframe===!0;let Y=a[O.id];Y===void 0&&(Y={},a[O.id]=Y);let ft=Y[J.id];ft===void 0&&(ft={},Y[J.id]=ft);let dt=ft[it];return dt===void 0&&(dt=m(f()),ft[it]=dt),dt}function m(O){const J=[],Z=[],it=[];for(let Y=0;Y<s;Y++)J[Y]=0,Z[Y]=0,it[Y]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:J,enabledAttributes:Z,attributeDivisors:it,object:O,attributes:{},index:null}}function _(O,J,Z,it){const Y=c.attributes,ft=J.attributes;let dt=0;const vt=Z.getAttributes();for(const W in vt)if(vt[W].location>=0){const yt=Y[W];let N=ft[W];if(N===void 0&&(W==="instanceMatrix"&&O.instanceMatrix&&(N=O.instanceMatrix),W==="instanceColor"&&O.instanceColor&&(N=O.instanceColor)),yt===void 0||yt.attribute!==N||N&&yt.data!==N.data)return!0;dt++}return c.attributesNum!==dt||c.index!==it}function w(O,J,Z,it){const Y={},ft=J.attributes;let dt=0;const vt=Z.getAttributes();for(const W in vt)if(vt[W].location>=0){let yt=ft[W];yt===void 0&&(W==="instanceMatrix"&&O.instanceMatrix&&(yt=O.instanceMatrix),W==="instanceColor"&&O.instanceColor&&(yt=O.instanceColor));const N={};N.attribute=yt,yt&&yt.data&&(N.data=yt.data),Y[W]=N,dt++}c.attributes=Y,c.attributesNum=dt,c.index=it}function x(){const O=c.newAttributes;for(let J=0,Z=O.length;J<Z;J++)O[J]=0}function b(O){S(O,0)}function S(O,J){const Z=c.newAttributes,it=c.enabledAttributes,Y=c.attributeDivisors;Z[O]=1,it[O]===0&&(i.enableVertexAttribArray(O),it[O]=1),Y[O]!==J&&((n.isWebGL2?i:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](O,J),Y[O]=J)}function C(){const O=c.newAttributes,J=c.enabledAttributes;for(let Z=0,it=J.length;Z<it;Z++)J[Z]!==O[Z]&&(i.disableVertexAttribArray(Z),J[Z]=0)}function D(O,J,Z,it,Y,ft){n.isWebGL2===!0&&(Z===5124||Z===5125)?i.vertexAttribIPointer(O,J,Z,Y,ft):i.vertexAttribPointer(O,J,Z,it,Y,ft)}function y(O,J,Z,it){if(n.isWebGL2===!1&&(O.isInstancedMesh||it.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;x();const Y=it.attributes,ft=Z.getAttributes(),dt=J.defaultAttributeValues;for(const vt in ft){const W=ft[vt];if(W.location>=0){let ot=Y[vt];if(ot===void 0&&(vt==="instanceMatrix"&&O.instanceMatrix&&(ot=O.instanceMatrix),vt==="instanceColor"&&O.instanceColor&&(ot=O.instanceColor)),ot!==void 0){const yt=ot.normalized,N=ot.itemSize,F=e.get(ot);if(F===void 0)continue;const tt=F.buffer,ct=F.type,gt=F.bytesPerElement;if(ot.isInterleavedBufferAttribute){const pt=ot.data,wt=pt.stride,v=ot.offset;if(pt.isInstancedInterleavedBuffer){for(let T=0;T<W.locationSize;T++)S(W.location+T,pt.meshPerAttribute);O.isInstancedMesh!==!0&&it._maxInstanceCount===void 0&&(it._maxInstanceCount=pt.meshPerAttribute*pt.count)}else for(let T=0;T<W.locationSize;T++)b(W.location+T);i.bindBuffer(34962,tt);for(let T=0;T<W.locationSize;T++)D(W.location+T,N/W.locationSize,ct,yt,wt*gt,(v+N/W.locationSize*T)*gt)}else{if(ot.isInstancedBufferAttribute){for(let pt=0;pt<W.locationSize;pt++)S(W.location+pt,ot.meshPerAttribute);O.isInstancedMesh!==!0&&it._maxInstanceCount===void 0&&(it._maxInstanceCount=ot.meshPerAttribute*ot.count)}else for(let pt=0;pt<W.locationSize;pt++)b(W.location+pt);i.bindBuffer(34962,tt);for(let pt=0;pt<W.locationSize;pt++)D(W.location+pt,N/W.locationSize,ct,yt,N*gt,N/W.locationSize*pt*gt)}}else if(dt!==void 0){const yt=dt[vt];if(yt!==void 0)switch(yt.length){case 2:i.vertexAttrib2fv(W.location,yt);break;case 3:i.vertexAttrib3fv(W.location,yt);break;case 4:i.vertexAttrib4fv(W.location,yt);break;default:i.vertexAttrib1fv(W.location,yt)}}}}C()}function A(){Q();for(const O in a){const J=a[O];for(const Z in J){const it=J[Z];for(const Y in it)g(it[Y].object),delete it[Y];delete J[Z]}delete a[O]}}function R(O){if(a[O.id]===void 0)return;const J=a[O.id];for(const Z in J){const it=J[Z];for(const Y in it)g(it[Y].object),delete it[Y];delete J[Z]}delete a[O.id]}function j(O){for(const J in a){const Z=a[J];if(Z[O.id]===void 0)continue;const it=Z[O.id];for(const Y in it)g(it[Y].object),delete it[Y];delete Z[O.id]}}function Q(){U(),h=!0,c!==l&&(c=l,d(c.object))}function U(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:u,reset:Q,resetDefaultState:U,dispose:A,releaseStatesOfGeometry:R,releaseStatesOfProgram:j,initAttributes:x,enableAttribute:b,disableUnusedAttributes:C}}function fM(i,t,e,n){const s=n.isWebGL2;let r;function o(c){r=c}function a(c,h){i.drawArrays(r,c,h),e.update(h,r,1)}function l(c,h,u){if(u===0)return;let f,d;if(s)f=i,d="drawArraysInstanced";else if(f=t.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](r,c,h,u),e.update(h,r,u)}this.setMode=o,this.render=a,this.renderInstances=l}function dM(i,t,e){let n;function s(){if(n!==void 0)return n;if(t.has("EXT_texture_filter_anisotropic")===!0){const D=t.get("EXT_texture_filter_anisotropic");n=i.getParameter(D.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(D){if(D==="highp"){if(i.getShaderPrecisionFormat(35633,36338).precision>0&&i.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";D="mediump"}return D==="mediump"&&i.getShaderPrecisionFormat(35633,36337).precision>0&&i.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&i instanceof WebGL2RenderingContext;let a=e.precision!==void 0?e.precision:"highp";const l=r(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||t.has("WEBGL_draw_buffers"),h=e.logarithmicDepthBuffer===!0,u=i.getParameter(34930),f=i.getParameter(35660),d=i.getParameter(3379),g=i.getParameter(34076),p=i.getParameter(34921),m=i.getParameter(36347),_=i.getParameter(36348),w=i.getParameter(36349),x=f>0,b=o||t.has("OES_texture_float"),S=x&&b,C=o?i.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:s,getMaxPrecision:r,precision:a,logarithmicDepthBuffer:h,maxTextures:u,maxVertexTextures:f,maxTextureSize:d,maxCubemapSize:g,maxAttributes:p,maxVertexUniforms:m,maxVaryings:_,maxFragmentUniforms:w,vertexTextures:x,floatFragmentTextures:b,floatVertexTextures:S,maxSamples:C}}function pM(i){const t=this;let e=null,n=0,s=!1,r=!1;const o=new Oi,a=new Ke,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,f){const d=u.length!==0||f||n!==0||s;return s=f,n=u.length,d},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(u,f){e=h(u,f,0)},this.setState=function(u,f,d){const g=u.clippingPlanes,p=u.clipIntersection,m=u.clipShadows,_=i.get(u);if(!s||g===null||g.length===0||r&&!m)r?h(null):c();else{const w=r?0:n,x=w*4;let b=_.clippingState||null;l.value=b,b=h(g,f,x,d);for(let S=0;S!==x;++S)b[S]=e[S];_.clippingState=b,this.numIntersection=p?this.numPlanes:0,this.numPlanes+=w}};function c(){l.value!==e&&(l.value=e,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function h(u,f,d,g){const p=u!==null?u.length:0;let m=null;if(p!==0){if(m=l.value,g!==!0||m===null){const _=d+p*4,w=f.matrixWorldInverse;a.getNormalMatrix(w),(m===null||m.length<_)&&(m=new Float32Array(_));for(let x=0,b=d;x!==p;++x,b+=4)o.copy(u[x]).applyMatrix4(w,a),o.normal.toArray(m,b),m[b+3]=o.constant}l.value=m,l.needsUpdate=!0}return t.numPlanes=p,t.numIntersection=0,m}}function mM(i){let t=new WeakMap;function e(o,a){return a===Xo?o.mapping=Bs:a===Xl&&(o.mapping=Hs),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===Xo||a===Xl)if(t.has(o)){const l=t.get(o).texture;return e(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new Py(l.height/2);return c.fromEquirectangularTexture(i,o),t.set(o,c),o.addEventListener("dispose",s),e(c.texture,o.mapping)}else return null}}return o}function s(o){const a=o.target;a.removeEventListener("dispose",s);const l=t.get(a);l!==void 0&&(t.delete(a),l.dispose())}function r(){t=new WeakMap}return{get:n,dispose:r}}class Ic extends Ap{constructor(t=-1,e=1,n=1,s=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=s,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,s,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let r=n-t,o=n+t,a=s+e,l=s-e;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}const Es=4,Nu=[.125,.215,.35,.446,.526,.582],Hi=20,al=new Ic,ku=new Ct;let ll=null;const Ni=(1+Math.sqrt(5))/2,gs=1/Ni,Uu=[new I(1,1,1),new I(-1,1,1),new I(1,1,-1),new I(-1,1,-1),new I(0,Ni,gs),new I(0,Ni,-gs),new I(gs,0,Ni),new I(-gs,0,Ni),new I(Ni,gs,0),new I(-Ni,gs,0)];class Bu{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,s=100){ll=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,n,s,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Gu(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Vu(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(ll),t.scissorTest=!1,vo(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Bs||t.mapping===Hs?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),ll=this._renderer.getRenderTarget();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:hn,minFilter:hn,generateMipmaps:!1,type:Fr,format:fn,encoding:$i,depthBuffer:!1},s=Hu(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Hu(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=gM(r)),this._blurMaterial=_M(r,t,e)}return s}_compileMaterial(t){const e=new Ot(this._lodPlanes[0],t);this._renderer.compile(e,al)}_sceneToCubeUV(t,e,n,s){const a=new Ge(90,1,e,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],h=this._renderer,u=h.autoClear,f=h.toneMapping;h.getClearColor(ku),h.toneMapping=Qn,h.autoClear=!1;const d=new Ti({name:"PMREM.Background",side:qe,depthWrite:!1,depthTest:!1}),g=new Ot(new Qi,d);let p=!1;const m=t.background;m?m.isColor&&(d.color.copy(m),t.background=null,p=!0):(d.color.copy(ku),p=!0);for(let _=0;_<6;_++){const w=_%3;w===0?(a.up.set(0,l[_],0),a.lookAt(c[_],0,0)):w===1?(a.up.set(0,0,l[_]),a.lookAt(0,c[_],0)):(a.up.set(0,l[_],0),a.lookAt(0,0,c[_]));const x=this._cubeSize;vo(s,w*x,_>2?x:0,x,x),h.setRenderTarget(s),p&&h.render(g,a),h.render(t,a)}g.geometry.dispose(),g.material.dispose(),h.toneMapping=f,h.autoClear=u,t.background=m}_textureToCubeUV(t,e){const n=this._renderer,s=t.mapping===Bs||t.mapping===Hs;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=Gu()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Vu());const r=s?this._cubemapMaterial:this._equirectMaterial,o=new Ot(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=t;const l=this._cubeSize;vo(e,0,0,3*l,2*l),n.setRenderTarget(e),n.render(o,al)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let s=1;s<this._lodPlanes.length;s++){const r=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),o=Uu[(s-1)%Uu.length];this._blur(t,s-1,s,r,o)}e.autoClear=n}_blur(t,e,n,s,r){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,s,"latitudinal",r),this._halfBlur(o,t,n,n,s,"longitudinal",r)}_halfBlur(t,e,n,s,r,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new Ot(this._lodPlanes[s],c),f=c.uniforms,d=this._sizeLods[n]-1,g=isFinite(r)?Math.PI/(2*d):2*Math.PI/(2*Hi-1),p=r/g,m=isFinite(r)?1+Math.floor(h*p):Hi;m>Hi&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Hi}`);const _=[];let w=0;for(let D=0;D<Hi;++D){const y=D/p,A=Math.exp(-y*y/2);_.push(A),D===0?w+=A:D<m&&(w+=2*A)}for(let D=0;D<_.length;D++)_[D]=_[D]/w;f.envMap.value=t.texture,f.samples.value=m,f.weights.value=_,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a);const{_lodMax:x}=this;f.dTheta.value=g,f.mipInt.value=x-n;const b=this._sizeLods[s],S=3*b*(s>x-Es?s-x+Es:0),C=4*(this._cubeSize-b);vo(e,S,C,3*b,2*b),l.setRenderTarget(e),l.render(u,al)}}function gM(i){const t=[],e=[],n=[];let s=i;const r=i-Es+1+Nu.length;for(let o=0;o<r;o++){const a=Math.pow(2,s);e.push(a);let l=1/a;o>i-Es?l=Nu[o-i+Es-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),h=-c,u=1+c,f=[h,h,u,h,u,u,h,h,u,u,h,u],d=6,g=6,p=3,m=2,_=1,w=new Float32Array(p*g*d),x=new Float32Array(m*g*d),b=new Float32Array(_*g*d);for(let C=0;C<d;C++){const D=C%3*2/3-1,y=C>2?0:-1,A=[D,y,0,D+2/3,y,0,D+2/3,y+1,0,D,y,0,D+2/3,y+1,0,D,y+1,0];w.set(A,p*g*C),x.set(f,m*g*C);const R=[C,C,C,C,C,C];b.set(R,_*g*C)}const S=new pe;S.setAttribute("position",new je(w,p)),S.setAttribute("uv",new je(x,m)),S.setAttribute("faceIndex",new je(b,_)),t.push(S),s>Es&&s--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function Hu(i,t,e){const n=new Zi(i,t,e);return n.texture.mapping=ha,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function vo(i,t,e,n,s){i.viewport.set(t,e,n,s),i.scissor.set(t,e,n,s)}function _M(i,t,e){const n=new Float32Array(Hi),s=new I(0,1,0);return new we({name:"SphericalGaussianBlur",defines:{n:Hi,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:Dc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Mi,depthTest:!1,depthWrite:!1})}function Vu(){return new we({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Dc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Mi,depthTest:!1,depthWrite:!1})}function Gu(){return new we({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Dc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Mi,depthTest:!1,depthWrite:!1})}function Dc(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function xM(i){let t=new WeakMap,e=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===Xo||l===Xl,h=l===Bs||l===Hs;if(c||h)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let u=t.get(a);return e===null&&(e=new Bu(i)),u=c?e.fromEquirectangular(a,u):e.fromCubemap(a,u),t.set(a,u),u.texture}else{if(t.has(a))return t.get(a).texture;{const u=a.image;if(c&&u&&u.height>0||h&&u&&s(u)){e===null&&(e=new Bu(i));const f=c?e.fromEquirectangular(a):e.fromCubemap(a);return t.set(a,f),a.addEventListener("dispose",r),f.texture}else return null}}}return a}function s(a){let l=0;const c=6;for(let h=0;h<c;h++)a[h]!==void 0&&l++;return l===c}function r(a){const l=a.target;l.removeEventListener("dispose",r);const c=t.get(l);c!==void 0&&(t.delete(l),c.dispose())}function o(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:o}}function yM(i){const t={};function e(n){if(t[n]!==void 0)return t[n];let s;switch(n){case"WEBGL_depth_texture":s=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=i.getExtension(n)}return t[n]=s,s}return{has:function(n){return e(n)!==null},init:function(n){n.isWebGL2?e("EXT_color_buffer_float"):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture")},get:function(n){const s=e(n);return s===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),s}}}function vM(i,t,e,n){const s={},r=new WeakMap;function o(u){const f=u.target;f.index!==null&&t.remove(f.index);for(const g in f.attributes)t.remove(f.attributes[g]);f.removeEventListener("dispose",o),delete s[f.id];const d=r.get(f);d&&(t.remove(d),r.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,e.memory.geometries--}function a(u,f){return s[f.id]===!0||(f.addEventListener("dispose",o),s[f.id]=!0,e.memory.geometries++),f}function l(u){const f=u.attributes;for(const g in f)t.update(f[g],34962);const d=u.morphAttributes;for(const g in d){const p=d[g];for(let m=0,_=p.length;m<_;m++)t.update(p[m],34962)}}function c(u){const f=[],d=u.index,g=u.attributes.position;let p=0;if(d!==null){const w=d.array;p=d.version;for(let x=0,b=w.length;x<b;x+=3){const S=w[x+0],C=w[x+1],D=w[x+2];f.push(S,C,C,D,D,S)}}else{const w=g.array;p=g.version;for(let x=0,b=w.length/3-1;x<b;x+=3){const S=x+0,C=x+1,D=x+2;f.push(S,C,C,D,D,S)}}const m=new(vp(f)?Tp:Lc)(f,1);m.version=p;const _=r.get(u);_&&t.remove(_),r.set(u,m)}function h(u){const f=r.get(u);if(f){const d=u.index;d!==null&&f.version<d.version&&c(u)}else c(u);return r.get(u)}return{get:a,update:l,getWireframeAttribute:h}}function wM(i,t,e,n){const s=n.isWebGL2;let r;function o(f){r=f}let a,l;function c(f){a=f.type,l=f.bytesPerElement}function h(f,d){i.drawElements(r,d,a,f*l),e.update(d,r,1)}function u(f,d,g){if(g===0)return;let p,m;if(s)p=i,m="drawElementsInstanced";else if(p=t.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",p===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}p[m](r,d,a,f*l,g),e.update(d,r,g)}this.setMode=o,this.setIndex=c,this.render=h,this.renderInstances=u}function MM(i){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(e.calls++,o){case 4:e.triangles+=a*(r/3);break;case 1:e.lines+=a*(r/2);break;case 3:e.lines+=a*(r-1);break;case 2:e.lines+=a*r;break;case 0:e.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function s(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:s,update:n}}function bM(i,t){return i[0]-t[0]}function SM(i,t){return Math.abs(t[1])-Math.abs(i[1])}function TM(i,t,e){const n={},s=new Float32Array(8),r=new WeakMap,o=new ne,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,h,u,f){const d=c.morphTargetInfluences;if(t.isWebGL2===!0){const p=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,m=p!==void 0?p.length:0;let _=r.get(h);if(_===void 0||_.count!==m){let Z=function(){O.dispose(),r.delete(h),h.removeEventListener("dispose",Z)};var g=Z;_!==void 0&&_.texture.dispose();const b=h.morphAttributes.position!==void 0,S=h.morphAttributes.normal!==void 0,C=h.morphAttributes.color!==void 0,D=h.morphAttributes.position||[],y=h.morphAttributes.normal||[],A=h.morphAttributes.color||[];let R=0;b===!0&&(R=1),S===!0&&(R=2),C===!0&&(R=3);let j=h.attributes.position.count*R,Q=1;j>t.maxTextureSize&&(Q=Math.ceil(j/t.maxTextureSize),j=t.maxTextureSize);const U=new Float32Array(j*Q*4*m),O=new Sp(U,j,Q,m);O.type=xi,O.needsUpdate=!0;const J=R*4;for(let it=0;it<m;it++){const Y=D[it],ft=y[it],dt=A[it],vt=j*Q*4*it;for(let W=0;W<Y.count;W++){const ot=W*J;b===!0&&(o.fromBufferAttribute(Y,W),U[vt+ot+0]=o.x,U[vt+ot+1]=o.y,U[vt+ot+2]=o.z,U[vt+ot+3]=0),S===!0&&(o.fromBufferAttribute(ft,W),U[vt+ot+4]=o.x,U[vt+ot+5]=o.y,U[vt+ot+6]=o.z,U[vt+ot+7]=0),C===!0&&(o.fromBufferAttribute(dt,W),U[vt+ot+8]=o.x,U[vt+ot+9]=o.y,U[vt+ot+10]=o.z,U[vt+ot+11]=dt.itemSize===4?o.w:1)}}_={count:m,texture:O,size:new xt(j,Q)},r.set(h,_),h.addEventListener("dispose",Z)}let w=0;for(let b=0;b<d.length;b++)w+=d[b];const x=h.morphTargetsRelative?1:1-w;f.getUniforms().setValue(i,"morphTargetBaseInfluence",x),f.getUniforms().setValue(i,"morphTargetInfluences",d),f.getUniforms().setValue(i,"morphTargetsTexture",_.texture,e),f.getUniforms().setValue(i,"morphTargetsTextureSize",_.size)}else{const p=d===void 0?0:d.length;let m=n[h.id];if(m===void 0||m.length!==p){m=[];for(let S=0;S<p;S++)m[S]=[S,0];n[h.id]=m}for(let S=0;S<p;S++){const C=m[S];C[0]=S,C[1]=d[S]}m.sort(SM);for(let S=0;S<8;S++)S<p&&m[S][1]?(a[S][0]=m[S][0],a[S][1]=m[S][1]):(a[S][0]=Number.MAX_SAFE_INTEGER,a[S][1]=0);a.sort(bM);const _=h.morphAttributes.position,w=h.morphAttributes.normal;let x=0;for(let S=0;S<8;S++){const C=a[S],D=C[0],y=C[1];D!==Number.MAX_SAFE_INTEGER&&y?(_&&h.getAttribute("morphTarget"+S)!==_[D]&&h.setAttribute("morphTarget"+S,_[D]),w&&h.getAttribute("morphNormal"+S)!==w[D]&&h.setAttribute("morphNormal"+S,w[D]),s[S]=y,x+=y):(_&&h.hasAttribute("morphTarget"+S)===!0&&h.deleteAttribute("morphTarget"+S),w&&h.hasAttribute("morphNormal"+S)===!0&&h.deleteAttribute("morphNormal"+S),s[S]=0)}const b=h.morphTargetsRelative?1:1-x;f.getUniforms().setValue(i,"morphTargetBaseInfluence",b),f.getUniforms().setValue(i,"morphTargetInfluences",s)}}return{update:l}}function EM(i,t,e,n){let s=new WeakMap;function r(l){const c=n.render.frame,h=l.geometry,u=t.get(l,h);return s.get(u)!==c&&(t.update(u),s.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),e.update(l.instanceMatrix,34962),l.instanceColor!==null&&e.update(l.instanceColor,34962)),u}function o(){s=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),e.remove(c.instanceMatrix),c.instanceColor!==null&&e.remove(c.instanceColor)}return{update:r,dispose:o}}const Lp=new Re,Rp=new Sp,Ip=new fy,Dp=new Pp,Wu=[],Xu=[],ju=new Float32Array(16),qu=new Float32Array(9),Yu=new Float32Array(4);function Ys(i,t,e){const n=i[0];if(n<=0||n>0)return i;const s=t*e;let r=Wu[s];if(r===void 0&&(r=new Float32Array(s),Wu[s]=r),t!==0){n.toArray(r,0);for(let o=1,a=0;o!==t;++o)a+=e,i[o].toArray(r,a)}return r}function Se(i,t){if(i.length!==t.length)return!1;for(let e=0,n=i.length;e<n;e++)if(i[e]!==t[e])return!1;return!0}function Te(i,t){for(let e=0,n=t.length;e<n;e++)i[e]=t[e]}function da(i,t){let e=Xu[t];e===void 0&&(e=new Int32Array(t),Xu[t]=e);for(let n=0;n!==t;++n)e[n]=i.allocateTextureUnit();return e}function AM(i,t){const e=this.cache;e[0]!==t&&(i.uniform1f(this.addr,t),e[0]=t)}function PM(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(i.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Se(e,t))return;i.uniform2fv(this.addr,t),Te(e,t)}}function CM(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(i.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(i.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(Se(e,t))return;i.uniform3fv(this.addr,t),Te(e,t)}}function LM(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(i.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Se(e,t))return;i.uniform4fv(this.addr,t),Te(e,t)}}function RM(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(Se(e,t))return;i.uniformMatrix2fv(this.addr,!1,t),Te(e,t)}else{if(Se(e,n))return;Yu.set(n),i.uniformMatrix2fv(this.addr,!1,Yu),Te(e,n)}}function IM(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(Se(e,t))return;i.uniformMatrix3fv(this.addr,!1,t),Te(e,t)}else{if(Se(e,n))return;qu.set(n),i.uniformMatrix3fv(this.addr,!1,qu),Te(e,n)}}function DM(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(Se(e,t))return;i.uniformMatrix4fv(this.addr,!1,t),Te(e,t)}else{if(Se(e,n))return;ju.set(n),i.uniformMatrix4fv(this.addr,!1,ju),Te(e,n)}}function zM(i,t){const e=this.cache;e[0]!==t&&(i.uniform1i(this.addr,t),e[0]=t)}function FM(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(i.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Se(e,t))return;i.uniform2iv(this.addr,t),Te(e,t)}}function OM(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(i.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Se(e,t))return;i.uniform3iv(this.addr,t),Te(e,t)}}function NM(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(i.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Se(e,t))return;i.uniform4iv(this.addr,t),Te(e,t)}}function kM(i,t){const e=this.cache;e[0]!==t&&(i.uniform1ui(this.addr,t),e[0]=t)}function UM(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(i.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Se(e,t))return;i.uniform2uiv(this.addr,t),Te(e,t)}}function BM(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(i.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Se(e,t))return;i.uniform3uiv(this.addr,t),Te(e,t)}}function HM(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(i.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Se(e,t))return;i.uniform4uiv(this.addr,t),Te(e,t)}}function VM(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTexture2D(t||Lp,s)}function GM(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTexture3D(t||Ip,s)}function WM(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTextureCube(t||Dp,s)}function XM(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTexture2DArray(t||Rp,s)}function jM(i){switch(i){case 5126:return AM;case 35664:return PM;case 35665:return CM;case 35666:return LM;case 35674:return RM;case 35675:return IM;case 35676:return DM;case 5124:case 35670:return zM;case 35667:case 35671:return FM;case 35668:case 35672:return OM;case 35669:case 35673:return NM;case 5125:return kM;case 36294:return UM;case 36295:return BM;case 36296:return HM;case 35678:case 36198:case 36298:case 36306:case 35682:return VM;case 35679:case 36299:case 36307:return GM;case 35680:case 36300:case 36308:case 36293:return WM;case 36289:case 36303:case 36311:case 36292:return XM}}function qM(i,t){i.uniform1fv(this.addr,t)}function YM(i,t){const e=Ys(t,this.size,2);i.uniform2fv(this.addr,e)}function $M(i,t){const e=Ys(t,this.size,3);i.uniform3fv(this.addr,e)}function ZM(i,t){const e=Ys(t,this.size,4);i.uniform4fv(this.addr,e)}function KM(i,t){const e=Ys(t,this.size,4);i.uniformMatrix2fv(this.addr,!1,e)}function JM(i,t){const e=Ys(t,this.size,9);i.uniformMatrix3fv(this.addr,!1,e)}function QM(i,t){const e=Ys(t,this.size,16);i.uniformMatrix4fv(this.addr,!1,e)}function t1(i,t){i.uniform1iv(this.addr,t)}function e1(i,t){i.uniform2iv(this.addr,t)}function n1(i,t){i.uniform3iv(this.addr,t)}function i1(i,t){i.uniform4iv(this.addr,t)}function s1(i,t){i.uniform1uiv(this.addr,t)}function r1(i,t){i.uniform2uiv(this.addr,t)}function o1(i,t){i.uniform3uiv(this.addr,t)}function a1(i,t){i.uniform4uiv(this.addr,t)}function l1(i,t,e){const n=this.cache,s=t.length,r=da(e,s);Se(n,r)||(i.uniform1iv(this.addr,r),Te(n,r));for(let o=0;o!==s;++o)e.setTexture2D(t[o]||Lp,r[o])}function c1(i,t,e){const n=this.cache,s=t.length,r=da(e,s);Se(n,r)||(i.uniform1iv(this.addr,r),Te(n,r));for(let o=0;o!==s;++o)e.setTexture3D(t[o]||Ip,r[o])}function h1(i,t,e){const n=this.cache,s=t.length,r=da(e,s);Se(n,r)||(i.uniform1iv(this.addr,r),Te(n,r));for(let o=0;o!==s;++o)e.setTextureCube(t[o]||Dp,r[o])}function u1(i,t,e){const n=this.cache,s=t.length,r=da(e,s);Se(n,r)||(i.uniform1iv(this.addr,r),Te(n,r));for(let o=0;o!==s;++o)e.setTexture2DArray(t[o]||Rp,r[o])}function f1(i){switch(i){case 5126:return qM;case 35664:return YM;case 35665:return $M;case 35666:return ZM;case 35674:return KM;case 35675:return JM;case 35676:return QM;case 5124:case 35670:return t1;case 35667:case 35671:return e1;case 35668:case 35672:return n1;case 35669:case 35673:return i1;case 5125:return s1;case 36294:return r1;case 36295:return o1;case 36296:return a1;case 35678:case 36198:case 36298:case 36306:case 35682:return l1;case 35679:case 36299:case 36307:return c1;case 35680:case 36300:case 36308:case 36293:return h1;case 36289:case 36303:case 36311:case 36292:return u1}}class d1{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=jM(e.type)}}class p1{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=f1(e.type)}}class m1{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const s=this.seq;for(let r=0,o=s.length;r!==o;++r){const a=s[r];a.setValue(t,e[a.id],n)}}}const cl=/(\w+)(\])?(\[|\.)?/g;function $u(i,t){i.seq.push(t),i.map[t.id]=t}function g1(i,t,e){const n=i.name,s=n.length;for(cl.lastIndex=0;;){const r=cl.exec(n),o=cl.lastIndex;let a=r[1];const l=r[2]==="]",c=r[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===s){$u(e,c===void 0?new d1(a,i,t):new p1(a,i,t));break}else{let u=e.map[a];u===void 0&&(u=new m1(a),$u(e,u)),e=u}}}class ko{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let s=0;s<n;++s){const r=t.getActiveUniform(e,s),o=t.getUniformLocation(e,r.name);g1(r,o,this)}}setValue(t,e,n,s){const r=this.map[e];r!==void 0&&r.setValue(t,n,s)}setOptional(t,e,n){const s=e[n];s!==void 0&&this.setValue(t,n,s)}static upload(t,e,n,s){for(let r=0,o=e.length;r!==o;++r){const a=e[r],l=n[a.id];l.needsUpdate!==!1&&a.setValue(t,l.value,s)}}static seqWithValue(t,e){const n=[];for(let s=0,r=t.length;s!==r;++s){const o=t[s];o.id in e&&n.push(o)}return n}}function Zu(i,t,e){const n=i.createShader(t);return i.shaderSource(n,e),i.compileShader(n),n}let _1=0;function x1(i,t){const e=i.split(`
`),n=[],s=Math.max(t-6,0),r=Math.min(t+6,e.length);for(let o=s;o<r;o++){const a=o+1;n.push(`${a===t?">":" "} ${a}: ${e[o]}`)}return n.join(`
`)}function y1(i){switch(i){case $i:return["Linear","( value )"];case se:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",i),["Linear","( value )"]}}function Ku(i,t,e){const n=i.getShaderParameter(t,35713),s=i.getShaderInfoLog(t).trim();if(n&&s==="")return"";const r=/ERROR: 0:(\d+)/.exec(s);if(r){const o=parseInt(r[1]);return e.toUpperCase()+`

`+s+`

`+x1(i.getShaderSource(t),o)}else return s}function v1(i,t){const e=y1(t);return"vec4 "+i+"( vec4 value ) { return LinearTo"+e[0]+e[1]+"; }"}function w1(i,t){let e;switch(t){case Ex:e="Linear";break;case Ax:e="Reinhard";break;case Px:e="OptimizedCineon";break;case Cx:e="ACESFilmic";break;case Lx:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+i+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function M1(i){return[i.extensionDerivatives||i.envMapCubeUVHeight||i.bumpMap||i.tangentSpaceNormalMap||i.clearcoatNormalMap||i.flatShading||i.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(i.extensionFragDepth||i.logarithmicDepthBuffer)&&i.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",i.extensionDrawBuffers&&i.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(i.extensionShaderTextureLOD||i.envMap||i.transmission)&&i.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(mr).join(`
`)}function b1(i){const t=[];for(const e in i){const n=i[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function S1(i,t){const e={},n=i.getProgramParameter(t,35721);for(let s=0;s<n;s++){const r=i.getActiveAttrib(t,s),o=r.name;let a=1;r.type===35674&&(a=2),r.type===35675&&(a=3),r.type===35676&&(a=4),e[o]={type:r.type,location:i.getAttribLocation(t,o),locationSize:a}}return e}function mr(i){return i!==""}function Ju(i,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Qu(i,t){return i.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const T1=/^[ \t]*#include +<([\w\d./]+)>/gm;function $l(i){return i.replace(T1,E1)}function E1(i,t){const e=Bt[t];if(e===void 0)throw new Error("Can not resolve #include <"+t+">");return $l(e)}const A1=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function tf(i){return i.replace(A1,P1)}function P1(i,t,e,n){let s="";for(let r=parseInt(t);r<parseInt(e);r++)s+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return s}function ef(i){let t="precision "+i.precision+` float;
precision `+i.precision+" int;";return i.precision==="highp"?t+=`
#define HIGH_PRECISION`:i.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function C1(i){let t="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===dp?t="SHADOWMAP_TYPE_PCF":i.shadowMapType===pp?t="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===dr&&(t="SHADOWMAP_TYPE_VSM"),t}function L1(i){let t="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case Bs:case Hs:t="ENVMAP_TYPE_CUBE";break;case ha:t="ENVMAP_TYPE_CUBE_UV";break}return t}function R1(i){let t="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case Hs:t="ENVMAP_MODE_REFRACTION";break}return t}function I1(i){let t="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case ca:t="ENVMAP_BLENDING_MULTIPLY";break;case Sx:t="ENVMAP_BLENDING_MIX";break;case Tx:t="ENVMAP_BLENDING_ADD";break}return t}function D1(i){const t=i.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function z1(i,t,e,n){const s=i.getContext(),r=e.defines;let o=e.vertexShader,a=e.fragmentShader;const l=C1(e),c=L1(e),h=R1(e),u=I1(e),f=D1(e),d=e.isWebGL2?"":M1(e),g=b1(r),p=s.createProgram();let m,_,w=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(m=[g].filter(mr).join(`
`),m.length>0&&(m+=`
`),_=[d,g].filter(mr).join(`
`),_.length>0&&(_+=`
`)):(m=[ef(e),"#define SHADER_NAME "+e.shaderName,g,e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.supportsVertexTextures?"#define VERTEX_TEXTURES":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+h:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.displacementMap&&e.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors&&e.isWebGL2?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(mr).join(`
`),_=[d,ef(e),"#define SHADER_NAME "+e.shaderName,g,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+c:"",e.envMap?"#define "+h:"",e.envMap?"#define "+u:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==Qn?"#define TONE_MAPPING":"",e.toneMapping!==Qn?Bt.tonemapping_pars_fragment:"",e.toneMapping!==Qn?w1("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",Bt.encodings_pars_fragment,v1("linearToOutputTexel",e.outputEncoding),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(mr).join(`
`)),o=$l(o),o=Ju(o,e),o=Qu(o,e),a=$l(a),a=Ju(a,e),a=Qu(a,e),o=tf(o),a=tf(a),e.isWebGL2&&e.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,_=["#define varying in",e.glslVersion===Tu?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===Tu?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const x=w+m+o,b=w+_+a,S=Zu(s,35633,x),C=Zu(s,35632,b);if(s.attachShader(p,S),s.attachShader(p,C),e.index0AttributeName!==void 0?s.bindAttribLocation(p,0,e.index0AttributeName):e.morphTargets===!0&&s.bindAttribLocation(p,0,"position"),s.linkProgram(p),i.debug.checkShaderErrors){const A=s.getProgramInfoLog(p).trim(),R=s.getShaderInfoLog(S).trim(),j=s.getShaderInfoLog(C).trim();let Q=!0,U=!0;if(s.getProgramParameter(p,35714)===!1){Q=!1;const O=Ku(s,S,"vertex"),J=Ku(s,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(p,35715)+`

Program Info Log: `+A+`
`+O+`
`+J)}else A!==""?console.warn("THREE.WebGLProgram: Program Info Log:",A):(R===""||j==="")&&(U=!1);U&&(this.diagnostics={runnable:Q,programLog:A,vertexShader:{log:R,prefix:m},fragmentShader:{log:j,prefix:_}})}s.deleteShader(S),s.deleteShader(C);let D;this.getUniforms=function(){return D===void 0&&(D=new ko(s,p)),D};let y;return this.getAttributes=function(){return y===void 0&&(y=S1(s,p)),y},this.destroy=function(){n.releaseStatesOfProgram(this),s.deleteProgram(p),this.program=void 0},this.name=e.shaderName,this.id=_1++,this.cacheKey=t,this.usedTimes=1,this.program=p,this.vertexShader=S,this.fragmentShader=C,this}let F1=0;class O1{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,s=this._getShaderStage(e),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(t);return o.has(s)===!1&&(o.add(s),s.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new N1(t),e.set(t,n)),n}}class N1{constructor(t){this.id=F1++,this.code=t,this.usedTimes=0}}function k1(i,t,e,n,s,r,o){const a=new Cc,l=new O1,c=[],h=s.isWebGL2,u=s.logarithmicDepthBuffer,f=s.vertexTextures;let d=s.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function p(y,A,R,j,Q){const U=j.fog,O=Q.geometry,J=y.isMeshStandardMaterial?j.environment:null,Z=(y.isMeshStandardMaterial?e:t).get(y.envMap||J),it=Z&&Z.mapping===ha?Z.image.height:null,Y=g[y.type];y.precision!==null&&(d=s.getMaxPrecision(y.precision),d!==y.precision&&console.warn("THREE.WebGLProgram.getParameters:",y.precision,"not supported, using",d,"instead."));const ft=O.morphAttributes.position||O.morphAttributes.normal||O.morphAttributes.color,dt=ft!==void 0?ft.length:0;let vt=0;O.morphAttributes.position!==void 0&&(vt=1),O.morphAttributes.normal!==void 0&&(vt=2),O.morphAttributes.color!==void 0&&(vt=3);let W,ot,yt,N;if(Y){const wt=zn[Y];W=wt.vertexShader,ot=wt.fragmentShader}else W=y.vertexShader,ot=y.fragmentShader,l.update(y),yt=l.getVertexShaderID(y),N=l.getFragmentShaderID(y);const F=i.getRenderTarget(),tt=y.alphaTest>0,ct=y.clearcoat>0,gt=y.iridescence>0;return{isWebGL2:h,shaderID:Y,shaderName:y.type,vertexShader:W,fragmentShader:ot,defines:y.defines,customVertexShaderID:yt,customFragmentShaderID:N,isRawShaderMaterial:y.isRawShaderMaterial===!0,glslVersion:y.glslVersion,precision:d,instancing:Q.isInstancedMesh===!0,instancingColor:Q.isInstancedMesh===!0&&Q.instanceColor!==null,supportsVertexTextures:f,outputEncoding:F===null?i.outputEncoding:F.isXRRenderTarget===!0?F.texture.encoding:$i,map:!!y.map,matcap:!!y.matcap,envMap:!!Z,envMapMode:Z&&Z.mapping,envMapCubeUVHeight:it,lightMap:!!y.lightMap,aoMap:!!y.aoMap,emissiveMap:!!y.emissiveMap,bumpMap:!!y.bumpMap,normalMap:!!y.normalMap,objectSpaceNormalMap:y.normalMapType===Zx,tangentSpaceNormalMap:y.normalMapType===ua,decodeVideoTexture:!!y.map&&y.map.isVideoTexture===!0&&y.map.encoding===se,clearcoat:ct,clearcoatMap:ct&&!!y.clearcoatMap,clearcoatRoughnessMap:ct&&!!y.clearcoatRoughnessMap,clearcoatNormalMap:ct&&!!y.clearcoatNormalMap,iridescence:gt,iridescenceMap:gt&&!!y.iridescenceMap,iridescenceThicknessMap:gt&&!!y.iridescenceThicknessMap,displacementMap:!!y.displacementMap,roughnessMap:!!y.roughnessMap,metalnessMap:!!y.metalnessMap,specularMap:!!y.specularMap,specularIntensityMap:!!y.specularIntensityMap,specularColorMap:!!y.specularColorMap,opaque:y.transparent===!1&&y.blending===Ds,alphaMap:!!y.alphaMap,alphaTest:tt,gradientMap:!!y.gradientMap,sheen:y.sheen>0,sheenColorMap:!!y.sheenColorMap,sheenRoughnessMap:!!y.sheenRoughnessMap,transmission:y.transmission>0,transmissionMap:!!y.transmissionMap,thicknessMap:!!y.thicknessMap,combine:y.combine,vertexTangents:!!y.normalMap&&!!O.attributes.tangent,vertexColors:y.vertexColors,vertexAlphas:y.vertexColors===!0&&!!O.attributes.color&&O.attributes.color.itemSize===4,vertexUvs:!!y.map||!!y.bumpMap||!!y.normalMap||!!y.specularMap||!!y.alphaMap||!!y.emissiveMap||!!y.roughnessMap||!!y.metalnessMap||!!y.clearcoatMap||!!y.clearcoatRoughnessMap||!!y.clearcoatNormalMap||!!y.iridescenceMap||!!y.iridescenceThicknessMap||!!y.displacementMap||!!y.transmissionMap||!!y.thicknessMap||!!y.specularIntensityMap||!!y.specularColorMap||!!y.sheenColorMap||!!y.sheenRoughnessMap,uvsVertexOnly:!(y.map||y.bumpMap||y.normalMap||y.specularMap||y.alphaMap||y.emissiveMap||y.roughnessMap||y.metalnessMap||y.clearcoatNormalMap||y.iridescenceMap||y.iridescenceThicknessMap||y.transmission>0||y.transmissionMap||y.thicknessMap||y.specularIntensityMap||y.specularColorMap||y.sheen>0||y.sheenColorMap||y.sheenRoughnessMap)&&!!y.displacementMap,fog:!!U,useFog:y.fog===!0,fogExp2:U&&U.isFogExp2,flatShading:!!y.flatShading,sizeAttenuation:y.sizeAttenuation,logarithmicDepthBuffer:u,skinning:Q.isSkinnedMesh===!0,morphTargets:O.morphAttributes.position!==void 0,morphNormals:O.morphAttributes.normal!==void 0,morphColors:O.morphAttributes.color!==void 0,morphTargetsCount:dt,morphTextureStride:vt,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numSpotLightMaps:A.spotLightMap.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numSpotLightShadowsWithMaps:A.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:y.dithering,shadowMapEnabled:i.shadowMap.enabled&&R.length>0,shadowMapType:i.shadowMap.type,toneMapping:y.toneMapped?i.toneMapping:Qn,physicallyCorrectLights:i.physicallyCorrectLights,premultipliedAlpha:y.premultipliedAlpha,doubleSided:y.side===Xe,flipSided:y.side===qe,useDepthPacking:!!y.depthPacking,depthPacking:y.depthPacking||0,index0AttributeName:y.index0AttributeName,extensionDerivatives:y.extensions&&y.extensions.derivatives,extensionFragDepth:y.extensions&&y.extensions.fragDepth,extensionDrawBuffers:y.extensions&&y.extensions.drawBuffers,extensionShaderTextureLOD:y.extensions&&y.extensions.shaderTextureLOD,rendererExtensionFragDepth:h||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||n.has("EXT_shader_texture_lod"),customProgramCacheKey:y.customProgramCacheKey()}}function m(y){const A=[];if(y.shaderID?A.push(y.shaderID):(A.push(y.customVertexShaderID),A.push(y.customFragmentShaderID)),y.defines!==void 0)for(const R in y.defines)A.push(R),A.push(y.defines[R]);return y.isRawShaderMaterial===!1&&(_(A,y),w(A,y),A.push(i.outputEncoding)),A.push(y.customProgramCacheKey),A.join()}function _(y,A){y.push(A.precision),y.push(A.outputEncoding),y.push(A.envMapMode),y.push(A.envMapCubeUVHeight),y.push(A.combine),y.push(A.vertexUvs),y.push(A.fogExp2),y.push(A.sizeAttenuation),y.push(A.morphTargetsCount),y.push(A.morphAttributeCount),y.push(A.numDirLights),y.push(A.numPointLights),y.push(A.numSpotLights),y.push(A.numSpotLightMaps),y.push(A.numHemiLights),y.push(A.numRectAreaLights),y.push(A.numDirLightShadows),y.push(A.numPointLightShadows),y.push(A.numSpotLightShadows),y.push(A.numSpotLightShadowsWithMaps),y.push(A.shadowMapType),y.push(A.toneMapping),y.push(A.numClippingPlanes),y.push(A.numClipIntersection),y.push(A.depthPacking)}function w(y,A){a.disableAll(),A.isWebGL2&&a.enable(0),A.supportsVertexTextures&&a.enable(1),A.instancing&&a.enable(2),A.instancingColor&&a.enable(3),A.map&&a.enable(4),A.matcap&&a.enable(5),A.envMap&&a.enable(6),A.lightMap&&a.enable(7),A.aoMap&&a.enable(8),A.emissiveMap&&a.enable(9),A.bumpMap&&a.enable(10),A.normalMap&&a.enable(11),A.objectSpaceNormalMap&&a.enable(12),A.tangentSpaceNormalMap&&a.enable(13),A.clearcoat&&a.enable(14),A.clearcoatMap&&a.enable(15),A.clearcoatRoughnessMap&&a.enable(16),A.clearcoatNormalMap&&a.enable(17),A.iridescence&&a.enable(18),A.iridescenceMap&&a.enable(19),A.iridescenceThicknessMap&&a.enable(20),A.displacementMap&&a.enable(21),A.specularMap&&a.enable(22),A.roughnessMap&&a.enable(23),A.metalnessMap&&a.enable(24),A.gradientMap&&a.enable(25),A.alphaMap&&a.enable(26),A.alphaTest&&a.enable(27),A.vertexColors&&a.enable(28),A.vertexAlphas&&a.enable(29),A.vertexUvs&&a.enable(30),A.vertexTangents&&a.enable(31),A.uvsVertexOnly&&a.enable(32),y.push(a.mask),a.disableAll(),A.fog&&a.enable(0),A.useFog&&a.enable(1),A.flatShading&&a.enable(2),A.logarithmicDepthBuffer&&a.enable(3),A.skinning&&a.enable(4),A.morphTargets&&a.enable(5),A.morphNormals&&a.enable(6),A.morphColors&&a.enable(7),A.premultipliedAlpha&&a.enable(8),A.shadowMapEnabled&&a.enable(9),A.physicallyCorrectLights&&a.enable(10),A.doubleSided&&a.enable(11),A.flipSided&&a.enable(12),A.useDepthPacking&&a.enable(13),A.dithering&&a.enable(14),A.specularIntensityMap&&a.enable(15),A.specularColorMap&&a.enable(16),A.transmission&&a.enable(17),A.transmissionMap&&a.enable(18),A.thicknessMap&&a.enable(19),A.sheen&&a.enable(20),A.sheenColorMap&&a.enable(21),A.sheenRoughnessMap&&a.enable(22),A.decodeVideoTexture&&a.enable(23),A.opaque&&a.enable(24),y.push(a.mask)}function x(y){const A=g[y.type];let R;if(A){const j=zn[A];R=Sy.clone(j.uniforms)}else R=y.uniforms;return R}function b(y,A){let R;for(let j=0,Q=c.length;j<Q;j++){const U=c[j];if(U.cacheKey===A){R=U,++R.usedTimes;break}}return R===void 0&&(R=new z1(i,A,y,r),c.push(R)),R}function S(y){if(--y.usedTimes===0){const A=c.indexOf(y);c[A]=c[c.length-1],c.pop(),y.destroy()}}function C(y){l.remove(y)}function D(){l.dispose()}return{getParameters:p,getProgramCacheKey:m,getUniforms:x,acquireProgram:b,releaseProgram:S,releaseShaderCache:C,programs:c,dispose:D}}function U1(){let i=new WeakMap;function t(r){let o=i.get(r);return o===void 0&&(o={},i.set(r,o)),o}function e(r){i.delete(r)}function n(r,o,a){i.get(r)[o]=a}function s(){i=new WeakMap}return{get:t,remove:e,update:n,dispose:s}}function B1(i,t){return i.groupOrder!==t.groupOrder?i.groupOrder-t.groupOrder:i.renderOrder!==t.renderOrder?i.renderOrder-t.renderOrder:i.material.id!==t.material.id?i.material.id-t.material.id:i.z!==t.z?i.z-t.z:i.id-t.id}function nf(i,t){return i.groupOrder!==t.groupOrder?i.groupOrder-t.groupOrder:i.renderOrder!==t.renderOrder?i.renderOrder-t.renderOrder:i.z!==t.z?t.z-i.z:i.id-t.id}function sf(){const i=[];let t=0;const e=[],n=[],s=[];function r(){t=0,e.length=0,n.length=0,s.length=0}function o(u,f,d,g,p,m){let _=i[t];return _===void 0?(_={id:u.id,object:u,geometry:f,material:d,groupOrder:g,renderOrder:u.renderOrder,z:p,group:m},i[t]=_):(_.id=u.id,_.object=u,_.geometry=f,_.material=d,_.groupOrder=g,_.renderOrder=u.renderOrder,_.z=p,_.group=m),t++,_}function a(u,f,d,g,p,m){const _=o(u,f,d,g,p,m);d.transmission>0?n.push(_):d.transparent===!0?s.push(_):e.push(_)}function l(u,f,d,g,p,m){const _=o(u,f,d,g,p,m);d.transmission>0?n.unshift(_):d.transparent===!0?s.unshift(_):e.unshift(_)}function c(u,f){e.length>1&&e.sort(u||B1),n.length>1&&n.sort(f||nf),s.length>1&&s.sort(f||nf)}function h(){for(let u=t,f=i.length;u<f;u++){const d=i[u];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:e,transmissive:n,transparent:s,init:r,push:a,unshift:l,finish:h,sort:c}}function H1(){let i=new WeakMap;function t(n,s){const r=i.get(n);let o;return r===void 0?(o=new sf,i.set(n,[o])):s>=r.length?(o=new sf,r.push(o)):o=r[s],o}function e(){i=new WeakMap}return{get:t,dispose:e}}function V1(){const i={};return{get:function(t){if(i[t.id]!==void 0)return i[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new I,color:new Ct};break;case"SpotLight":e={position:new I,direction:new I,color:new Ct,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new I,color:new Ct,distance:0,decay:0};break;case"HemisphereLight":e={direction:new I,skyColor:new Ct,groundColor:new Ct};break;case"RectAreaLight":e={color:new Ct,position:new I,halfWidth:new I,halfHeight:new I};break}return i[t.id]=e,e}}}function G1(){const i={};return{get:function(t){if(i[t.id]!==void 0)return i[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xt};break;case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xt};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xt,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[t.id]=e,e}}}let W1=0;function X1(i,t){return(t.castShadow?2:0)-(i.castShadow?2:0)+(t.map?1:0)-(i.map?1:0)}function j1(i,t){const e=new V1,n=G1(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let h=0;h<9;h++)s.probe.push(new I);const r=new I,o=new Dt,a=new Dt;function l(h,u){let f=0,d=0,g=0;for(let j=0;j<9;j++)s.probe[j].set(0,0,0);let p=0,m=0,_=0,w=0,x=0,b=0,S=0,C=0,D=0,y=0;h.sort(X1);const A=u!==!0?Math.PI:1;for(let j=0,Q=h.length;j<Q;j++){const U=h[j],O=U.color,J=U.intensity,Z=U.distance,it=U.shadow&&U.shadow.map?U.shadow.map.texture:null;if(U.isAmbientLight)f+=O.r*J*A,d+=O.g*J*A,g+=O.b*J*A;else if(U.isLightProbe)for(let Y=0;Y<9;Y++)s.probe[Y].addScaledVector(U.sh.coefficients[Y],J);else if(U.isDirectionalLight){const Y=e.get(U);if(Y.color.copy(U.color).multiplyScalar(U.intensity*A),U.castShadow){const ft=U.shadow,dt=n.get(U);dt.shadowBias=ft.bias,dt.shadowNormalBias=ft.normalBias,dt.shadowRadius=ft.radius,dt.shadowMapSize=ft.mapSize,s.directionalShadow[p]=dt,s.directionalShadowMap[p]=it,s.directionalShadowMatrix[p]=U.shadow.matrix,b++}s.directional[p]=Y,p++}else if(U.isSpotLight){const Y=e.get(U);Y.position.setFromMatrixPosition(U.matrixWorld),Y.color.copy(O).multiplyScalar(J*A),Y.distance=Z,Y.coneCos=Math.cos(U.angle),Y.penumbraCos=Math.cos(U.angle*(1-U.penumbra)),Y.decay=U.decay,s.spot[_]=Y;const ft=U.shadow;if(U.map&&(s.spotLightMap[D]=U.map,D++,ft.updateMatrices(U),U.castShadow&&y++),s.spotLightMatrix[_]=ft.matrix,U.castShadow){const dt=n.get(U);dt.shadowBias=ft.bias,dt.shadowNormalBias=ft.normalBias,dt.shadowRadius=ft.radius,dt.shadowMapSize=ft.mapSize,s.spotShadow[_]=dt,s.spotShadowMap[_]=it,C++}_++}else if(U.isRectAreaLight){const Y=e.get(U);Y.color.copy(O).multiplyScalar(J),Y.halfWidth.set(U.width*.5,0,0),Y.halfHeight.set(0,U.height*.5,0),s.rectArea[w]=Y,w++}else if(U.isPointLight){const Y=e.get(U);if(Y.color.copy(U.color).multiplyScalar(U.intensity*A),Y.distance=U.distance,Y.decay=U.decay,U.castShadow){const ft=U.shadow,dt=n.get(U);dt.shadowBias=ft.bias,dt.shadowNormalBias=ft.normalBias,dt.shadowRadius=ft.radius,dt.shadowMapSize=ft.mapSize,dt.shadowCameraNear=ft.camera.near,dt.shadowCameraFar=ft.camera.far,s.pointShadow[m]=dt,s.pointShadowMap[m]=it,s.pointShadowMatrix[m]=U.shadow.matrix,S++}s.point[m]=Y,m++}else if(U.isHemisphereLight){const Y=e.get(U);Y.skyColor.copy(U.color).multiplyScalar(J*A),Y.groundColor.copy(U.groundColor).multiplyScalar(J*A),s.hemi[x]=Y,x++}}w>0&&(t.isWebGL2||i.has("OES_texture_float_linear")===!0?(s.rectAreaLTC1=St.LTC_FLOAT_1,s.rectAreaLTC2=St.LTC_FLOAT_2):i.has("OES_texture_half_float_linear")===!0?(s.rectAreaLTC1=St.LTC_HALF_1,s.rectAreaLTC2=St.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),s.ambient[0]=f,s.ambient[1]=d,s.ambient[2]=g;const R=s.hash;(R.directionalLength!==p||R.pointLength!==m||R.spotLength!==_||R.rectAreaLength!==w||R.hemiLength!==x||R.numDirectionalShadows!==b||R.numPointShadows!==S||R.numSpotShadows!==C||R.numSpotMaps!==D)&&(s.directional.length=p,s.spot.length=_,s.rectArea.length=w,s.point.length=m,s.hemi.length=x,s.directionalShadow.length=b,s.directionalShadowMap.length=b,s.pointShadow.length=S,s.pointShadowMap.length=S,s.spotShadow.length=C,s.spotShadowMap.length=C,s.directionalShadowMatrix.length=b,s.pointShadowMatrix.length=S,s.spotLightMatrix.length=C+D-y,s.spotLightMap.length=D,s.numSpotLightShadowsWithMaps=y,R.directionalLength=p,R.pointLength=m,R.spotLength=_,R.rectAreaLength=w,R.hemiLength=x,R.numDirectionalShadows=b,R.numPointShadows=S,R.numSpotShadows=C,R.numSpotMaps=D,s.version=W1++)}function c(h,u){let f=0,d=0,g=0,p=0,m=0;const _=u.matrixWorldInverse;for(let w=0,x=h.length;w<x;w++){const b=h[w];if(b.isDirectionalLight){const S=s.directional[f];S.direction.setFromMatrixPosition(b.matrixWorld),r.setFromMatrixPosition(b.target.matrixWorld),S.direction.sub(r),S.direction.transformDirection(_),f++}else if(b.isSpotLight){const S=s.spot[g];S.position.setFromMatrixPosition(b.matrixWorld),S.position.applyMatrix4(_),S.direction.setFromMatrixPosition(b.matrixWorld),r.setFromMatrixPosition(b.target.matrixWorld),S.direction.sub(r),S.direction.transformDirection(_),g++}else if(b.isRectAreaLight){const S=s.rectArea[p];S.position.setFromMatrixPosition(b.matrixWorld),S.position.applyMatrix4(_),a.identity(),o.copy(b.matrixWorld),o.premultiply(_),a.extractRotation(o),S.halfWidth.set(b.width*.5,0,0),S.halfHeight.set(0,b.height*.5,0),S.halfWidth.applyMatrix4(a),S.halfHeight.applyMatrix4(a),p++}else if(b.isPointLight){const S=s.point[d];S.position.setFromMatrixPosition(b.matrixWorld),S.position.applyMatrix4(_),d++}else if(b.isHemisphereLight){const S=s.hemi[m];S.direction.setFromMatrixPosition(b.matrixWorld),S.direction.transformDirection(_),m++}}}return{setup:l,setupView:c,state:s}}function rf(i,t){const e=new j1(i,t),n=[],s=[];function r(){n.length=0,s.length=0}function o(u){n.push(u)}function a(u){s.push(u)}function l(u){e.setup(n,u)}function c(u){e.setupView(n,u)}return{init:r,state:{lightsArray:n,shadowsArray:s,lights:e},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function q1(i,t){let e=new WeakMap;function n(r,o=0){const a=e.get(r);let l;return a===void 0?(l=new rf(i,t),e.set(r,[l])):o>=a.length?(l=new rf(i,t),a.push(l)):l=a[o],l}function s(){e=new WeakMap}return{get:n,dispose:s}}class Y1 extends ri{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Yx,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class $1 extends ri{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new I,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const Z1=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,K1=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function J1(i,t,e){let n=new Rc;const s=new xt,r=new xt,o=new ne,a=new Y1({depthPacking:$x}),l=new $1,c={},h=e.maxTextureSize,u={[xn]:qe,[qe]:xn,[Xe]:Xe},f=new we({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new xt},radius:{value:4}},vertexShader:Z1,fragmentShader:K1}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const g=new pe;g.setAttribute("position",new je(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const p=new Ot(g,f),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=dp,this.render=function(b,S,C){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||b.length===0)return;const D=i.getRenderTarget(),y=i.getActiveCubeFace(),A=i.getActiveMipmapLevel(),R=i.state;R.setBlending(Mi),R.buffers.color.setClear(1,1,1,1),R.buffers.depth.setTest(!0),R.setScissorTest(!1);for(let j=0,Q=b.length;j<Q;j++){const U=b[j],O=U.shadow;if(O===void 0){console.warn("THREE.WebGLShadowMap:",U,"has no shadow.");continue}if(O.autoUpdate===!1&&O.needsUpdate===!1)continue;s.copy(O.mapSize);const J=O.getFrameExtents();if(s.multiply(J),r.copy(O.mapSize),(s.x>h||s.y>h)&&(s.x>h&&(r.x=Math.floor(h/J.x),s.x=r.x*J.x,O.mapSize.x=r.x),s.y>h&&(r.y=Math.floor(h/J.y),s.y=r.y*J.y,O.mapSize.y=r.y)),O.map===null){const it=this.type!==dr?{minFilter:Le,magFilter:Le}:{};O.map=new Zi(s.x,s.y,it),O.map.texture.name=U.name+".shadowMap",O.camera.updateProjectionMatrix()}i.setRenderTarget(O.map),i.clear();const Z=O.getViewportCount();for(let it=0;it<Z;it++){const Y=O.getViewport(it);o.set(r.x*Y.x,r.y*Y.y,r.x*Y.z,r.y*Y.w),R.viewport(o),O.updateMatrices(U,it),n=O.getFrustum(),x(S,C,O.camera,U,this.type)}O.isPointLightShadow!==!0&&this.type===dr&&_(O,C),O.needsUpdate=!1}m.needsUpdate=!1,i.setRenderTarget(D,y,A)};function _(b,S){const C=t.update(p);f.defines.VSM_SAMPLES!==b.blurSamples&&(f.defines.VSM_SAMPLES=b.blurSamples,d.defines.VSM_SAMPLES=b.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),b.mapPass===null&&(b.mapPass=new Zi(s.x,s.y)),f.uniforms.shadow_pass.value=b.map.texture,f.uniforms.resolution.value=b.mapSize,f.uniforms.radius.value=b.radius,i.setRenderTarget(b.mapPass),i.clear(),i.renderBufferDirect(S,null,C,f,p,null),d.uniforms.shadow_pass.value=b.mapPass.texture,d.uniforms.resolution.value=b.mapSize,d.uniforms.radius.value=b.radius,i.setRenderTarget(b.map),i.clear(),i.renderBufferDirect(S,null,C,d,p,null)}function w(b,S,C,D,y,A){let R=null;const j=C.isPointLight===!0?b.customDistanceMaterial:b.customDepthMaterial;if(j!==void 0)R=j;else if(R=C.isPointLight===!0?l:a,i.localClippingEnabled&&S.clipShadows===!0&&Array.isArray(S.clippingPlanes)&&S.clippingPlanes.length!==0||S.displacementMap&&S.displacementScale!==0||S.alphaMap&&S.alphaTest>0||S.map&&S.alphaTest>0){const Q=R.uuid,U=S.uuid;let O=c[Q];O===void 0&&(O={},c[Q]=O);let J=O[U];J===void 0&&(J=R.clone(),O[U]=J),R=J}return R.visible=S.visible,R.wireframe=S.wireframe,A===dr?R.side=S.shadowSide!==null?S.shadowSide:S.side:R.side=S.shadowSide!==null?S.shadowSide:u[S.side],R.alphaMap=S.alphaMap,R.alphaTest=S.alphaTest,R.map=S.map,R.clipShadows=S.clipShadows,R.clippingPlanes=S.clippingPlanes,R.clipIntersection=S.clipIntersection,R.displacementMap=S.displacementMap,R.displacementScale=S.displacementScale,R.displacementBias=S.displacementBias,R.wireframeLinewidth=S.wireframeLinewidth,R.linewidth=S.linewidth,C.isPointLight===!0&&R.isMeshDistanceMaterial===!0&&(R.referencePosition.setFromMatrixPosition(C.matrixWorld),R.nearDistance=D,R.farDistance=y),R}function x(b,S,C,D,y){if(b.visible===!1)return;if(b.layers.test(S.layers)&&(b.isMesh||b.isLine||b.isPoints)&&(b.castShadow||b.receiveShadow&&y===dr)&&(!b.frustumCulled||n.intersectsObject(b))){b.modelViewMatrix.multiplyMatrices(C.matrixWorldInverse,b.matrixWorld);const j=t.update(b),Q=b.material;if(Array.isArray(Q)){const U=j.groups;for(let O=0,J=U.length;O<J;O++){const Z=U[O],it=Q[Z.materialIndex];if(it&&it.visible){const Y=w(b,it,D,C.near,C.far,y);i.renderBufferDirect(C,null,j,Y,b,Z)}}}else if(Q.visible){const U=w(b,Q,D,C.near,C.far,y);i.renderBufferDirect(C,null,j,U,b,null)}}const R=b.children;for(let j=0,Q=R.length;j<Q;j++)x(R[j],S,C,D,y)}}function Q1(i,t,e){const n=e.isWebGL2;function s(){let H=!1;const at=new ne;let _t=null;const Pt=new ne(0,0,0,0);return{setMask:function(Rt){_t!==Rt&&!H&&(i.colorMask(Rt,Rt,Rt,Rt),_t=Rt)},setLocked:function(Rt){H=Rt},setClear:function(Rt,ie,Ee,De,Ei){Ei===!0&&(Rt*=De,ie*=De,Ee*=De),at.set(Rt,ie,Ee,De),Pt.equals(at)===!1&&(i.clearColor(Rt,ie,Ee,De),Pt.copy(at))},reset:function(){H=!1,_t=null,Pt.set(-1,0,0,0)}}}function r(){let H=!1,at=null,_t=null,Pt=null;return{setTest:function(Rt){Rt?tt(2929):ct(2929)},setMask:function(Rt){at!==Rt&&!H&&(i.depthMask(Rt),at=Rt)},setFunc:function(Rt){if(_t!==Rt){switch(Rt){case _x:i.depthFunc(512);break;case xx:i.depthFunc(519);break;case yx:i.depthFunc(513);break;case Wl:i.depthFunc(515);break;case vx:i.depthFunc(514);break;case wx:i.depthFunc(518);break;case Mx:i.depthFunc(516);break;case bx:i.depthFunc(517);break;default:i.depthFunc(515)}_t=Rt}},setLocked:function(Rt){H=Rt},setClear:function(Rt){Pt!==Rt&&(i.clearDepth(Rt),Pt=Rt)},reset:function(){H=!1,at=null,_t=null,Pt=null}}}function o(){let H=!1,at=null,_t=null,Pt=null,Rt=null,ie=null,Ee=null,De=null,Ei=null;return{setTest:function(ce){H||(ce?tt(2960):ct(2960))},setMask:function(ce){at!==ce&&!H&&(i.stencilMask(ce),at=ce)},setFunc:function(ce,Hn,an){(_t!==ce||Pt!==Hn||Rt!==an)&&(i.stencilFunc(ce,Hn,an),_t=ce,Pt=Hn,Rt=an)},setOp:function(ce,Hn,an){(ie!==ce||Ee!==Hn||De!==an)&&(i.stencilOp(ce,Hn,an),ie=ce,Ee=Hn,De=an)},setLocked:function(ce){H=ce},setClear:function(ce){Ei!==ce&&(i.clearStencil(ce),Ei=ce)},reset:function(){H=!1,at=null,_t=null,Pt=null,Rt=null,ie=null,Ee=null,De=null,Ei=null}}}const a=new s,l=new r,c=new o,h=new WeakMap,u=new WeakMap;let f={},d={},g=new WeakMap,p=[],m=null,_=!1,w=null,x=null,b=null,S=null,C=null,D=null,y=null,A=!1,R=null,j=null,Q=null,U=null,O=null;const J=i.getParameter(35661);let Z=!1,it=0;const Y=i.getParameter(7938);Y.indexOf("WebGL")!==-1?(it=parseFloat(/^WebGL (\d)/.exec(Y)[1]),Z=it>=1):Y.indexOf("OpenGL ES")!==-1&&(it=parseFloat(/^OpenGL ES (\d)/.exec(Y)[1]),Z=it>=2);let ft=null,dt={};const vt=i.getParameter(3088),W=i.getParameter(2978),ot=new ne().fromArray(vt),yt=new ne().fromArray(W);function N(H,at,_t){const Pt=new Uint8Array(4),Rt=i.createTexture();i.bindTexture(H,Rt),i.texParameteri(H,10241,9728),i.texParameteri(H,10240,9728);for(let ie=0;ie<_t;ie++)i.texImage2D(at+ie,0,6408,1,1,0,6408,5121,Pt);return Rt}const F={};F[3553]=N(3553,3553,1),F[34067]=N(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),tt(2929),l.setFunc(Wl),B(!1),et(Xh),tt(2884),z(Mi);function tt(H){f[H]!==!0&&(i.enable(H),f[H]=!0)}function ct(H){f[H]!==!1&&(i.disable(H),f[H]=!1)}function gt(H,at){return d[H]!==at?(i.bindFramebuffer(H,at),d[H]=at,n&&(H===36009&&(d[36160]=at),H===36160&&(d[36009]=at)),!0):!1}function pt(H,at){let _t=p,Pt=!1;if(H)if(_t=g.get(at),_t===void 0&&(_t=[],g.set(at,_t)),H.isWebGLMultipleRenderTargets){const Rt=H.texture;if(_t.length!==Rt.length||_t[0]!==36064){for(let ie=0,Ee=Rt.length;ie<Ee;ie++)_t[ie]=36064+ie;_t.length=Rt.length,Pt=!0}}else _t[0]!==36064&&(_t[0]=36064,Pt=!0);else _t[0]!==1029&&(_t[0]=1029,Pt=!0);Pt&&(e.isWebGL2?i.drawBuffers(_t):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(_t))}function wt(H){return m!==H?(i.useProgram(H),m=H,!0):!1}const v={[bs]:32774,[ox]:32778,[ax]:32779};if(n)v[$h]=32775,v[Zh]=32776;else{const H=t.get("EXT_blend_minmax");H!==null&&(v[$h]=H.MIN_EXT,v[Zh]=H.MAX_EXT)}const T={[lx]:0,[cx]:1,[hx]:768,[mp]:770,[gx]:776,[px]:774,[fx]:772,[ux]:769,[gp]:771,[mx]:775,[dx]:773};function z(H,at,_t,Pt,Rt,ie,Ee,De){if(H===Mi){_===!0&&(ct(3042),_=!1);return}if(_===!1&&(tt(3042),_=!0),H!==rx){if(H!==w||De!==A){if((x!==bs||C!==bs)&&(i.blendEquation(32774),x=bs,C=bs),De)switch(H){case Ds:i.blendFuncSeparate(1,771,1,771);break;case jh:i.blendFunc(1,1);break;case qh:i.blendFuncSeparate(0,769,0,1);break;case Yh:i.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",H);break}else switch(H){case Ds:i.blendFuncSeparate(770,771,1,771);break;case jh:i.blendFunc(770,1);break;case qh:i.blendFuncSeparate(0,769,0,1);break;case Yh:i.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",H);break}b=null,S=null,D=null,y=null,w=H,A=De}return}Rt=Rt||at,ie=ie||_t,Ee=Ee||Pt,(at!==x||Rt!==C)&&(i.blendEquationSeparate(v[at],v[Rt]),x=at,C=Rt),(_t!==b||Pt!==S||ie!==D||Ee!==y)&&(i.blendFuncSeparate(T[_t],T[Pt],T[ie],T[Ee]),b=_t,S=Pt,D=ie,y=Ee),w=H,A=!1}function V(H,at){H.side===Xe?ct(2884):tt(2884);let _t=H.side===qe;at&&(_t=!_t),B(_t),H.blending===Ds&&H.transparent===!1?z(Mi):z(H.blending,H.blendEquation,H.blendSrc,H.blendDst,H.blendEquationAlpha,H.blendSrcAlpha,H.blendDstAlpha,H.premultipliedAlpha),l.setFunc(H.depthFunc),l.setTest(H.depthTest),l.setMask(H.depthWrite),a.setMask(H.colorWrite);const Pt=H.stencilWrite;c.setTest(Pt),Pt&&(c.setMask(H.stencilWriteMask),c.setFunc(H.stencilFunc,H.stencilRef,H.stencilFuncMask),c.setOp(H.stencilFail,H.stencilZFail,H.stencilZPass)),$(H.polygonOffset,H.polygonOffsetFactor,H.polygonOffsetUnits),H.alphaToCoverage===!0?tt(32926):ct(32926)}function B(H){R!==H&&(H?i.frontFace(2304):i.frontFace(2305),R=H)}function et(H){H!==ix?(tt(2884),H!==j&&(H===Xh?i.cullFace(1029):H===sx?i.cullFace(1028):i.cullFace(1032))):ct(2884),j=H}function st(H){H!==Q&&(Z&&i.lineWidth(H),Q=H)}function $(H,at,_t){H?(tt(32823),(U!==at||O!==_t)&&(i.polygonOffset(at,_t),U=at,O=_t)):ct(32823)}function ut(H){H?tt(3089):ct(3089)}function nt(H){H===void 0&&(H=33984+J-1),ft!==H&&(i.activeTexture(H),ft=H)}function E(H,at,_t){_t===void 0&&(ft===null?_t=33984+J-1:_t=ft);let Pt=dt[_t];Pt===void 0&&(Pt={type:void 0,texture:void 0},dt[_t]=Pt),(Pt.type!==H||Pt.texture!==at)&&(ft!==_t&&(i.activeTexture(_t),ft=_t),i.bindTexture(H,at||F[H]),Pt.type=H,Pt.texture=at)}function M(){const H=dt[ft];H!==void 0&&H.type!==void 0&&(i.bindTexture(H.type,null),H.type=void 0,H.texture=void 0)}function k(){try{i.compressedTexImage2D.apply(i,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function K(){try{i.compressedTexImage3D.apply(i,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function rt(){try{i.texSubImage2D.apply(i,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function mt(){try{i.texSubImage3D.apply(i,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Mt(){try{i.compressedTexSubImage2D.apply(i,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function L(){try{i.compressedTexSubImage3D.apply(i,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function G(){try{i.texStorage2D.apply(i,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function bt(){try{i.texStorage3D.apply(i,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function At(){try{i.texImage2D.apply(i,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Tt(){try{i.texImage3D.apply(i,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Lt(H){ot.equals(H)===!1&&(i.scissor(H.x,H.y,H.z,H.w),ot.copy(H))}function Et(H){yt.equals(H)===!1&&(i.viewport(H.x,H.y,H.z,H.w),yt.copy(H))}function Ft(H,at){let _t=u.get(at);_t===void 0&&(_t=new WeakMap,u.set(at,_t));let Pt=_t.get(H);Pt===void 0&&(Pt=i.getUniformBlockIndex(at,H.name),_t.set(H,Pt))}function Vt(H,at){const Pt=u.get(at).get(H);h.get(at)!==Pt&&(i.uniformBlockBinding(at,Pt,H.__bindingPointIndex),h.set(at,Pt))}function oe(){i.disable(3042),i.disable(2884),i.disable(2929),i.disable(32823),i.disable(3089),i.disable(2960),i.disable(32926),i.blendEquation(32774),i.blendFunc(1,0),i.blendFuncSeparate(1,0,1,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(513),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(519,0,4294967295),i.stencilOp(7680,7680,7680),i.clearStencil(0),i.cullFace(1029),i.frontFace(2305),i.polygonOffset(0,0),i.activeTexture(33984),i.bindFramebuffer(36160,null),n===!0&&(i.bindFramebuffer(36009,null),i.bindFramebuffer(36008,null)),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),f={},ft=null,dt={},d={},g=new WeakMap,p=[],m=null,_=!1,w=null,x=null,b=null,S=null,C=null,D=null,y=null,A=!1,R=null,j=null,Q=null,U=null,O=null,ot.set(0,0,i.canvas.width,i.canvas.height),yt.set(0,0,i.canvas.width,i.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:tt,disable:ct,bindFramebuffer:gt,drawBuffers:pt,useProgram:wt,setBlending:z,setMaterial:V,setFlipSided:B,setCullFace:et,setLineWidth:st,setPolygonOffset:$,setScissorTest:ut,activeTexture:nt,bindTexture:E,unbindTexture:M,compressedTexImage2D:k,compressedTexImage3D:K,texImage2D:At,texImage3D:Tt,updateUBOMapping:Ft,uniformBlockBinding:Vt,texStorage2D:G,texStorage3D:bt,texSubImage2D:rt,texSubImage3D:mt,compressedTexSubImage2D:Mt,compressedTexSubImage3D:L,scissor:Lt,viewport:Et,reset:oe}}function tb(i,t,e,n,s,r,o){const a=s.isWebGL2,l=s.maxTextures,c=s.maxCubemapSize,h=s.maxTextureSize,u=s.maxSamples,f=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,d=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap;let p;const m=new WeakMap;let _=!1;try{_=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function w(E,M){return _?new OffscreenCanvas(E,M):kr("canvas")}function x(E,M,k,K){let rt=1;if((E.width>K||E.height>K)&&(rt=K/Math.max(E.width,E.height)),rt<1||M===!0)if(typeof HTMLImageElement<"u"&&E instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&E instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&E instanceof ImageBitmap){const mt=M?Yo:Math.floor,Mt=mt(rt*E.width),L=mt(rt*E.height);p===void 0&&(p=w(Mt,L));const G=k?w(Mt,L):p;return G.width=Mt,G.height=L,G.getContext("2d").drawImage(E,0,0,Mt,L),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+E.width+"x"+E.height+") to ("+Mt+"x"+L+")."),G}else return"data"in E&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+E.width+"x"+E.height+")."),E;return E}function b(E){return Yl(E.width)&&Yl(E.height)}function S(E){return a?!1:E.wrapS!==rn||E.wrapT!==rn||E.minFilter!==Le&&E.minFilter!==hn}function C(E,M){return E.generateMipmaps&&M&&E.minFilter!==Le&&E.minFilter!==hn}function D(E){i.generateMipmap(E)}function y(E,M,k,K,rt=!1){if(a===!1)return M;if(E!==null){if(i[E]!==void 0)return i[E];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+E+"'")}let mt=M;return M===6403&&(k===5126&&(mt=33326),k===5131&&(mt=33325),k===5121&&(mt=33321)),M===33319&&(k===5126&&(mt=33328),k===5131&&(mt=33327),k===5121&&(mt=33323)),M===6408&&(k===5126&&(mt=34836),k===5131&&(mt=34842),k===5121&&(mt=K===se&&rt===!1?35907:32856),k===32819&&(mt=32854),k===32820&&(mt=32855)),(mt===33325||mt===33326||mt===33327||mt===33328||mt===34842||mt===34836)&&t.get("EXT_color_buffer_float"),mt}function A(E,M,k){return C(E,k)===!0||E.isFramebufferTexture&&E.minFilter!==Le&&E.minFilter!==hn?Math.log2(Math.max(M.width,M.height))+1:E.mipmaps!==void 0&&E.mipmaps.length>0?E.mipmaps.length:E.isCompressedTexture&&Array.isArray(E.image)?M.mipmaps.length:1}function R(E){return E===Le||E===Kh||E===Da?9728:9729}function j(E){const M=E.target;M.removeEventListener("dispose",j),U(M),M.isVideoTexture&&g.delete(M)}function Q(E){const M=E.target;M.removeEventListener("dispose",Q),J(M)}function U(E){const M=n.get(E);if(M.__webglInit===void 0)return;const k=E.source,K=m.get(k);if(K){const rt=K[M.__cacheKey];rt.usedTimes--,rt.usedTimes===0&&O(E),Object.keys(K).length===0&&m.delete(k)}n.remove(E)}function O(E){const M=n.get(E);i.deleteTexture(M.__webglTexture);const k=E.source,K=m.get(k);delete K[M.__cacheKey],o.memory.textures--}function J(E){const M=E.texture,k=n.get(E),K=n.get(M);if(K.__webglTexture!==void 0&&(i.deleteTexture(K.__webglTexture),o.memory.textures--),E.depthTexture&&E.depthTexture.dispose(),E.isWebGLCubeRenderTarget)for(let rt=0;rt<6;rt++)i.deleteFramebuffer(k.__webglFramebuffer[rt]),k.__webglDepthbuffer&&i.deleteRenderbuffer(k.__webglDepthbuffer[rt]);else{if(i.deleteFramebuffer(k.__webglFramebuffer),k.__webglDepthbuffer&&i.deleteRenderbuffer(k.__webglDepthbuffer),k.__webglMultisampledFramebuffer&&i.deleteFramebuffer(k.__webglMultisampledFramebuffer),k.__webglColorRenderbuffer)for(let rt=0;rt<k.__webglColorRenderbuffer.length;rt++)k.__webglColorRenderbuffer[rt]&&i.deleteRenderbuffer(k.__webglColorRenderbuffer[rt]);k.__webglDepthRenderbuffer&&i.deleteRenderbuffer(k.__webglDepthRenderbuffer)}if(E.isWebGLMultipleRenderTargets)for(let rt=0,mt=M.length;rt<mt;rt++){const Mt=n.get(M[rt]);Mt.__webglTexture&&(i.deleteTexture(Mt.__webglTexture),o.memory.textures--),n.remove(M[rt])}n.remove(M),n.remove(E)}let Z=0;function it(){Z=0}function Y(){const E=Z;return E>=l&&console.warn("THREE.WebGLTextures: Trying to use "+E+" texture units while this GPU supports only "+l),Z+=1,E}function ft(E){const M=[];return M.push(E.wrapS),M.push(E.wrapT),M.push(E.wrapR||0),M.push(E.magFilter),M.push(E.minFilter),M.push(E.anisotropy),M.push(E.internalFormat),M.push(E.format),M.push(E.type),M.push(E.generateMipmaps),M.push(E.premultiplyAlpha),M.push(E.flipY),M.push(E.unpackAlignment),M.push(E.encoding),M.join()}function dt(E,M){const k=n.get(E);if(E.isVideoTexture&&ut(E),E.isRenderTargetTexture===!1&&E.version>0&&k.__version!==E.version){const K=E.image;if(K===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(K.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ct(k,E,M);return}}e.bindTexture(3553,k.__webglTexture,33984+M)}function vt(E,M){const k=n.get(E);if(E.version>0&&k.__version!==E.version){ct(k,E,M);return}e.bindTexture(35866,k.__webglTexture,33984+M)}function W(E,M){const k=n.get(E);if(E.version>0&&k.__version!==E.version){ct(k,E,M);return}e.bindTexture(32879,k.__webglTexture,33984+M)}function ot(E,M){const k=n.get(E);if(E.version>0&&k.__version!==E.version){gt(k,E,M);return}e.bindTexture(34067,k.__webglTexture,33984+M)}const yt={[Dr]:10497,[rn]:33071,[jl]:33648},N={[Le]:9728,[Kh]:9984,[Da]:9986,[hn]:9729,[Rx]:9985,[zr]:9987};function F(E,M,k){if(k?(i.texParameteri(E,10242,yt[M.wrapS]),i.texParameteri(E,10243,yt[M.wrapT]),(E===32879||E===35866)&&i.texParameteri(E,32882,yt[M.wrapR]),i.texParameteri(E,10240,N[M.magFilter]),i.texParameteri(E,10241,N[M.minFilter])):(i.texParameteri(E,10242,33071),i.texParameteri(E,10243,33071),(E===32879||E===35866)&&i.texParameteri(E,32882,33071),(M.wrapS!==rn||M.wrapT!==rn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),i.texParameteri(E,10240,R(M.magFilter)),i.texParameteri(E,10241,R(M.minFilter)),M.minFilter!==Le&&M.minFilter!==hn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),t.has("EXT_texture_filter_anisotropic")===!0){const K=t.get("EXT_texture_filter_anisotropic");if(M.magFilter===Le||M.minFilter!==Da&&M.minFilter!==zr||M.type===xi&&t.has("OES_texture_float_linear")===!1||a===!1&&M.type===Fr&&t.has("OES_texture_half_float_linear")===!1)return;(M.anisotropy>1||n.get(M).__currentAnisotropy)&&(i.texParameterf(E,K.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(M.anisotropy,s.getMaxAnisotropy())),n.get(M).__currentAnisotropy=M.anisotropy)}}function tt(E,M){let k=!1;E.__webglInit===void 0&&(E.__webglInit=!0,M.addEventListener("dispose",j));const K=M.source;let rt=m.get(K);rt===void 0&&(rt={},m.set(K,rt));const mt=ft(M);if(mt!==E.__cacheKey){rt[mt]===void 0&&(rt[mt]={texture:i.createTexture(),usedTimes:0},o.memory.textures++,k=!0),rt[mt].usedTimes++;const Mt=rt[E.__cacheKey];Mt!==void 0&&(rt[E.__cacheKey].usedTimes--,Mt.usedTimes===0&&O(M)),E.__cacheKey=mt,E.__webglTexture=rt[mt].texture}return k}function ct(E,M,k){let K=3553;(M.isDataArrayTexture||M.isCompressedArrayTexture)&&(K=35866),M.isData3DTexture&&(K=32879);const rt=tt(E,M),mt=M.source;e.bindTexture(K,E.__webglTexture,33984+k);const Mt=n.get(mt);if(mt.version!==Mt.__version||rt===!0){e.activeTexture(33984+k),i.pixelStorei(37440,M.flipY),i.pixelStorei(37441,M.premultiplyAlpha),i.pixelStorei(3317,M.unpackAlignment),i.pixelStorei(37443,0);const L=S(M)&&b(M.image)===!1;let G=x(M.image,L,!1,h);G=nt(M,G);const bt=b(G)||a,At=r.convert(M.format,M.encoding);let Tt=r.convert(M.type),Lt=y(M.internalFormat,At,Tt,M.encoding,M.isVideoTexture);F(K,M,bt);let Et;const Ft=M.mipmaps,Vt=a&&M.isVideoTexture!==!0,oe=Mt.__version===void 0||rt===!0,H=A(M,G,bt);if(M.isDepthTexture)Lt=6402,a?M.type===xi?Lt=36012:M.type===Gi?Lt=33190:M.type===zs?Lt=35056:Lt=33189:M.type===xi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),M.format===ji&&Lt===6402&&M.type!==xp&&M.type!==Gi&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),M.type=Gi,Tt=r.convert(M.type)),M.format===Vs&&Lt===6402&&(Lt=34041,M.type!==zs&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),M.type=zs,Tt=r.convert(M.type))),oe&&(Vt?e.texStorage2D(3553,1,Lt,G.width,G.height):e.texImage2D(3553,0,Lt,G.width,G.height,0,At,Tt,null));else if(M.isDataTexture)if(Ft.length>0&&bt){Vt&&oe&&e.texStorage2D(3553,H,Lt,Ft[0].width,Ft[0].height);for(let at=0,_t=Ft.length;at<_t;at++)Et=Ft[at],Vt?e.texSubImage2D(3553,at,0,0,Et.width,Et.height,At,Tt,Et.data):e.texImage2D(3553,at,Lt,Et.width,Et.height,0,At,Tt,Et.data);M.generateMipmaps=!1}else Vt?(oe&&e.texStorage2D(3553,H,Lt,G.width,G.height),e.texSubImage2D(3553,0,0,0,G.width,G.height,At,Tt,G.data)):e.texImage2D(3553,0,Lt,G.width,G.height,0,At,Tt,G.data);else if(M.isCompressedTexture)if(M.isCompressedArrayTexture){Vt&&oe&&e.texStorage3D(35866,H,Lt,Ft[0].width,Ft[0].height,G.depth);for(let at=0,_t=Ft.length;at<_t;at++)Et=Ft[at],M.format!==fn?At!==null?Vt?e.compressedTexSubImage3D(35866,at,0,0,0,Et.width,Et.height,G.depth,At,Et.data,0,0):e.compressedTexImage3D(35866,at,Lt,Et.width,Et.height,G.depth,0,Et.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Vt?e.texSubImage3D(35866,at,0,0,0,Et.width,Et.height,G.depth,At,Tt,Et.data):e.texImage3D(35866,at,Lt,Et.width,Et.height,G.depth,0,At,Tt,Et.data)}else{Vt&&oe&&e.texStorage2D(3553,H,Lt,Ft[0].width,Ft[0].height);for(let at=0,_t=Ft.length;at<_t;at++)Et=Ft[at],M.format!==fn?At!==null?Vt?e.compressedTexSubImage2D(3553,at,0,0,Et.width,Et.height,At,Et.data):e.compressedTexImage2D(3553,at,Lt,Et.width,Et.height,0,Et.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Vt?e.texSubImage2D(3553,at,0,0,Et.width,Et.height,At,Tt,Et.data):e.texImage2D(3553,at,Lt,Et.width,Et.height,0,At,Tt,Et.data)}else if(M.isDataArrayTexture)Vt?(oe&&e.texStorage3D(35866,H,Lt,G.width,G.height,G.depth),e.texSubImage3D(35866,0,0,0,0,G.width,G.height,G.depth,At,Tt,G.data)):e.texImage3D(35866,0,Lt,G.width,G.height,G.depth,0,At,Tt,G.data);else if(M.isData3DTexture)Vt?(oe&&e.texStorage3D(32879,H,Lt,G.width,G.height,G.depth),e.texSubImage3D(32879,0,0,0,0,G.width,G.height,G.depth,At,Tt,G.data)):e.texImage3D(32879,0,Lt,G.width,G.height,G.depth,0,At,Tt,G.data);else if(M.isFramebufferTexture){if(oe)if(Vt)e.texStorage2D(3553,H,Lt,G.width,G.height);else{let at=G.width,_t=G.height;for(let Pt=0;Pt<H;Pt++)e.texImage2D(3553,Pt,Lt,at,_t,0,At,Tt,null),at>>=1,_t>>=1}}else if(Ft.length>0&&bt){Vt&&oe&&e.texStorage2D(3553,H,Lt,Ft[0].width,Ft[0].height);for(let at=0,_t=Ft.length;at<_t;at++)Et=Ft[at],Vt?e.texSubImage2D(3553,at,0,0,At,Tt,Et):e.texImage2D(3553,at,Lt,At,Tt,Et);M.generateMipmaps=!1}else Vt?(oe&&e.texStorage2D(3553,H,Lt,G.width,G.height),e.texSubImage2D(3553,0,0,0,At,Tt,G)):e.texImage2D(3553,0,Lt,At,Tt,G);C(M,bt)&&D(K),Mt.__version=mt.version,M.onUpdate&&M.onUpdate(M)}E.__version=M.version}function gt(E,M,k){if(M.image.length!==6)return;const K=tt(E,M),rt=M.source;e.bindTexture(34067,E.__webglTexture,33984+k);const mt=n.get(rt);if(rt.version!==mt.__version||K===!0){e.activeTexture(33984+k),i.pixelStorei(37440,M.flipY),i.pixelStorei(37441,M.premultiplyAlpha),i.pixelStorei(3317,M.unpackAlignment),i.pixelStorei(37443,0);const Mt=M.isCompressedTexture||M.image[0].isCompressedTexture,L=M.image[0]&&M.image[0].isDataTexture,G=[];for(let at=0;at<6;at++)!Mt&&!L?G[at]=x(M.image[at],!1,!0,c):G[at]=L?M.image[at].image:M.image[at],G[at]=nt(M,G[at]);const bt=G[0],At=b(bt)||a,Tt=r.convert(M.format,M.encoding),Lt=r.convert(M.type),Et=y(M.internalFormat,Tt,Lt,M.encoding),Ft=a&&M.isVideoTexture!==!0,Vt=mt.__version===void 0||K===!0;let oe=A(M,bt,At);F(34067,M,At);let H;if(Mt){Ft&&Vt&&e.texStorage2D(34067,oe,Et,bt.width,bt.height);for(let at=0;at<6;at++){H=G[at].mipmaps;for(let _t=0;_t<H.length;_t++){const Pt=H[_t];M.format!==fn?Tt!==null?Ft?e.compressedTexSubImage2D(34069+at,_t,0,0,Pt.width,Pt.height,Tt,Pt.data):e.compressedTexImage2D(34069+at,_t,Et,Pt.width,Pt.height,0,Pt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Ft?e.texSubImage2D(34069+at,_t,0,0,Pt.width,Pt.height,Tt,Lt,Pt.data):e.texImage2D(34069+at,_t,Et,Pt.width,Pt.height,0,Tt,Lt,Pt.data)}}}else{H=M.mipmaps,Ft&&Vt&&(H.length>0&&oe++,e.texStorage2D(34067,oe,Et,G[0].width,G[0].height));for(let at=0;at<6;at++)if(L){Ft?e.texSubImage2D(34069+at,0,0,0,G[at].width,G[at].height,Tt,Lt,G[at].data):e.texImage2D(34069+at,0,Et,G[at].width,G[at].height,0,Tt,Lt,G[at].data);for(let _t=0;_t<H.length;_t++){const Rt=H[_t].image[at].image;Ft?e.texSubImage2D(34069+at,_t+1,0,0,Rt.width,Rt.height,Tt,Lt,Rt.data):e.texImage2D(34069+at,_t+1,Et,Rt.width,Rt.height,0,Tt,Lt,Rt.data)}}else{Ft?e.texSubImage2D(34069+at,0,0,0,Tt,Lt,G[at]):e.texImage2D(34069+at,0,Et,Tt,Lt,G[at]);for(let _t=0;_t<H.length;_t++){const Pt=H[_t];Ft?e.texSubImage2D(34069+at,_t+1,0,0,Tt,Lt,Pt.image[at]):e.texImage2D(34069+at,_t+1,Et,Tt,Lt,Pt.image[at])}}}C(M,At)&&D(34067),mt.__version=rt.version,M.onUpdate&&M.onUpdate(M)}E.__version=M.version}function pt(E,M,k,K,rt){const mt=r.convert(k.format,k.encoding),Mt=r.convert(k.type),L=y(k.internalFormat,mt,Mt,k.encoding);n.get(M).__hasExternalTextures||(rt===32879||rt===35866?e.texImage3D(rt,0,L,M.width,M.height,M.depth,0,mt,Mt,null):e.texImage2D(rt,0,L,M.width,M.height,0,mt,Mt,null)),e.bindFramebuffer(36160,E),$(M)?f.framebufferTexture2DMultisampleEXT(36160,K,rt,n.get(k).__webglTexture,0,st(M)):(rt===3553||rt>=34069&&rt<=34074)&&i.framebufferTexture2D(36160,K,rt,n.get(k).__webglTexture,0),e.bindFramebuffer(36160,null)}function wt(E,M,k){if(i.bindRenderbuffer(36161,E),M.depthBuffer&&!M.stencilBuffer){let K=33189;if(k||$(M)){const rt=M.depthTexture;rt&&rt.isDepthTexture&&(rt.type===xi?K=36012:rt.type===Gi&&(K=33190));const mt=st(M);$(M)?f.renderbufferStorageMultisampleEXT(36161,mt,K,M.width,M.height):i.renderbufferStorageMultisample(36161,mt,K,M.width,M.height)}else i.renderbufferStorage(36161,K,M.width,M.height);i.framebufferRenderbuffer(36160,36096,36161,E)}else if(M.depthBuffer&&M.stencilBuffer){const K=st(M);k&&$(M)===!1?i.renderbufferStorageMultisample(36161,K,35056,M.width,M.height):$(M)?f.renderbufferStorageMultisampleEXT(36161,K,35056,M.width,M.height):i.renderbufferStorage(36161,34041,M.width,M.height),i.framebufferRenderbuffer(36160,33306,36161,E)}else{const K=M.isWebGLMultipleRenderTargets===!0?M.texture:[M.texture];for(let rt=0;rt<K.length;rt++){const mt=K[rt],Mt=r.convert(mt.format,mt.encoding),L=r.convert(mt.type),G=y(mt.internalFormat,Mt,L,mt.encoding),bt=st(M);k&&$(M)===!1?i.renderbufferStorageMultisample(36161,bt,G,M.width,M.height):$(M)?f.renderbufferStorageMultisampleEXT(36161,bt,G,M.width,M.height):i.renderbufferStorage(36161,G,M.width,M.height)}}i.bindRenderbuffer(36161,null)}function v(E,M){if(M&&M.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,E),!(M.depthTexture&&M.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(M.depthTexture).__webglTexture||M.depthTexture.image.width!==M.width||M.depthTexture.image.height!==M.height)&&(M.depthTexture.image.width=M.width,M.depthTexture.image.height=M.height,M.depthTexture.needsUpdate=!0),dt(M.depthTexture,0);const K=n.get(M.depthTexture).__webglTexture,rt=st(M);if(M.depthTexture.format===ji)$(M)?f.framebufferTexture2DMultisampleEXT(36160,36096,3553,K,0,rt):i.framebufferTexture2D(36160,36096,3553,K,0);else if(M.depthTexture.format===Vs)$(M)?f.framebufferTexture2DMultisampleEXT(36160,33306,3553,K,0,rt):i.framebufferTexture2D(36160,33306,3553,K,0);else throw new Error("Unknown depthTexture format")}function T(E){const M=n.get(E),k=E.isWebGLCubeRenderTarget===!0;if(E.depthTexture&&!M.__autoAllocateDepthBuffer){if(k)throw new Error("target.depthTexture not supported in Cube render targets");v(M.__webglFramebuffer,E)}else if(k){M.__webglDepthbuffer=[];for(let K=0;K<6;K++)e.bindFramebuffer(36160,M.__webglFramebuffer[K]),M.__webglDepthbuffer[K]=i.createRenderbuffer(),wt(M.__webglDepthbuffer[K],E,!1)}else e.bindFramebuffer(36160,M.__webglFramebuffer),M.__webglDepthbuffer=i.createRenderbuffer(),wt(M.__webglDepthbuffer,E,!1);e.bindFramebuffer(36160,null)}function z(E,M,k){const K=n.get(E);M!==void 0&&pt(K.__webglFramebuffer,E,E.texture,36064,3553),k!==void 0&&T(E)}function V(E){const M=E.texture,k=n.get(E),K=n.get(M);E.addEventListener("dispose",Q),E.isWebGLMultipleRenderTargets!==!0&&(K.__webglTexture===void 0&&(K.__webglTexture=i.createTexture()),K.__version=M.version,o.memory.textures++);const rt=E.isWebGLCubeRenderTarget===!0,mt=E.isWebGLMultipleRenderTargets===!0,Mt=b(E)||a;if(rt){k.__webglFramebuffer=[];for(let L=0;L<6;L++)k.__webglFramebuffer[L]=i.createFramebuffer()}else{if(k.__webglFramebuffer=i.createFramebuffer(),mt)if(s.drawBuffers){const L=E.texture;for(let G=0,bt=L.length;G<bt;G++){const At=n.get(L[G]);At.__webglTexture===void 0&&(At.__webglTexture=i.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&E.samples>0&&$(E)===!1){const L=mt?M:[M];k.__webglMultisampledFramebuffer=i.createFramebuffer(),k.__webglColorRenderbuffer=[],e.bindFramebuffer(36160,k.__webglMultisampledFramebuffer);for(let G=0;G<L.length;G++){const bt=L[G];k.__webglColorRenderbuffer[G]=i.createRenderbuffer(),i.bindRenderbuffer(36161,k.__webglColorRenderbuffer[G]);const At=r.convert(bt.format,bt.encoding),Tt=r.convert(bt.type),Lt=y(bt.internalFormat,At,Tt,bt.encoding,E.isXRRenderTarget===!0),Et=st(E);i.renderbufferStorageMultisample(36161,Et,Lt,E.width,E.height),i.framebufferRenderbuffer(36160,36064+G,36161,k.__webglColorRenderbuffer[G])}i.bindRenderbuffer(36161,null),E.depthBuffer&&(k.__webglDepthRenderbuffer=i.createRenderbuffer(),wt(k.__webglDepthRenderbuffer,E,!0)),e.bindFramebuffer(36160,null)}}if(rt){e.bindTexture(34067,K.__webglTexture),F(34067,M,Mt);for(let L=0;L<6;L++)pt(k.__webglFramebuffer[L],E,M,36064,34069+L);C(M,Mt)&&D(34067),e.unbindTexture()}else if(mt){const L=E.texture;for(let G=0,bt=L.length;G<bt;G++){const At=L[G],Tt=n.get(At);e.bindTexture(3553,Tt.__webglTexture),F(3553,At,Mt),pt(k.__webglFramebuffer,E,At,36064+G,3553),C(At,Mt)&&D(3553)}e.unbindTexture()}else{let L=3553;(E.isWebGL3DRenderTarget||E.isWebGLArrayRenderTarget)&&(a?L=E.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),e.bindTexture(L,K.__webglTexture),F(L,M,Mt),pt(k.__webglFramebuffer,E,M,36064,L),C(M,Mt)&&D(L),e.unbindTexture()}E.depthBuffer&&T(E)}function B(E){const M=b(E)||a,k=E.isWebGLMultipleRenderTargets===!0?E.texture:[E.texture];for(let K=0,rt=k.length;K<rt;K++){const mt=k[K];if(C(mt,M)){const Mt=E.isWebGLCubeRenderTarget?34067:3553,L=n.get(mt).__webglTexture;e.bindTexture(Mt,L),D(Mt),e.unbindTexture()}}}function et(E){if(a&&E.samples>0&&$(E)===!1){const M=E.isWebGLMultipleRenderTargets?E.texture:[E.texture],k=E.width,K=E.height;let rt=16384;const mt=[],Mt=E.stencilBuffer?33306:36096,L=n.get(E),G=E.isWebGLMultipleRenderTargets===!0;if(G)for(let bt=0;bt<M.length;bt++)e.bindFramebuffer(36160,L.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(36160,36064+bt,36161,null),e.bindFramebuffer(36160,L.__webglFramebuffer),i.framebufferTexture2D(36009,36064+bt,3553,null,0);e.bindFramebuffer(36008,L.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,L.__webglFramebuffer);for(let bt=0;bt<M.length;bt++){mt.push(36064+bt),E.depthBuffer&&mt.push(Mt);const At=L.__ignoreDepthValues!==void 0?L.__ignoreDepthValues:!1;if(At===!1&&(E.depthBuffer&&(rt|=256),E.stencilBuffer&&(rt|=1024)),G&&i.framebufferRenderbuffer(36008,36064,36161,L.__webglColorRenderbuffer[bt]),At===!0&&(i.invalidateFramebuffer(36008,[Mt]),i.invalidateFramebuffer(36009,[Mt])),G){const Tt=n.get(M[bt]).__webglTexture;i.framebufferTexture2D(36009,36064,3553,Tt,0)}i.blitFramebuffer(0,0,k,K,0,0,k,K,rt,9728),d&&i.invalidateFramebuffer(36008,mt)}if(e.bindFramebuffer(36008,null),e.bindFramebuffer(36009,null),G)for(let bt=0;bt<M.length;bt++){e.bindFramebuffer(36160,L.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(36160,36064+bt,36161,L.__webglColorRenderbuffer[bt]);const At=n.get(M[bt]).__webglTexture;e.bindFramebuffer(36160,L.__webglFramebuffer),i.framebufferTexture2D(36009,36064+bt,3553,At,0)}e.bindFramebuffer(36009,L.__webglMultisampledFramebuffer)}}function st(E){return Math.min(u,E.samples)}function $(E){const M=n.get(E);return a&&E.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&M.__useRenderToTexture!==!1}function ut(E){const M=o.render.frame;g.get(E)!==M&&(g.set(E,M),E.update())}function nt(E,M){const k=E.encoding,K=E.format,rt=E.type;return E.isCompressedTexture===!0||E.isVideoTexture===!0||E.format===ql||k!==$i&&(k===se?a===!1?t.has("EXT_sRGB")===!0&&K===fn?(E.format=ql,E.minFilter=hn,E.generateMipmaps=!1):M=Mp.sRGBToLinear(M):(K!==fn||rt!==Yi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",k)),M}this.allocateTextureUnit=Y,this.resetTextureUnits=it,this.setTexture2D=dt,this.setTexture2DArray=vt,this.setTexture3D=W,this.setTextureCube=ot,this.rebindTextures=z,this.setupRenderTarget=V,this.updateRenderTargetMipmap=B,this.updateMultisampleRenderTarget=et,this.setupDepthRenderbuffer=T,this.setupFrameBufferTexture=pt,this.useMultisampledRTT=$}function eb(i,t,e){const n=e.isWebGL2;function s(r,o=null){let a;if(r===Yi)return 5121;if(r===Fx)return 32819;if(r===Ox)return 32820;if(r===Ix)return 5120;if(r===Dx)return 5122;if(r===xp)return 5123;if(r===zx)return 5124;if(r===Gi)return 5125;if(r===xi)return 5126;if(r===Fr)return n?5131:(a=t.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(r===Nx)return 6406;if(r===fn)return 6408;if(r===kx)return 6409;if(r===Ux)return 6410;if(r===ji)return 6402;if(r===Vs)return 34041;if(r===ql)return a=t.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(r===Bx)return 6403;if(r===Hx)return 36244;if(r===Vx)return 33319;if(r===Gx)return 33320;if(r===Wx)return 36249;if(r===za||r===Fa||r===Oa||r===Na)if(o===se)if(a=t.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(r===za)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===Fa)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===Oa)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===Na)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=t.get("WEBGL_compressed_texture_s3tc"),a!==null){if(r===za)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Fa)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===Oa)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===Na)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===Jh||r===Qh||r===tu||r===eu)if(a=t.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(r===Jh)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===Qh)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===tu)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===eu)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===Xx)return a=t.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===nu||r===iu)if(a=t.get("WEBGL_compressed_texture_etc"),a!==null){if(r===nu)return o===se?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(r===iu)return o===se?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===su||r===ru||r===ou||r===au||r===lu||r===cu||r===hu||r===uu||r===fu||r===du||r===pu||r===mu||r===gu||r===_u)if(a=t.get("WEBGL_compressed_texture_astc"),a!==null){if(r===su)return o===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===ru)return o===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===ou)return o===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===au)return o===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===lu)return o===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===cu)return o===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===hu)return o===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===uu)return o===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===fu)return o===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===du)return o===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===pu)return o===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===mu)return o===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===gu)return o===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===_u)return o===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===ka)if(a=t.get("EXT_texture_compression_bptc"),a!==null){if(r===ka)return o===se?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(r===jx||r===xu||r===yu||r===vu)if(a=t.get("EXT_texture_compression_rgtc"),a!==null){if(r===ka)return a.COMPRESSED_RED_RGTC1_EXT;if(r===xu)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===yu)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===vu)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===zs?n?34042:(a=t.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):i[r]!==void 0?i[r]:null}return{convert:s}}class nb extends Ge{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}let qt=class extends ae{constructor(){super(),this.isGroup=!0,this.type="Group"}};const ib={type:"move"};class hl{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new qt,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new qt,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new I,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new I),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new qt,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new I,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new I),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let s=null,r=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(c&&t.hand){o=!0;for(const p of t.hand.values()){const m=e.getJointPose(p,n),_=this._getHandJoint(c,p);m!==null&&(_.matrix.fromArray(m.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.jointRadius=m.radius),_.visible=m!==null}const h=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],f=h.position.distanceTo(u.position),d=.02,g=.005;c.inputState.pinching&&f>d+g?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&f<=d-g&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else l!==null&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(s=e.getPose(t.targetRaySpace,n),s===null&&r!==null&&(s=r),s!==null&&(a.matrix.fromArray(s.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),s.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(s.linearVelocity)):a.hasLinearVelocity=!1,s.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(s.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(ib)))}return a!==null&&(a.visible=s!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new qt;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class sb extends Re{constructor(t,e,n,s,r,o,a,l,c,h){if(h=h!==void 0?h:ji,h!==ji&&h!==Vs)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&h===ji&&(n=Gi),n===void 0&&h===Vs&&(n=zs),super(null,s,r,o,a,l,h,n,c),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=a!==void 0?a:Le,this.minFilter=l!==void 0?l:Le,this.flipY=!1,this.generateMipmaps=!1}}class rb extends Ji{constructor(t,e){super();const n=this;let s=null,r=1,o=null,a="local-floor",l=1,c=null,h=null,u=null,f=null,d=null,g=null;const p=e.getContextAttributes();let m=null,_=null;const w=[],x=[],b=new Set,S=new Map,C=new Ge;C.layers.enable(1),C.viewport=new ne;const D=new Ge;D.layers.enable(2),D.viewport=new ne;const y=[C,D],A=new nb;A.layers.enable(1),A.layers.enable(2);let R=null,j=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(W){let ot=w[W];return ot===void 0&&(ot=new hl,w[W]=ot),ot.getTargetRaySpace()},this.getControllerGrip=function(W){let ot=w[W];return ot===void 0&&(ot=new hl,w[W]=ot),ot.getGripSpace()},this.getHand=function(W){let ot=w[W];return ot===void 0&&(ot=new hl,w[W]=ot),ot.getHandSpace()};function Q(W){const ot=x.indexOf(W.inputSource);if(ot===-1)return;const yt=w[ot];yt!==void 0&&yt.dispatchEvent({type:W.type,data:W.inputSource})}function U(){s.removeEventListener("select",Q),s.removeEventListener("selectstart",Q),s.removeEventListener("selectend",Q),s.removeEventListener("squeeze",Q),s.removeEventListener("squeezestart",Q),s.removeEventListener("squeezeend",Q),s.removeEventListener("end",U),s.removeEventListener("inputsourceschange",O);for(let W=0;W<w.length;W++){const ot=x[W];ot!==null&&(x[W]=null,w[W].disconnect(ot))}R=null,j=null,t.setRenderTarget(m),d=null,f=null,u=null,s=null,_=null,vt.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(W){r=W,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(W){a=W,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(W){c=W},this.getBaseLayer=function(){return f!==null?f:d},this.getBinding=function(){return u},this.getFrame=function(){return g},this.getSession=function(){return s},this.setSession=async function(W){if(s=W,s!==null){if(m=t.getRenderTarget(),s.addEventListener("select",Q),s.addEventListener("selectstart",Q),s.addEventListener("selectend",Q),s.addEventListener("squeeze",Q),s.addEventListener("squeezestart",Q),s.addEventListener("squeezeend",Q),s.addEventListener("end",U),s.addEventListener("inputsourceschange",O),p.xrCompatible!==!0&&await e.makeXRCompatible(),s.renderState.layers===void 0||t.capabilities.isWebGL2===!1){const ot={antialias:s.renderState.layers===void 0?p.antialias:!0,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(s,e,ot),s.updateRenderState({baseLayer:d}),_=new Zi(d.framebufferWidth,d.framebufferHeight,{format:fn,type:Yi,encoding:t.outputEncoding,stencilBuffer:p.stencil})}else{let ot=null,yt=null,N=null;p.depth&&(N=p.stencil?35056:33190,ot=p.stencil?Vs:ji,yt=p.stencil?zs:Gi);const F={colorFormat:32856,depthFormat:N,scaleFactor:r};u=new XRWebGLBinding(s,e),f=u.createProjectionLayer(F),s.updateRenderState({layers:[f]}),_=new Zi(f.textureWidth,f.textureHeight,{format:fn,type:Yi,depthTexture:new sb(f.textureWidth,f.textureHeight,yt,void 0,void 0,void 0,void 0,void 0,void 0,ot),stencilBuffer:p.stencil,encoding:t.outputEncoding,samples:p.antialias?4:0});const tt=t.properties.get(_);tt.__ignoreDepthValues=f.ignoreDepthValues}_.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await s.requestReferenceSpace(a),vt.setContext(s),vt.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function O(W){for(let ot=0;ot<W.removed.length;ot++){const yt=W.removed[ot],N=x.indexOf(yt);N>=0&&(x[N]=null,w[N].disconnect(yt))}for(let ot=0;ot<W.added.length;ot++){const yt=W.added[ot];let N=x.indexOf(yt);if(N===-1){for(let tt=0;tt<w.length;tt++)if(tt>=x.length){x.push(yt),N=tt;break}else if(x[tt]===null){x[tt]=yt,N=tt;break}if(N===-1)break}const F=w[N];F&&F.connect(yt)}}const J=new I,Z=new I;function it(W,ot,yt){J.setFromMatrixPosition(ot.matrixWorld),Z.setFromMatrixPosition(yt.matrixWorld);const N=J.distanceTo(Z),F=ot.projectionMatrix.elements,tt=yt.projectionMatrix.elements,ct=F[14]/(F[10]-1),gt=F[14]/(F[10]+1),pt=(F[9]+1)/F[5],wt=(F[9]-1)/F[5],v=(F[8]-1)/F[0],T=(tt[8]+1)/tt[0],z=ct*v,V=ct*T,B=N/(-v+T),et=B*-v;ot.matrixWorld.decompose(W.position,W.quaternion,W.scale),W.translateX(et),W.translateZ(B),W.matrixWorld.compose(W.position,W.quaternion,W.scale),W.matrixWorldInverse.copy(W.matrixWorld).invert();const st=ct+B,$=gt+B,ut=z-et,nt=V+(N-et),E=pt*gt/$*st,M=wt*gt/$*st;W.projectionMatrix.makePerspective(ut,nt,E,M,st,$)}function Y(W,ot){ot===null?W.matrixWorld.copy(W.matrix):W.matrixWorld.multiplyMatrices(ot.matrixWorld,W.matrix),W.matrixWorldInverse.copy(W.matrixWorld).invert()}this.updateCamera=function(W){if(s===null)return;A.near=D.near=C.near=W.near,A.far=D.far=C.far=W.far,(R!==A.near||j!==A.far)&&(s.updateRenderState({depthNear:A.near,depthFar:A.far}),R=A.near,j=A.far);const ot=W.parent,yt=A.cameras;Y(A,ot);for(let F=0;F<yt.length;F++)Y(yt[F],ot);A.matrixWorld.decompose(A.position,A.quaternion,A.scale),W.matrix.copy(A.matrix),W.matrix.decompose(W.position,W.quaternion,W.scale);const N=W.children;for(let F=0,tt=N.length;F<tt;F++)N[F].updateMatrixWorld(!0);yt.length===2?it(A,C,D):A.projectionMatrix.copy(C.projectionMatrix)},this.getCamera=function(){return A},this.getFoveation=function(){if(!(f===null&&d===null))return l},this.setFoveation=function(W){l=W,f!==null&&(f.fixedFoveation=W),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=W)},this.getPlanes=function(){return b};let ft=null;function dt(W,ot){if(h=ot.getViewerPose(c||o),g=ot,h!==null){const yt=h.views;d!==null&&(t.setRenderTargetFramebuffer(_,d.framebuffer),t.setRenderTarget(_));let N=!1;yt.length!==A.cameras.length&&(A.cameras.length=0,N=!0);for(let F=0;F<yt.length;F++){const tt=yt[F];let ct=null;if(d!==null)ct=d.getViewport(tt);else{const pt=u.getViewSubImage(f,tt);ct=pt.viewport,F===0&&(t.setRenderTargetTextures(_,pt.colorTexture,f.ignoreDepthValues?void 0:pt.depthStencilTexture),t.setRenderTarget(_))}let gt=y[F];gt===void 0&&(gt=new Ge,gt.layers.enable(F),gt.viewport=new ne,y[F]=gt),gt.matrix.fromArray(tt.transform.matrix),gt.projectionMatrix.fromArray(tt.projectionMatrix),gt.viewport.set(ct.x,ct.y,ct.width,ct.height),F===0&&A.matrix.copy(gt.matrix),N===!0&&A.cameras.push(gt)}}for(let yt=0;yt<w.length;yt++){const N=x[yt],F=w[yt];N!==null&&F!==void 0&&F.update(N,ot,c||o)}if(ft&&ft(W,ot),ot.detectedPlanes){n.dispatchEvent({type:"planesdetected",data:ot.detectedPlanes});let yt=null;for(const N of b)ot.detectedPlanes.has(N)||(yt===null&&(yt=[]),yt.push(N));if(yt!==null)for(const N of yt)b.delete(N),S.delete(N),n.dispatchEvent({type:"planeremoved",data:N});for(const N of ot.detectedPlanes)if(!b.has(N))b.add(N),S.set(N,ot.lastChangedTime),n.dispatchEvent({type:"planeadded",data:N});else{const F=S.get(N);N.lastChangedTime>F&&(S.set(N,N.lastChangedTime),n.dispatchEvent({type:"planechanged",data:N}))}}g=null}const vt=new Cp;vt.setAnimationLoop(dt),this.setAnimationLoop=function(W){ft=W},this.dispose=function(){}}}function ob(i,t){function e(p,m){m.color.getRGB(p.fogColor.value,Ep(i)),m.isFog?(p.fogNear.value=m.near,p.fogFar.value=m.far):m.isFogExp2&&(p.fogDensity.value=m.density)}function n(p,m,_,w,x){m.isMeshBasicMaterial||m.isMeshLambertMaterial?s(p,m):m.isMeshToonMaterial?(s(p,m),h(p,m)):m.isMeshPhongMaterial?(s(p,m),c(p,m)):m.isMeshStandardMaterial?(s(p,m),u(p,m),m.isMeshPhysicalMaterial&&f(p,m,x)):m.isMeshMatcapMaterial?(s(p,m),d(p,m)):m.isMeshDepthMaterial?s(p,m):m.isMeshDistanceMaterial?(s(p,m),g(p,m)):m.isMeshNormalMaterial?s(p,m):m.isLineBasicMaterial?(r(p,m),m.isLineDashedMaterial&&o(p,m)):m.isPointsMaterial?a(p,m,_,w):m.isSpriteMaterial?l(p,m):m.isShadowMaterial?(p.color.value.copy(m.color),p.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function s(p,m){p.opacity.value=m.opacity,m.color&&p.diffuse.value.copy(m.color),m.emissive&&p.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(p.map.value=m.map),m.alphaMap&&(p.alphaMap.value=m.alphaMap),m.bumpMap&&(p.bumpMap.value=m.bumpMap,p.bumpScale.value=m.bumpScale,m.side===qe&&(p.bumpScale.value*=-1)),m.displacementMap&&(p.displacementMap.value=m.displacementMap,p.displacementScale.value=m.displacementScale,p.displacementBias.value=m.displacementBias),m.emissiveMap&&(p.emissiveMap.value=m.emissiveMap),m.normalMap&&(p.normalMap.value=m.normalMap,p.normalScale.value.copy(m.normalScale),m.side===qe&&p.normalScale.value.negate()),m.specularMap&&(p.specularMap.value=m.specularMap),m.alphaTest>0&&(p.alphaTest.value=m.alphaTest);const _=t.get(m).envMap;if(_&&(p.envMap.value=_,p.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,p.reflectivity.value=m.reflectivity,p.ior.value=m.ior,p.refractionRatio.value=m.refractionRatio),m.lightMap){p.lightMap.value=m.lightMap;const b=i.physicallyCorrectLights!==!0?Math.PI:1;p.lightMapIntensity.value=m.lightMapIntensity*b}m.aoMap&&(p.aoMap.value=m.aoMap,p.aoMapIntensity.value=m.aoMapIntensity);let w;m.map?w=m.map:m.specularMap?w=m.specularMap:m.displacementMap?w=m.displacementMap:m.normalMap?w=m.normalMap:m.bumpMap?w=m.bumpMap:m.roughnessMap?w=m.roughnessMap:m.metalnessMap?w=m.metalnessMap:m.alphaMap?w=m.alphaMap:m.emissiveMap?w=m.emissiveMap:m.clearcoatMap?w=m.clearcoatMap:m.clearcoatNormalMap?w=m.clearcoatNormalMap:m.clearcoatRoughnessMap?w=m.clearcoatRoughnessMap:m.iridescenceMap?w=m.iridescenceMap:m.iridescenceThicknessMap?w=m.iridescenceThicknessMap:m.specularIntensityMap?w=m.specularIntensityMap:m.specularColorMap?w=m.specularColorMap:m.transmissionMap?w=m.transmissionMap:m.thicknessMap?w=m.thicknessMap:m.sheenColorMap?w=m.sheenColorMap:m.sheenRoughnessMap&&(w=m.sheenRoughnessMap),w!==void 0&&(w.isWebGLRenderTarget&&(w=w.texture),w.matrixAutoUpdate===!0&&w.updateMatrix(),p.uvTransform.value.copy(w.matrix));let x;m.aoMap?x=m.aoMap:m.lightMap&&(x=m.lightMap),x!==void 0&&(x.isWebGLRenderTarget&&(x=x.texture),x.matrixAutoUpdate===!0&&x.updateMatrix(),p.uv2Transform.value.copy(x.matrix))}function r(p,m){p.diffuse.value.copy(m.color),p.opacity.value=m.opacity}function o(p,m){p.dashSize.value=m.dashSize,p.totalSize.value=m.dashSize+m.gapSize,p.scale.value=m.scale}function a(p,m,_,w){p.diffuse.value.copy(m.color),p.opacity.value=m.opacity,p.size.value=m.size*_,p.scale.value=w*.5,m.map&&(p.map.value=m.map),m.alphaMap&&(p.alphaMap.value=m.alphaMap),m.alphaTest>0&&(p.alphaTest.value=m.alphaTest);let x;m.map?x=m.map:m.alphaMap&&(x=m.alphaMap),x!==void 0&&(x.matrixAutoUpdate===!0&&x.updateMatrix(),p.uvTransform.value.copy(x.matrix))}function l(p,m){p.diffuse.value.copy(m.color),p.opacity.value=m.opacity,p.rotation.value=m.rotation,m.map&&(p.map.value=m.map),m.alphaMap&&(p.alphaMap.value=m.alphaMap),m.alphaTest>0&&(p.alphaTest.value=m.alphaTest);let _;m.map?_=m.map:m.alphaMap&&(_=m.alphaMap),_!==void 0&&(_.matrixAutoUpdate===!0&&_.updateMatrix(),p.uvTransform.value.copy(_.matrix))}function c(p,m){p.specular.value.copy(m.specular),p.shininess.value=Math.max(m.shininess,1e-4)}function h(p,m){m.gradientMap&&(p.gradientMap.value=m.gradientMap)}function u(p,m){p.roughness.value=m.roughness,p.metalness.value=m.metalness,m.roughnessMap&&(p.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(p.metalnessMap.value=m.metalnessMap),t.get(m).envMap&&(p.envMapIntensity.value=m.envMapIntensity)}function f(p,m,_){p.ior.value=m.ior,m.sheen>0&&(p.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),p.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(p.sheenColorMap.value=m.sheenColorMap),m.sheenRoughnessMap&&(p.sheenRoughnessMap.value=m.sheenRoughnessMap)),m.clearcoat>0&&(p.clearcoat.value=m.clearcoat,p.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(p.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(p.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(p.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),p.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===qe&&p.clearcoatNormalScale.value.negate())),m.iridescence>0&&(p.iridescence.value=m.iridescence,p.iridescenceIOR.value=m.iridescenceIOR,p.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],p.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(p.iridescenceMap.value=m.iridescenceMap),m.iridescenceThicknessMap&&(p.iridescenceThicknessMap.value=m.iridescenceThicknessMap)),m.transmission>0&&(p.transmission.value=m.transmission,p.transmissionSamplerMap.value=_.texture,p.transmissionSamplerSize.value.set(_.width,_.height),m.transmissionMap&&(p.transmissionMap.value=m.transmissionMap),p.thickness.value=m.thickness,m.thicknessMap&&(p.thicknessMap.value=m.thicknessMap),p.attenuationDistance.value=m.attenuationDistance,p.attenuationColor.value.copy(m.attenuationColor)),p.specularIntensity.value=m.specularIntensity,p.specularColor.value.copy(m.specularColor),m.specularIntensityMap&&(p.specularIntensityMap.value=m.specularIntensityMap),m.specularColorMap&&(p.specularColorMap.value=m.specularColorMap)}function d(p,m){m.matcap&&(p.matcap.value=m.matcap)}function g(p,m){p.referencePosition.value.copy(m.referencePosition),p.nearDistance.value=m.nearDistance,p.farDistance.value=m.farDistance}return{refreshFogUniforms:e,refreshMaterialUniforms:n}}function ab(i,t,e,n){let s={},r={},o=[];const a=e.isWebGL2?i.getParameter(35375):0;function l(w,x){const b=x.program;n.uniformBlockBinding(w,b)}function c(w,x){let b=s[w.id];b===void 0&&(g(w),b=h(w),s[w.id]=b,w.addEventListener("dispose",m));const S=x.program;n.updateUBOMapping(w,S);const C=t.render.frame;r[w.id]!==C&&(f(w),r[w.id]=C)}function h(w){const x=u();w.__bindingPointIndex=x;const b=i.createBuffer(),S=w.__size,C=w.usage;return i.bindBuffer(35345,b),i.bufferData(35345,S,C),i.bindBuffer(35345,null),i.bindBufferBase(35345,x,b),b}function u(){for(let w=0;w<a;w++)if(o.indexOf(w)===-1)return o.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(w){const x=s[w.id],b=w.uniforms,S=w.__cache;i.bindBuffer(35345,x);for(let C=0,D=b.length;C<D;C++){const y=b[C];if(d(y,C,S)===!0){const A=y.__offset,R=Array.isArray(y.value)?y.value:[y.value];let j=0;for(let Q=0;Q<R.length;Q++){const U=R[Q],O=p(U);typeof U=="number"?(y.__data[0]=U,i.bufferSubData(35345,A+j,y.__data)):U.isMatrix3?(y.__data[0]=U.elements[0],y.__data[1]=U.elements[1],y.__data[2]=U.elements[2],y.__data[3]=U.elements[0],y.__data[4]=U.elements[3],y.__data[5]=U.elements[4],y.__data[6]=U.elements[5],y.__data[7]=U.elements[0],y.__data[8]=U.elements[6],y.__data[9]=U.elements[7],y.__data[10]=U.elements[8],y.__data[11]=U.elements[0]):(U.toArray(y.__data,j),j+=O.storage/Float32Array.BYTES_PER_ELEMENT)}i.bufferSubData(35345,A,y.__data)}}i.bindBuffer(35345,null)}function d(w,x,b){const S=w.value;if(b[x]===void 0){if(typeof S=="number")b[x]=S;else{const C=Array.isArray(S)?S:[S],D=[];for(let y=0;y<C.length;y++)D.push(C[y].clone());b[x]=D}return!0}else if(typeof S=="number"){if(b[x]!==S)return b[x]=S,!0}else{const C=Array.isArray(b[x])?b[x]:[b[x]],D=Array.isArray(S)?S:[S];for(let y=0;y<C.length;y++){const A=C[y];if(A.equals(D[y])===!1)return A.copy(D[y]),!0}}return!1}function g(w){const x=w.uniforms;let b=0;const S=16;let C=0;for(let D=0,y=x.length;D<y;D++){const A=x[D],R={boundary:0,storage:0},j=Array.isArray(A.value)?A.value:[A.value];for(let Q=0,U=j.length;Q<U;Q++){const O=j[Q],J=p(O);R.boundary+=J.boundary,R.storage+=J.storage}if(A.__data=new Float32Array(R.storage/Float32Array.BYTES_PER_ELEMENT),A.__offset=b,D>0){C=b%S;const Q=S-C;C!==0&&Q-R.boundary<0&&(b+=S-C,A.__offset=b)}b+=R.storage}return C=b%S,C>0&&(b+=S-C),w.__size=b,w.__cache={},this}function p(w){const x={boundary:0,storage:0};return typeof w=="number"?(x.boundary=4,x.storage=4):w.isVector2?(x.boundary=8,x.storage=8):w.isVector3||w.isColor?(x.boundary=16,x.storage=12):w.isVector4?(x.boundary=16,x.storage=16):w.isMatrix3?(x.boundary=48,x.storage=48):w.isMatrix4?(x.boundary=64,x.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),x}function m(w){const x=w.target;x.removeEventListener("dispose",m);const b=o.indexOf(x.__bindingPointIndex);o.splice(b,1),i.deleteBuffer(s[x.id]),delete s[x.id],delete r[x.id]}function _(){for(const w in s)i.deleteBuffer(s[w]);o=[],s={},r={}}return{bind:l,update:c,dispose:_}}function lb(){const i=kr("canvas");return i.style.display="block",i}function zp(i={}){this.isWebGLRenderer=!0;const t=i.canvas!==void 0?i.canvas:lb(),e=i.context!==void 0?i.context:null,n=i.depth!==void 0?i.depth:!0,s=i.stencil!==void 0?i.stencil:!0,r=i.antialias!==void 0?i.antialias:!1,o=i.premultipliedAlpha!==void 0?i.premultipliedAlpha:!0,a=i.preserveDrawingBuffer!==void 0?i.preserveDrawingBuffer:!1,l=i.powerPreference!==void 0?i.powerPreference:"default",c=i.failIfMajorPerformanceCaveat!==void 0?i.failIfMajorPerformanceCaveat:!1;let h;e!==null?h=e.getContextAttributes().alpha:h=i.alpha!==void 0?i.alpha:!1;let u=null,f=null;const d=[],g=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=$i,this.physicallyCorrectLights=!1,this.toneMapping=Qn,this.toneMappingExposure=1;const p=this;let m=!1,_=0,w=0,x=null,b=-1,S=null;const C=new ne,D=new ne;let y=null,A=t.width,R=t.height,j=1,Q=null,U=null;const O=new ne(0,0,A,R),J=new ne(0,0,A,R);let Z=!1;const it=new Rc;let Y=!1,ft=!1,dt=null;const vt=new Dt,W=new xt,ot=new I,yt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function N(){return x===null?j:1}let F=e;function tt(P,q){for(let lt=0;lt<P.length;lt++){const X=P[lt],ht=t.getContext(X,q);if(ht!==null)return ht}return null}try{const P={alpha:!0,depth:n,stencil:s,antialias:r,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Ac}`),t.addEventListener("webglcontextlost",Lt,!1),t.addEventListener("webglcontextrestored",Et,!1),t.addEventListener("webglcontextcreationerror",Ft,!1),F===null){const q=["webgl2","webgl","experimental-webgl"];if(p.isWebGL1Renderer===!0&&q.shift(),F=tt(q,P),F===null)throw tt(q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}F.getShaderPrecisionFormat===void 0&&(F.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(P){throw console.error("THREE.WebGLRenderer: "+P.message),P}let ct,gt,pt,wt,v,T,z,V,B,et,st,$,ut,nt,E,M,k,K,rt,mt,Mt,L,G,bt;function At(){ct=new yM(F),gt=new dM(F,ct,i),ct.init(gt),L=new eb(F,ct,gt),pt=new Q1(F,ct,gt),wt=new MM,v=new U1,T=new tb(F,ct,pt,v,gt,L,wt),z=new mM(p),V=new xM(p),B=new Ry(F,gt),G=new uM(F,ct,B,gt),et=new vM(F,B,wt,G),st=new EM(F,et,B,wt),rt=new TM(F,gt,T),M=new pM(v),$=new k1(p,z,V,ct,gt,G,M),ut=new ob(p,v),nt=new H1,E=new q1(ct,gt),K=new hM(p,z,V,pt,st,h,o),k=new J1(p,st,gt),bt=new ab(F,wt,gt,pt),mt=new fM(F,ct,wt,gt),Mt=new wM(F,ct,wt,gt),wt.programs=$.programs,p.capabilities=gt,p.extensions=ct,p.properties=v,p.renderLists=nt,p.shadowMap=k,p.state=pt,p.info=wt}At();const Tt=new rb(p,F);this.xr=Tt,this.getContext=function(){return F},this.getContextAttributes=function(){return F.getContextAttributes()},this.forceContextLoss=function(){const P=ct.get("WEBGL_lose_context");P&&P.loseContext()},this.forceContextRestore=function(){const P=ct.get("WEBGL_lose_context");P&&P.restoreContext()},this.getPixelRatio=function(){return j},this.setPixelRatio=function(P){P!==void 0&&(j=P,this.setSize(A,R,!1))},this.getSize=function(P){return P.set(A,R)},this.setSize=function(P,q,lt){if(Tt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}A=P,R=q,t.width=Math.floor(P*j),t.height=Math.floor(q*j),lt!==!1&&(t.style.width=P+"px",t.style.height=q+"px"),this.setViewport(0,0,P,q)},this.getDrawingBufferSize=function(P){return P.set(A*j,R*j).floor()},this.setDrawingBufferSize=function(P,q,lt){A=P,R=q,j=lt,t.width=Math.floor(P*lt),t.height=Math.floor(q*lt),this.setViewport(0,0,P,q)},this.getCurrentViewport=function(P){return P.copy(C)},this.getViewport=function(P){return P.copy(O)},this.setViewport=function(P,q,lt,X){P.isVector4?O.set(P.x,P.y,P.z,P.w):O.set(P,q,lt,X),pt.viewport(C.copy(O).multiplyScalar(j).floor())},this.getScissor=function(P){return P.copy(J)},this.setScissor=function(P,q,lt,X){P.isVector4?J.set(P.x,P.y,P.z,P.w):J.set(P,q,lt,X),pt.scissor(D.copy(J).multiplyScalar(j).floor())},this.getScissorTest=function(){return Z},this.setScissorTest=function(P){pt.setScissorTest(Z=P)},this.setOpaqueSort=function(P){Q=P},this.setTransparentSort=function(P){U=P},this.getClearColor=function(P){return P.copy(K.getClearColor())},this.setClearColor=function(){K.setClearColor.apply(K,arguments)},this.getClearAlpha=function(){return K.getClearAlpha()},this.setClearAlpha=function(){K.setClearAlpha.apply(K,arguments)},this.clear=function(P=!0,q=!0,lt=!0){let X=0;P&&(X|=16384),q&&(X|=256),lt&&(X|=1024),F.clear(X)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Lt,!1),t.removeEventListener("webglcontextrestored",Et,!1),t.removeEventListener("webglcontextcreationerror",Ft,!1),nt.dispose(),E.dispose(),v.dispose(),z.dispose(),V.dispose(),st.dispose(),G.dispose(),bt.dispose(),$.dispose(),Tt.dispose(),Tt.removeEventListener("sessionstart",Pt),Tt.removeEventListener("sessionend",Rt),dt&&(dt.dispose(),dt=null),ie.stop()};function Lt(P){P.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function Et(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1;const P=wt.autoReset,q=k.enabled,lt=k.autoUpdate,X=k.needsUpdate,ht=k.type;At(),wt.autoReset=P,k.enabled=q,k.autoUpdate=lt,k.needsUpdate=X,k.type=ht}function Ft(P){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",P.statusMessage)}function Vt(P){const q=P.target;q.removeEventListener("dispose",Vt),oe(q)}function oe(P){H(P),v.remove(P)}function H(P){const q=v.get(P).programs;q!==void 0&&(q.forEach(function(lt){$.releaseProgram(lt)}),P.isShaderMaterial&&$.releaseShaderCache(P))}this.renderBufferDirect=function(P,q,lt,X,ht,zt){q===null&&(q=yt);const Nt=ht.isMesh&&ht.matrixWorld.determinant()<0,Ht=xm(P,q,lt,X,ht);pt.setMaterial(X,Nt);let Gt=lt.index,Qt=1;X.wireframe===!0&&(Gt=et.getWireframeAttribute(lt),Qt=2);const Yt=lt.drawRange,$t=lt.attributes.position;let _e=Yt.start*Qt,Qe=(Yt.start+Yt.count)*Qt;zt!==null&&(_e=Math.max(_e,zt.start*Qt),Qe=Math.min(Qe,(zt.start+zt.count)*Qt)),Gt!==null?(_e=Math.max(_e,0),Qe=Math.min(Qe,Gt.count)):$t!=null&&(_e=Math.max(_e,0),Qe=Math.min(Qe,$t.count));const Vn=Qe-_e;if(Vn<0||Vn===1/0)return;G.setup(ht,X,Ht,lt,Gt);let Ai,xe=mt;if(Gt!==null&&(Ai=B.get(Gt),xe=Mt,xe.setIndex(Ai)),ht.isMesh)X.wireframe===!0?(pt.setLineWidth(X.wireframeLinewidth*N()),xe.setMode(1)):xe.setMode(4);else if(ht.isLine){let Zt=X.linewidth;Zt===void 0&&(Zt=1),pt.setLineWidth(Zt*N()),ht.isLineSegments?xe.setMode(1):ht.isLineLoop?xe.setMode(2):xe.setMode(3)}else ht.isPoints?xe.setMode(0):ht.isSprite&&xe.setMode(4);if(ht.isInstancedMesh)xe.renderInstances(_e,Vn,ht.count);else if(lt.isInstancedBufferGeometry){const Zt=lt._maxInstanceCount!==void 0?lt._maxInstanceCount:1/0,xa=Math.min(lt.instanceCount,Zt);xe.renderInstances(_e,Vn,xa)}else xe.render(_e,Vn)},this.compile=function(P,q){function lt(X,ht,zt){X.transparent===!0&&X.side===Xe&&X.forceSinglePass===!1?(X.side=qe,X.needsUpdate=!0,an(X,ht,zt),X.side=xn,X.needsUpdate=!0,an(X,ht,zt),X.side=Xe):an(X,ht,zt)}f=E.get(P),f.init(),g.push(f),P.traverseVisible(function(X){X.isLight&&X.layers.test(q.layers)&&(f.pushLight(X),X.castShadow&&f.pushShadow(X))}),f.setupLights(p.physicallyCorrectLights),P.traverse(function(X){const ht=X.material;if(ht)if(Array.isArray(ht))for(let zt=0;zt<ht.length;zt++){const Nt=ht[zt];lt(Nt,P,X)}else lt(ht,P,X)}),g.pop(),f=null};let at=null;function _t(P){at&&at(P)}function Pt(){ie.stop()}function Rt(){ie.start()}const ie=new Cp;ie.setAnimationLoop(_t),typeof self<"u"&&ie.setContext(self),this.setAnimationLoop=function(P){at=P,Tt.setAnimationLoop(P),P===null?ie.stop():ie.start()},Tt.addEventListener("sessionstart",Pt),Tt.addEventListener("sessionend",Rt),this.render=function(P,q){if(q!==void 0&&q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(m===!0)return;P.matrixWorldAutoUpdate===!0&&P.updateMatrixWorld(),q.parent===null&&q.matrixWorldAutoUpdate===!0&&q.updateMatrixWorld(),Tt.enabled===!0&&Tt.isPresenting===!0&&(Tt.cameraAutoUpdate===!0&&Tt.updateCamera(q),q=Tt.getCamera()),P.isScene===!0&&P.onBeforeRender(p,P,q,x),f=E.get(P,g.length),f.init(),g.push(f),vt.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),it.setFromProjectionMatrix(vt),ft=this.localClippingEnabled,Y=M.init(this.clippingPlanes,ft),u=nt.get(P,d.length),u.init(),d.push(u),Ee(P,q,0,p.sortObjects),u.finish(),p.sortObjects===!0&&u.sort(Q,U),Y===!0&&M.beginShadows();const lt=f.state.shadowsArray;if(k.render(lt,P,q),Y===!0&&M.endShadows(),this.info.autoReset===!0&&this.info.reset(),K.render(u,P),f.setupLights(p.physicallyCorrectLights),q.isArrayCamera){const X=q.cameras;for(let ht=0,zt=X.length;ht<zt;ht++){const Nt=X[ht];De(u,P,Nt,Nt.viewport)}}else De(u,P,q);x!==null&&(T.updateMultisampleRenderTarget(x),T.updateRenderTargetMipmap(x)),P.isScene===!0&&P.onAfterRender(p,P,q),G.resetDefaultState(),b=-1,S=null,g.pop(),g.length>0?f=g[g.length-1]:f=null,d.pop(),d.length>0?u=d[d.length-1]:u=null};function Ee(P,q,lt,X){if(P.visible===!1)return;if(P.layers.test(q.layers)){if(P.isGroup)lt=P.renderOrder;else if(P.isLOD)P.autoUpdate===!0&&P.update(q);else if(P.isLight)f.pushLight(P),P.castShadow&&f.pushShadow(P);else if(P.isSprite){if(!P.frustumCulled||it.intersectsSprite(P)){X&&ot.setFromMatrixPosition(P.matrixWorld).applyMatrix4(vt);const Nt=st.update(P),Ht=P.material;Ht.visible&&u.push(P,Nt,Ht,lt,ot.z,null)}}else if((P.isMesh||P.isLine||P.isPoints)&&(P.isSkinnedMesh&&P.skeleton.frame!==wt.render.frame&&(P.skeleton.update(),P.skeleton.frame=wt.render.frame),!P.frustumCulled||it.intersectsObject(P))){X&&ot.setFromMatrixPosition(P.matrixWorld).applyMatrix4(vt);const Nt=st.update(P),Ht=P.material;if(Array.isArray(Ht)){const Gt=Nt.groups;for(let Qt=0,Yt=Gt.length;Qt<Yt;Qt++){const $t=Gt[Qt],_e=Ht[$t.materialIndex];_e&&_e.visible&&u.push(P,Nt,_e,lt,ot.z,$t)}}else Ht.visible&&u.push(P,Nt,Ht,lt,ot.z,null)}}const zt=P.children;for(let Nt=0,Ht=zt.length;Nt<Ht;Nt++)Ee(zt[Nt],q,lt,X)}function De(P,q,lt,X){const ht=P.opaque,zt=P.transmissive,Nt=P.transparent;f.setupLightsView(lt),Y===!0&&M.setGlobalState(p.clippingPlanes,lt),zt.length>0&&Ei(ht,q,lt),X&&pt.viewport(C.copy(X)),ht.length>0&&ce(ht,q,lt),zt.length>0&&ce(zt,q,lt),Nt.length>0&&ce(Nt,q,lt),pt.buffers.depth.setTest(!0),pt.buffers.depth.setMask(!0),pt.buffers.color.setMask(!0),pt.setPolygonOffset(!1)}function Ei(P,q,lt){const X=gt.isWebGL2;dt===null&&(dt=new Zi(1,1,{generateMipmaps:!0,type:ct.has("EXT_color_buffer_half_float")?Fr:Yi,minFilter:zr,samples:X&&r===!0?4:0})),p.getDrawingBufferSize(W),X?dt.setSize(W.x,W.y):dt.setSize(Yo(W.x),Yo(W.y));const ht=p.getRenderTarget();p.setRenderTarget(dt),p.clear();const zt=p.toneMapping;p.toneMapping=Qn,ce(P,q,lt),p.toneMapping=zt,T.updateMultisampleRenderTarget(dt),T.updateRenderTargetMipmap(dt),p.setRenderTarget(ht)}function ce(P,q,lt){const X=q.isScene===!0?q.overrideMaterial:null;for(let ht=0,zt=P.length;ht<zt;ht++){const Nt=P[ht],Ht=Nt.object,Gt=Nt.geometry,Qt=X===null?Nt.material:X,Yt=Nt.group;Ht.layers.test(lt.layers)&&Hn(Ht,q,lt,Gt,Qt,Yt)}}function Hn(P,q,lt,X,ht,zt){P.onBeforeRender(p,q,lt,X,ht,zt),P.modelViewMatrix.multiplyMatrices(lt.matrixWorldInverse,P.matrixWorld),P.normalMatrix.getNormalMatrix(P.modelViewMatrix),ht.onBeforeRender(p,q,lt,X,P,zt),ht.transparent===!0&&ht.side===Xe&&ht.forceSinglePass===!1?(ht.side=qe,ht.needsUpdate=!0,p.renderBufferDirect(lt,q,X,ht,P,zt),ht.side=xn,ht.needsUpdate=!0,p.renderBufferDirect(lt,q,X,ht,P,zt),ht.side=Xe):p.renderBufferDirect(lt,q,X,ht,P,zt),P.onAfterRender(p,q,lt,X,ht,zt)}function an(P,q,lt){q.isScene!==!0&&(q=yt);const X=v.get(P),ht=f.state.lights,zt=f.state.shadowsArray,Nt=ht.state.version,Ht=$.getParameters(P,ht.state,zt,q,lt),Gt=$.getProgramCacheKey(Ht);let Qt=X.programs;X.environment=P.isMeshStandardMaterial?q.environment:null,X.fog=q.fog,X.envMap=(P.isMeshStandardMaterial?V:z).get(P.envMap||X.environment),Qt===void 0&&(P.addEventListener("dispose",Vt),Qt=new Map,X.programs=Qt);let Yt=Qt.get(Gt);if(Yt!==void 0){if(X.currentProgram===Yt&&X.lightsStateVersion===Nt)return Kc(P,Ht),Yt}else Ht.uniforms=$.getUniforms(P),P.onBuild(lt,Ht,p),P.onBeforeCompile(Ht,p),Yt=$.acquireProgram(Ht,Gt),Qt.set(Gt,Yt),X.uniforms=Ht.uniforms;const $t=X.uniforms;(!P.isShaderMaterial&&!P.isRawShaderMaterial||P.clipping===!0)&&($t.clippingPlanes=M.uniform),Kc(P,Ht),X.needsLights=vm(P),X.lightsStateVersion=Nt,X.needsLights&&($t.ambientLightColor.value=ht.state.ambient,$t.lightProbe.value=ht.state.probe,$t.directionalLights.value=ht.state.directional,$t.directionalLightShadows.value=ht.state.directionalShadow,$t.spotLights.value=ht.state.spot,$t.spotLightShadows.value=ht.state.spotShadow,$t.rectAreaLights.value=ht.state.rectArea,$t.ltc_1.value=ht.state.rectAreaLTC1,$t.ltc_2.value=ht.state.rectAreaLTC2,$t.pointLights.value=ht.state.point,$t.pointLightShadows.value=ht.state.pointShadow,$t.hemisphereLights.value=ht.state.hemi,$t.directionalShadowMap.value=ht.state.directionalShadowMap,$t.directionalShadowMatrix.value=ht.state.directionalShadowMatrix,$t.spotShadowMap.value=ht.state.spotShadowMap,$t.spotLightMatrix.value=ht.state.spotLightMatrix,$t.spotLightMap.value=ht.state.spotLightMap,$t.pointShadowMap.value=ht.state.pointShadowMap,$t.pointShadowMatrix.value=ht.state.pointShadowMatrix);const _e=Yt.getUniforms(),Qe=ko.seqWithValue(_e.seq,$t);return X.currentProgram=Yt,X.uniformsList=Qe,Yt}function Kc(P,q){const lt=v.get(P);lt.outputEncoding=q.outputEncoding,lt.instancing=q.instancing,lt.skinning=q.skinning,lt.morphTargets=q.morphTargets,lt.morphNormals=q.morphNormals,lt.morphColors=q.morphColors,lt.morphTargetsCount=q.morphTargetsCount,lt.numClippingPlanes=q.numClippingPlanes,lt.numIntersection=q.numClipIntersection,lt.vertexAlphas=q.vertexAlphas,lt.vertexTangents=q.vertexTangents,lt.toneMapping=q.toneMapping}function xm(P,q,lt,X,ht){q.isScene!==!0&&(q=yt),T.resetTextureUnits();const zt=q.fog,Nt=X.isMeshStandardMaterial?q.environment:null,Ht=x===null?p.outputEncoding:x.isXRRenderTarget===!0?x.texture.encoding:$i,Gt=(X.isMeshStandardMaterial?V:z).get(X.envMap||Nt),Qt=X.vertexColors===!0&&!!lt.attributes.color&&lt.attributes.color.itemSize===4,Yt=!!X.normalMap&&!!lt.attributes.tangent,$t=!!lt.morphAttributes.position,_e=!!lt.morphAttributes.normal,Qe=!!lt.morphAttributes.color,Vn=X.toneMapped?p.toneMapping:Qn,Ai=lt.morphAttributes.position||lt.morphAttributes.normal||lt.morphAttributes.color,xe=Ai!==void 0?Ai.length:0,Zt=v.get(X),xa=f.state.lights;if(Y===!0&&(ft===!0||P!==S)){const tn=P===S&&X.id===b;M.setState(X,P,tn)}let Ae=!1;X.version===Zt.__version?(Zt.needsLights&&Zt.lightsStateVersion!==xa.state.version||Zt.outputEncoding!==Ht||ht.isInstancedMesh&&Zt.instancing===!1||!ht.isInstancedMesh&&Zt.instancing===!0||ht.isSkinnedMesh&&Zt.skinning===!1||!ht.isSkinnedMesh&&Zt.skinning===!0||Zt.envMap!==Gt||X.fog===!0&&Zt.fog!==zt||Zt.numClippingPlanes!==void 0&&(Zt.numClippingPlanes!==M.numPlanes||Zt.numIntersection!==M.numIntersection)||Zt.vertexAlphas!==Qt||Zt.vertexTangents!==Yt||Zt.morphTargets!==$t||Zt.morphNormals!==_e||Zt.morphColors!==Qe||Zt.toneMapping!==Vn||gt.isWebGL2===!0&&Zt.morphTargetsCount!==xe)&&(Ae=!0):(Ae=!0,Zt.__version=X.version);let Pi=Zt.currentProgram;Ae===!0&&(Pi=an(X,q,ht));let Jc=!1,tr=!1,ya=!1;const ke=Pi.getUniforms(),Ci=Zt.uniforms;if(pt.useProgram(Pi.program)&&(Jc=!0,tr=!0,ya=!0),X.id!==b&&(b=X.id,tr=!0),Jc||S!==P){if(ke.setValue(F,"projectionMatrix",P.projectionMatrix),gt.logarithmicDepthBuffer&&ke.setValue(F,"logDepthBufFC",2/(Math.log(P.far+1)/Math.LN2)),S!==P&&(S=P,tr=!0,ya=!0),X.isShaderMaterial||X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshStandardMaterial||X.envMap){const tn=ke.map.cameraPosition;tn!==void 0&&tn.setValue(F,ot.setFromMatrixPosition(P.matrixWorld))}(X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshLambertMaterial||X.isMeshBasicMaterial||X.isMeshStandardMaterial||X.isShaderMaterial)&&ke.setValue(F,"isOrthographic",P.isOrthographicCamera===!0),(X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshLambertMaterial||X.isMeshBasicMaterial||X.isMeshStandardMaterial||X.isShaderMaterial||X.isShadowMaterial||ht.isSkinnedMesh)&&ke.setValue(F,"viewMatrix",P.matrixWorldInverse)}if(ht.isSkinnedMesh){ke.setOptional(F,ht,"bindMatrix"),ke.setOptional(F,ht,"bindMatrixInverse");const tn=ht.skeleton;tn&&(gt.floatVertexTextures?(tn.boneTexture===null&&tn.computeBoneTexture(),ke.setValue(F,"boneTexture",tn.boneTexture,T),ke.setValue(F,"boneTextureSize",tn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const va=lt.morphAttributes;if((va.position!==void 0||va.normal!==void 0||va.color!==void 0&&gt.isWebGL2===!0)&&rt.update(ht,lt,X,Pi),(tr||Zt.receiveShadow!==ht.receiveShadow)&&(Zt.receiveShadow=ht.receiveShadow,ke.setValue(F,"receiveShadow",ht.receiveShadow)),X.isMeshGouraudMaterial&&X.envMap!==null&&(Ci.envMap.value=Gt,Ci.flipEnvMap.value=Gt.isCubeTexture&&Gt.isRenderTargetTexture===!1?-1:1),tr&&(ke.setValue(F,"toneMappingExposure",p.toneMappingExposure),Zt.needsLights&&ym(Ci,ya),zt&&X.fog===!0&&ut.refreshFogUniforms(Ci,zt),ut.refreshMaterialUniforms(Ci,X,j,R,dt),ko.upload(F,Zt.uniformsList,Ci,T)),X.isShaderMaterial&&X.uniformsNeedUpdate===!0&&(ko.upload(F,Zt.uniformsList,Ci,T),X.uniformsNeedUpdate=!1),X.isSpriteMaterial&&ke.setValue(F,"center",ht.center),ke.setValue(F,"modelViewMatrix",ht.modelViewMatrix),ke.setValue(F,"normalMatrix",ht.normalMatrix),ke.setValue(F,"modelMatrix",ht.matrixWorld),X.isShaderMaterial||X.isRawShaderMaterial){const tn=X.uniformsGroups;for(let wa=0,wm=tn.length;wa<wm;wa++)if(gt.isWebGL2){const Qc=tn[wa];bt.update(Qc,Pi),bt.bind(Qc,Pi)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Pi}function ym(P,q){P.ambientLightColor.needsUpdate=q,P.lightProbe.needsUpdate=q,P.directionalLights.needsUpdate=q,P.directionalLightShadows.needsUpdate=q,P.pointLights.needsUpdate=q,P.pointLightShadows.needsUpdate=q,P.spotLights.needsUpdate=q,P.spotLightShadows.needsUpdate=q,P.rectAreaLights.needsUpdate=q,P.hemisphereLights.needsUpdate=q}function vm(P){return P.isMeshLambertMaterial||P.isMeshToonMaterial||P.isMeshPhongMaterial||P.isMeshStandardMaterial||P.isShadowMaterial||P.isShaderMaterial&&P.lights===!0}this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return x},this.setRenderTargetTextures=function(P,q,lt){v.get(P.texture).__webglTexture=q,v.get(P.depthTexture).__webglTexture=lt;const X=v.get(P);X.__hasExternalTextures=!0,X.__hasExternalTextures&&(X.__autoAllocateDepthBuffer=lt===void 0,X.__autoAllocateDepthBuffer||ct.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),X.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(P,q){const lt=v.get(P);lt.__webglFramebuffer=q,lt.__useDefaultFramebuffer=q===void 0},this.setRenderTarget=function(P,q=0,lt=0){x=P,_=q,w=lt;let X=!0,ht=null,zt=!1,Nt=!1;if(P){const Gt=v.get(P);Gt.__useDefaultFramebuffer!==void 0?(pt.bindFramebuffer(36160,null),X=!1):Gt.__webglFramebuffer===void 0?T.setupRenderTarget(P):Gt.__hasExternalTextures&&T.rebindTextures(P,v.get(P.texture).__webglTexture,v.get(P.depthTexture).__webglTexture);const Qt=P.texture;(Qt.isData3DTexture||Qt.isDataArrayTexture||Qt.isCompressedArrayTexture)&&(Nt=!0);const Yt=v.get(P).__webglFramebuffer;P.isWebGLCubeRenderTarget?(ht=Yt[q],zt=!0):gt.isWebGL2&&P.samples>0&&T.useMultisampledRTT(P)===!1?ht=v.get(P).__webglMultisampledFramebuffer:ht=Yt,C.copy(P.viewport),D.copy(P.scissor),y=P.scissorTest}else C.copy(O).multiplyScalar(j).floor(),D.copy(J).multiplyScalar(j).floor(),y=Z;if(pt.bindFramebuffer(36160,ht)&&gt.drawBuffers&&X&&pt.drawBuffers(P,ht),pt.viewport(C),pt.scissor(D),pt.setScissorTest(y),zt){const Gt=v.get(P.texture);F.framebufferTexture2D(36160,36064,34069+q,Gt.__webglTexture,lt)}else if(Nt){const Gt=v.get(P.texture),Qt=q||0;F.framebufferTextureLayer(36160,36064,Gt.__webglTexture,lt||0,Qt)}b=-1},this.readRenderTargetPixels=function(P,q,lt,X,ht,zt,Nt){if(!(P&&P.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ht=v.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&Nt!==void 0&&(Ht=Ht[Nt]),Ht){pt.bindFramebuffer(36160,Ht);try{const Gt=P.texture,Qt=Gt.format,Yt=Gt.type;if(Qt!==fn&&L.convert(Qt)!==F.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const $t=Yt===Fr&&(ct.has("EXT_color_buffer_half_float")||gt.isWebGL2&&ct.has("EXT_color_buffer_float"));if(Yt!==Yi&&L.convert(Yt)!==F.getParameter(35738)&&!(Yt===xi&&(gt.isWebGL2||ct.has("OES_texture_float")||ct.has("WEBGL_color_buffer_float")))&&!$t){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}q>=0&&q<=P.width-X&&lt>=0&&lt<=P.height-ht&&F.readPixels(q,lt,X,ht,L.convert(Qt),L.convert(Yt),zt)}finally{const Gt=x!==null?v.get(x).__webglFramebuffer:null;pt.bindFramebuffer(36160,Gt)}}},this.copyFramebufferToTexture=function(P,q,lt=0){const X=Math.pow(2,-lt),ht=Math.floor(q.image.width*X),zt=Math.floor(q.image.height*X);T.setTexture2D(q,0),F.copyTexSubImage2D(3553,lt,0,0,P.x,P.y,ht,zt),pt.unbindTexture()},this.copyTextureToTexture=function(P,q,lt,X=0){const ht=q.image.width,zt=q.image.height,Nt=L.convert(lt.format),Ht=L.convert(lt.type);T.setTexture2D(lt,0),F.pixelStorei(37440,lt.flipY),F.pixelStorei(37441,lt.premultiplyAlpha),F.pixelStorei(3317,lt.unpackAlignment),q.isDataTexture?F.texSubImage2D(3553,X,P.x,P.y,ht,zt,Nt,Ht,q.image.data):q.isCompressedTexture?F.compressedTexSubImage2D(3553,X,P.x,P.y,q.mipmaps[0].width,q.mipmaps[0].height,Nt,q.mipmaps[0].data):F.texSubImage2D(3553,X,P.x,P.y,Nt,Ht,q.image),X===0&&lt.generateMipmaps&&F.generateMipmap(3553),pt.unbindTexture()},this.copyTextureToTexture3D=function(P,q,lt,X,ht=0){if(p.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const zt=P.max.x-P.min.x+1,Nt=P.max.y-P.min.y+1,Ht=P.max.z-P.min.z+1,Gt=L.convert(X.format),Qt=L.convert(X.type);let Yt;if(X.isData3DTexture)T.setTexture3D(X,0),Yt=32879;else if(X.isDataArrayTexture)T.setTexture2DArray(X,0),Yt=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}F.pixelStorei(37440,X.flipY),F.pixelStorei(37441,X.premultiplyAlpha),F.pixelStorei(3317,X.unpackAlignment);const $t=F.getParameter(3314),_e=F.getParameter(32878),Qe=F.getParameter(3316),Vn=F.getParameter(3315),Ai=F.getParameter(32877),xe=lt.isCompressedTexture?lt.mipmaps[0]:lt.image;F.pixelStorei(3314,xe.width),F.pixelStorei(32878,xe.height),F.pixelStorei(3316,P.min.x),F.pixelStorei(3315,P.min.y),F.pixelStorei(32877,P.min.z),lt.isDataTexture||lt.isData3DTexture?F.texSubImage3D(Yt,ht,q.x,q.y,q.z,zt,Nt,Ht,Gt,Qt,xe.data):lt.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),F.compressedTexSubImage3D(Yt,ht,q.x,q.y,q.z,zt,Nt,Ht,Gt,xe.data)):F.texSubImage3D(Yt,ht,q.x,q.y,q.z,zt,Nt,Ht,Gt,Qt,xe),F.pixelStorei(3314,$t),F.pixelStorei(32878,_e),F.pixelStorei(3316,Qe),F.pixelStorei(3315,Vn),F.pixelStorei(32877,Ai),ht===0&&X.generateMipmaps&&F.generateMipmap(Yt),pt.unbindTexture()},this.initTexture=function(P){P.isCubeTexture?T.setTextureCube(P,0):P.isData3DTexture?T.setTexture3D(P,0):P.isDataArrayTexture||P.isCompressedArrayTexture?T.setTexture2DArray(P,0):T.setTexture2D(P,0),pt.unbindTexture()},this.resetState=function(){_=0,w=0,x=null,pt.reset(),G.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class cb extends zp{}cb.prototype.isWebGL1Renderer=!0;class hb extends ae{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(t){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=t}}const of=new I,af=new ne,lf=new ne,ub=new I,cf=new Dt;class fb extends Ot{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Dt,this.bindMatrixInverse=new Dt}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new ne,e=this.geometry.attributes.skinWeight;for(let n=0,s=e.count;n<s;n++){t.fromBufferAttribute(e,n);const r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const n=this.skeleton,s=this.geometry;af.fromBufferAttribute(s.attributes.skinIndex,t),lf.fromBufferAttribute(s.attributes.skinWeight,t),of.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let r=0;r<4;r++){const o=lf.getComponent(r);if(o!==0){const a=af.getComponent(r);cf.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),e.addScaledVector(ub.copy(of).applyMatrix4(cf),o)}}return e.applyMatrix4(this.bindMatrixInverse)}}class Zl extends ae{constructor(){super(),this.isBone=!0,this.type="Bone"}}class db extends Re{constructor(t=null,e=1,n=1,s,r,o,a,l,c=Le,h=Le,u,f){super(null,o,a,l,c,h,s,r,u,f),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const hf=new Dt,pb=new Dt;class zc{constructor(t=[],e=[]){this.uuid=si(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,s=this.bones.length;n<s;n++)this.boneInverses.push(new Dt)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const n=new Dt;this.bones[t]&&n.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,s=this.boneTexture;for(let r=0,o=t.length;r<o;r++){const a=t[r]?t[r].matrixWorld:pb;hf.multiplyMatrices(a,e[r]),hf.toArray(n,r*16)}s!==null&&(s.needsUpdate=!0)}clone(){return new zc(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(this.bones.length*4);t=yp(t),t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new db(e,t,t,fn,xi);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this.boneTextureSize=t,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const s=this.bones[e];if(s.name===t)return s}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,s=t.bones.length;n<s;n++){const r=t.bones[n];let o=e[r];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),o=new Zl),this.bones.push(o),this.boneInverses.push(new Dt().fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let s=0,r=e.length;s<r;s++){const o=e[s];t.bones.push(o.uuid);const a=n[s];t.boneInverses.push(a.toArray())}return t}}class Fp extends ri{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ct(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const uf=new I,ff=new I,df=new Dt,ul=new fa,wo=new jr;class Op extends ae{constructor(t=new pe,e=new Fp){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let s=1,r=e.count;s<r;s++)uf.fromBufferAttribute(e,s-1),ff.fromBufferAttribute(e,s),n[s]=n[s-1],n[s]+=uf.distanceTo(ff);t.setAttribute("lineDistance",new jt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,s=this.matrixWorld,r=t.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),wo.copy(n.boundingSphere),wo.applyMatrix4(s),wo.radius+=r,t.ray.intersectsSphere(wo)===!1)return;df.copy(s).invert(),ul.copy(t.ray).applyMatrix4(df);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new I,h=new I,u=new I,f=new I,d=this.isLineSegments?2:1,g=n.index,m=n.attributes.position;if(g!==null){const _=Math.max(0,o.start),w=Math.min(g.count,o.start+o.count);for(let x=_,b=w-1;x<b;x+=d){const S=g.getX(x),C=g.getX(x+1);if(c.fromBufferAttribute(m,S),h.fromBufferAttribute(m,C),ul.distanceSqToSegment(c,h,f,u)>l)continue;f.applyMatrix4(this.matrixWorld);const y=t.ray.origin.distanceTo(f);y<t.near||y>t.far||e.push({distance:y,point:u.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}else{const _=Math.max(0,o.start),w=Math.min(m.count,o.start+o.count);for(let x=_,b=w-1;x<b;x+=d){if(c.fromBufferAttribute(m,x),h.fromBufferAttribute(m,x+1),ul.distanceSqToSegment(c,h,f,u)>l)continue;f.applyMatrix4(this.matrixWorld);const C=t.ray.origin.distanceTo(f);C<t.near||C>t.far||e.push({distance:C,point:u.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const s=e[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=s.length;r<o;r++){const a=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}const pf=new I,mf=new I;class mb extends Op{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[];for(let s=0,r=e.count;s<r;s+=2)pf.fromBufferAttribute(e,s),mf.fromBufferAttribute(e,s+1),n[s]=s===0?0:n[s-1],n[s+1]=n[s]+pf.distanceTo(mf);t.setAttribute("lineDistance",new jt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Np extends ri{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ct(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const gf=new Dt,Kl=new fa,Mo=new jr,bo=new I;class Fc extends ae{constructor(t=new pe,e=new Np){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,s=this.matrixWorld,r=t.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Mo.copy(n.boundingSphere),Mo.applyMatrix4(s),Mo.radius+=r,t.ray.intersectsSphere(Mo)===!1)return;gf.copy(s).invert(),Kl.copy(t.ray).applyMatrix4(gf);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=n.index,u=n.attributes.position;if(c!==null){const f=Math.max(0,o.start),d=Math.min(c.count,o.start+o.count);for(let g=f,p=d;g<p;g++){const m=c.getX(g);bo.fromBufferAttribute(u,m),_f(bo,m,l,s,t,e,this)}}else{const f=Math.max(0,o.start),d=Math.min(u.count,o.start+o.count);for(let g=f,p=d;g<p;g++)bo.fromBufferAttribute(u,g),_f(bo,g,l,s,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const s=e[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=s.length;r<o;r++){const a=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function _f(i,t,e,n,s,r,o){const a=Kl.distanceSqToPoint(i);if(a<e){const l=new I;Kl.closestPointToPoint(i,l),l.applyMatrix4(n);const c=s.ray.origin.distanceTo(l);if(c<s.near||c>s.far)return;r.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:t,face:null,object:o})}}class Ln{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,s=this.getPoint(0),r=0;e.push(0);for(let o=1;o<=t;o++)n=this.getPoint(o/t),r+=n.distanceTo(s),e.push(r),s=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let s=0;const r=n.length;let o;e?o=e:o=t*n[r-1];let a=0,l=r-1,c;for(;a<=l;)if(s=Math.floor(a+(l-a)/2),c=n[s]-o,c<0)a=s+1;else if(c>0)l=s-1;else{l=s;break}if(s=l,n[s]===o)return s/(r-1);const h=n[s],f=n[s+1]-h,d=(o-h)/f;return(s+d)/(r-1)}getTangent(t,e){let s=t-1e-4,r=t+1e-4;s<0&&(s=0),r>1&&(r=1);const o=this.getPoint(s),a=this.getPoint(r),l=e||(o.isVector2?new xt:new I);return l.copy(a).sub(o).normalize(),l}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new I,s=[],r=[],o=[],a=new I,l=new Dt;for(let d=0;d<=t;d++){const g=d/t;s[d]=this.getTangentAt(g,new I)}r[0]=new I,o[0]=new I;let c=Number.MAX_VALUE;const h=Math.abs(s[0].x),u=Math.abs(s[0].y),f=Math.abs(s[0].z);h<=c&&(c=h,n.set(1,0,0)),u<=c&&(c=u,n.set(0,1,0)),f<=c&&n.set(0,0,1),a.crossVectors(s[0],n).normalize(),r[0].crossVectors(s[0],a),o[0].crossVectors(s[0],r[0]);for(let d=1;d<=t;d++){if(r[d]=r[d-1].clone(),o[d]=o[d-1].clone(),a.crossVectors(s[d-1],s[d]),a.length()>Number.EPSILON){a.normalize();const g=Math.acos(Ce(s[d-1].dot(s[d]),-1,1));r[d].applyMatrix4(l.makeRotationAxis(a,g))}o[d].crossVectors(s[d],r[d])}if(e===!0){let d=Math.acos(Ce(r[0].dot(r[t]),-1,1));d/=t,s[0].dot(a.crossVectors(r[0],r[t]))>0&&(d=-d);for(let g=1;g<=t;g++)r[g].applyMatrix4(l.makeRotationAxis(s[g],d*g)),o[g].crossVectors(s[g],r[g])}return{tangents:s,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Oc extends Ln{constructor(t=0,e=0,n=1,s=1,r=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=s,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(t,e){const n=e||new xt,s=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=s;for(;r>s;)r-=s;r<Number.EPSILON&&(o?r=0:r=s),this.aClockwise===!0&&!o&&(r===s?r=-s:r=r-s);const a=this.aStartAngle+t*r;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),f=l-this.aX,d=c-this.aY;l=f*h-d*u+this.aX,c=f*u+d*h+this.aY}return n.set(l,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class gb extends Oc{constructor(t,e,n,s,r,o){super(t,e,n,n,s,r,o),this.isArcCurve=!0,this.type="ArcCurve"}}function Nc(){let i=0,t=0,e=0,n=0;function s(r,o,a,l){i=r,t=a,e=-3*r+3*o-2*a-l,n=2*r-2*o+a+l}return{initCatmullRom:function(r,o,a,l,c){s(o,a,c*(a-r),c*(l-o))},initNonuniformCatmullRom:function(r,o,a,l,c,h,u){let f=(o-r)/c-(a-r)/(c+h)+(a-o)/h,d=(a-o)/h-(l-o)/(h+u)+(l-a)/u;f*=h,d*=h,s(o,a,f,d)},calc:function(r){const o=r*r,a=o*r;return i+t*r+e*o+n*a}}}const So=new I,fl=new Nc,dl=new Nc,pl=new Nc;class kp extends Ln{constructor(t=[],e=!1,n="centripetal",s=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=s}getPoint(t,e=new I){const n=e,s=this.points,r=s.length,o=(r-(this.closed?0:1))*t;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:l===0&&a===r-1&&(a=r-2,l=1);let c,h;this.closed||a>0?c=s[(a-1)%r]:(So.subVectors(s[0],s[1]).add(s[0]),c=So);const u=s[a%r],f=s[(a+1)%r];if(this.closed||a+2<r?h=s[(a+2)%r]:(So.subVectors(s[r-1],s[r-2]).add(s[r-1]),h=So),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let g=Math.pow(c.distanceToSquared(u),d),p=Math.pow(u.distanceToSquared(f),d),m=Math.pow(f.distanceToSquared(h),d);p<1e-4&&(p=1),g<1e-4&&(g=p),m<1e-4&&(m=p),fl.initNonuniformCatmullRom(c.x,u.x,f.x,h.x,g,p,m),dl.initNonuniformCatmullRom(c.y,u.y,f.y,h.y,g,p,m),pl.initNonuniformCatmullRom(c.z,u.z,f.z,h.z,g,p,m)}else this.curveType==="catmullrom"&&(fl.initCatmullRom(c.x,u.x,f.x,h.x,this.tension),dl.initCatmullRom(c.y,u.y,f.y,h.y,this.tension),pl.initCatmullRom(c.z,u.z,f.z,h.z,this.tension));return n.set(fl.calc(l),dl.calc(l),pl.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const s=t.points[e];this.points.push(s.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const s=this.points[e];t.points.push(s.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const s=t.points[e];this.points.push(new I().fromArray(s))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function xf(i,t,e,n,s){const r=(n-t)*.5,o=(s-e)*.5,a=i*i,l=i*a;return(2*e-2*n+r+o)*l+(-3*e+3*n-2*r-o)*a+r*i+e}function _b(i,t){const e=1-i;return e*e*t}function xb(i,t){return 2*(1-i)*i*t}function yb(i,t){return i*i*t}function br(i,t,e,n){return _b(i,t)+xb(i,e)+yb(i,n)}function vb(i,t){const e=1-i;return e*e*e*t}function wb(i,t){const e=1-i;return 3*e*e*i*t}function Mb(i,t){return 3*(1-i)*i*i*t}function bb(i,t){return i*i*i*t}function Sr(i,t,e,n,s){return vb(i,t)+wb(i,e)+Mb(i,n)+bb(i,s)}class Up extends Ln{constructor(t=new xt,e=new xt,n=new xt,s=new xt){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=s}getPoint(t,e=new xt){const n=e,s=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(Sr(t,s.x,r.x,o.x,a.x),Sr(t,s.y,r.y,o.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Sb extends Ln{constructor(t=new I,e=new I,n=new I,s=new I){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=s}getPoint(t,e=new I){const n=e,s=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(Sr(t,s.x,r.x,o.x,a.x),Sr(t,s.y,r.y,o.y,a.y),Sr(t,s.z,r.z,o.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class kc extends Ln{constructor(t=new xt,e=new xt){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new xt){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new xt;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Tb extends Ln{constructor(t=new I,e=new I){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new I){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Bp extends Ln{constructor(t=new xt,e=new xt,n=new xt){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new xt){const n=e,s=this.v0,r=this.v1,o=this.v2;return n.set(br(t,s.x,r.x,o.x),br(t,s.y,r.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Hp extends Ln{constructor(t=new I,e=new I,n=new I){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new I){const n=e,s=this.v0,r=this.v1,o=this.v2;return n.set(br(t,s.x,r.x,o.x),br(t,s.y,r.y,o.y),br(t,s.z,r.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Vp extends Ln{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new xt){const n=e,s=this.points,r=(s.length-1)*t,o=Math.floor(r),a=r-o,l=s[o===0?o:o-1],c=s[o],h=s[o>s.length-2?s.length-1:o+1],u=s[o>s.length-3?s.length-1:o+2];return n.set(xf(a,l.x,c.x,h.x,u.x),xf(a,l.y,c.y,h.y,u.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const s=t.points[e];this.points.push(s.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const s=this.points[e];t.points.push(s.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const s=t.points[e];this.points.push(new xt().fromArray(s))}return this}}var Gp=Object.freeze({__proto__:null,ArcCurve:gb,CatmullRomCurve3:kp,CubicBezierCurve:Up,CubicBezierCurve3:Sb,EllipseCurve:Oc,LineCurve:kc,LineCurve3:Tb,QuadraticBezierCurve:Bp,QuadraticBezierCurve3:Hp,SplineCurve:Vp});class Eb extends Ln{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new kc(e,t))}getPoint(t,e){const n=t*this.getLength(),s=this.getCurveLengths();let r=0;for(;r<s.length;){if(s[r]>=n){const o=s[r]-n,a=this.curves[r],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,e)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,s=this.curves.length;n<s;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let s=0,r=this.curves;s<r.length;s++){const o=r[s],a=o.isEllipseCurve?t*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?t*o.points.length:t,l=o.getPoints(a);for(let c=0;c<l.length;c++){const h=l[c];n&&n.equals(h)||(e.push(h),n=h)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const s=t.curves[e];this.curves.push(s.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const s=this.curves[e];t.curves.push(s.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const s=t.curves[e];this.curves.push(new Gp[s.type]().fromJSON(s))}return this}}class Jl extends Eb{constructor(t){super(),this.type="Path",this.currentPoint=new xt,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new kc(this.currentPoint.clone(),new xt(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,s){const r=new Bp(this.currentPoint.clone(),new xt(t,e),new xt(n,s));return this.curves.push(r),this.currentPoint.set(n,s),this}bezierCurveTo(t,e,n,s,r,o){const a=new Up(this.currentPoint.clone(),new xt(t,e),new xt(n,s),new xt(r,o));return this.curves.push(a),this.currentPoint.set(r,o),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Vp(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,s,r,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(t+a,e+l,n,s,r,o),this}absarc(t,e,n,s,r,o){return this.absellipse(t,e,n,n,s,r,o),this}ellipse(t,e,n,s,r,o,a,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(t+c,e+h,n,s,r,o,a,l),this}absellipse(t,e,n,s,r,o,a,l){const c=new Oc(t,e,n,s,r,o,a,l);if(this.curves.length>0){const u=c.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class $s extends pe{constructor(t=1,e=32,n=0,s=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:s},e=Math.max(3,e);const r=[],o=[],a=[],l=[],c=new I,h=new xt;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let u=0,f=3;u<=e;u++,f+=3){const d=n+u/e*s;c.x=t*Math.cos(d),c.y=t*Math.sin(d),o.push(c.x,c.y,c.z),a.push(0,0,1),h.x=(o[f]/t+1)/2,h.y=(o[f+1]/t+1)/2,l.push(h.x,h.y)}for(let u=1;u<=e;u++)r.push(u,u+1,0);this.setIndex(r),this.setAttribute("position",new jt(o,3)),this.setAttribute("normal",new jt(a,3)),this.setAttribute("uv",new jt(l,2))}static fromJSON(t){return new $s(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class oi extends pe{constructor(t=1,e=1,n=1,s=32,r=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:s,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:l};const c=this;s=Math.floor(s),r=Math.floor(r);const h=[],u=[],f=[],d=[];let g=0;const p=[],m=n/2;let _=0;w(),o===!1&&(t>0&&x(!0),e>0&&x(!1)),this.setIndex(h),this.setAttribute("position",new jt(u,3)),this.setAttribute("normal",new jt(f,3)),this.setAttribute("uv",new jt(d,2));function w(){const b=new I,S=new I;let C=0;const D=(e-t)/n;for(let y=0;y<=r;y++){const A=[],R=y/r,j=R*(e-t)+t;for(let Q=0;Q<=s;Q++){const U=Q/s,O=U*l+a,J=Math.sin(O),Z=Math.cos(O);S.x=j*J,S.y=-R*n+m,S.z=j*Z,u.push(S.x,S.y,S.z),b.set(J,D,Z).normalize(),f.push(b.x,b.y,b.z),d.push(U,1-R),A.push(g++)}p.push(A)}for(let y=0;y<s;y++)for(let A=0;A<r;A++){const R=p[A][y],j=p[A+1][y],Q=p[A+1][y+1],U=p[A][y+1];h.push(R,j,U),h.push(j,Q,U),C+=6}c.addGroup(_,C,0),_+=C}function x(b){const S=g,C=new xt,D=new I;let y=0;const A=b===!0?t:e,R=b===!0?1:-1;for(let Q=1;Q<=s;Q++)u.push(0,m*R,0),f.push(0,R,0),d.push(.5,.5),g++;const j=g;for(let Q=0;Q<=s;Q++){const O=Q/s*l+a,J=Math.cos(O),Z=Math.sin(O);D.x=A*Z,D.y=m*R,D.z=A*J,u.push(D.x,D.y,D.z),f.push(0,R,0),C.x=J*.5+.5,C.y=Z*.5*R+.5,d.push(C.x,C.y),g++}for(let Q=0;Q<s;Q++){const U=S+Q,O=j+Q;b===!0?h.push(O,O+1,U):h.push(O+1,O,U),y+=3}c.addGroup(_,y,b===!0?1:2),_+=y}}static fromJSON(t){return new oi(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Uc extends oi{constructor(t=1,e=1,n=32,s=1,r=!1,o=0,a=Math.PI*2){super(0,t,e,n,s,r,o,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:s,openEnded:r,thetaStart:o,thetaLength:a}}static fromJSON(t){return new Uc(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}const To=new I,Eo=new I,ml=new I,Ao=new Nn;class Ab extends pe{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},t!==null){const s=Math.pow(10,4),r=Math.cos(Fs*e),o=t.getIndex(),a=t.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],h=["a","b","c"],u=new Array(3),f={},d=[];for(let g=0;g<l;g+=3){o?(c[0]=o.getX(g),c[1]=o.getX(g+1),c[2]=o.getX(g+2)):(c[0]=g,c[1]=g+1,c[2]=g+2);const{a:p,b:m,c:_}=Ao;if(p.fromBufferAttribute(a,c[0]),m.fromBufferAttribute(a,c[1]),_.fromBufferAttribute(a,c[2]),Ao.getNormal(ml),u[0]=`${Math.round(p.x*s)},${Math.round(p.y*s)},${Math.round(p.z*s)}`,u[1]=`${Math.round(m.x*s)},${Math.round(m.y*s)},${Math.round(m.z*s)}`,u[2]=`${Math.round(_.x*s)},${Math.round(_.y*s)},${Math.round(_.z*s)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let w=0;w<3;w++){const x=(w+1)%3,b=u[w],S=u[x],C=Ao[h[w]],D=Ao[h[x]],y=`${b}_${S}`,A=`${S}_${b}`;A in f&&f[A]?(ml.dot(f[A].normal)<=r&&(d.push(C.x,C.y,C.z),d.push(D.x,D.y,D.z)),f[A]=null):y in f||(f[y]={index0:c[w],index1:c[x],normal:ml.clone()})}}for(const g in f)if(f[g]){const{index0:p,index1:m}=f[g];To.fromBufferAttribute(a,p),Eo.fromBufferAttribute(a,m),d.push(To.x,To.y,To.z),d.push(Eo.x,Eo.y,Eo.z)}this.setAttribute("position",new jt(d,3))}}}class fe extends Jl{constructor(t){super(t),this.uuid=si(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,s=this.holes.length;n<s;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const s=t.holes[e];this.holes.push(s.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const s=this.holes[e];t.holes.push(s.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const s=t.holes[e];this.holes.push(new Jl().fromJSON(s))}return this}}const Pb={triangulate:function(i,t,e=2){const n=t&&t.length,s=n?t[0]*e:i.length;let r=Wp(i,0,s,e,!0);const o=[];if(!r||r.next===r.prev)return o;let a,l,c,h,u,f,d;if(n&&(r=Db(i,t,r,e)),i.length>80*e){a=c=i[0],l=h=i[1];for(let g=e;g<s;g+=e)u=i[g],f=i[g+1],u<a&&(a=u),f<l&&(l=f),u>c&&(c=u),f>h&&(h=f);d=Math.max(c-a,h-l),d=d!==0?32767/d:0}return Ur(r,o,e,a,l,d,0),o}};function Wp(i,t,e,n,s){let r,o;if(s===Wb(i,t,e,n)>0)for(r=t;r<e;r+=n)o=yf(r,i[r],i[r+1],o);else for(r=e-n;r>=t;r-=n)o=yf(r,i[r],i[r+1],o);return o&&pa(o,o.next)&&(Hr(o),o=o.next),o}function Ki(i,t){if(!i)return i;t||(t=i);let e=i,n;do if(n=!1,!e.steiner&&(pa(e,e.next)||de(e.prev,e,e.next)===0)){if(Hr(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function Ur(i,t,e,n,s,r,o){if(!i)return;!o&&r&&kb(i,n,s,r);let a=i,l,c;for(;i.prev!==i.next;){if(l=i.prev,c=i.next,r?Lb(i,n,s,r):Cb(i)){t.push(l.i/e|0),t.push(i.i/e|0),t.push(c.i/e|0),Hr(i),i=c.next,a=c.next;continue}if(i=c,i===a){o?o===1?(i=Rb(Ki(i),t,e),Ur(i,t,e,n,s,r,2)):o===2&&Ib(i,t,e,n,s,r):Ur(Ki(i),t,e,n,s,r,1);break}}}function Cb(i){const t=i.prev,e=i,n=i.next;if(de(t,e,n)>=0)return!1;const s=t.x,r=e.x,o=n.x,a=t.y,l=e.y,c=n.y,h=s<r?s<o?s:o:r<o?r:o,u=a<l?a<c?a:c:l<c?l:c,f=s>r?s>o?s:o:r>o?r:o,d=a>l?a>c?a:c:l>c?l:c;let g=n.next;for(;g!==t;){if(g.x>=h&&g.x<=f&&g.y>=u&&g.y<=d&&As(s,a,r,l,o,c,g.x,g.y)&&de(g.prev,g,g.next)>=0)return!1;g=g.next}return!0}function Lb(i,t,e,n){const s=i.prev,r=i,o=i.next;if(de(s,r,o)>=0)return!1;const a=s.x,l=r.x,c=o.x,h=s.y,u=r.y,f=o.y,d=a<l?a<c?a:c:l<c?l:c,g=h<u?h<f?h:f:u<f?u:f,p=a>l?a>c?a:c:l>c?l:c,m=h>u?h>f?h:f:u>f?u:f,_=Ql(d,g,t,e,n),w=Ql(p,m,t,e,n);let x=i.prevZ,b=i.nextZ;for(;x&&x.z>=_&&b&&b.z<=w;){if(x.x>=d&&x.x<=p&&x.y>=g&&x.y<=m&&x!==s&&x!==o&&As(a,h,l,u,c,f,x.x,x.y)&&de(x.prev,x,x.next)>=0||(x=x.prevZ,b.x>=d&&b.x<=p&&b.y>=g&&b.y<=m&&b!==s&&b!==o&&As(a,h,l,u,c,f,b.x,b.y)&&de(b.prev,b,b.next)>=0))return!1;b=b.nextZ}for(;x&&x.z>=_;){if(x.x>=d&&x.x<=p&&x.y>=g&&x.y<=m&&x!==s&&x!==o&&As(a,h,l,u,c,f,x.x,x.y)&&de(x.prev,x,x.next)>=0)return!1;x=x.prevZ}for(;b&&b.z<=w;){if(b.x>=d&&b.x<=p&&b.y>=g&&b.y<=m&&b!==s&&b!==o&&As(a,h,l,u,c,f,b.x,b.y)&&de(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function Rb(i,t,e){let n=i;do{const s=n.prev,r=n.next.next;!pa(s,r)&&Xp(s,n,n.next,r)&&Br(s,r)&&Br(r,s)&&(t.push(s.i/e|0),t.push(n.i/e|0),t.push(r.i/e|0),Hr(n),Hr(n.next),n=i=r),n=n.next}while(n!==i);return Ki(n)}function Ib(i,t,e,n,s,r){let o=i;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&Hb(o,a)){let l=jp(o,a);o=Ki(o,o.next),l=Ki(l,l.next),Ur(o,t,e,n,s,r,0),Ur(l,t,e,n,s,r,0);return}a=a.next}o=o.next}while(o!==i)}function Db(i,t,e,n){const s=[];let r,o,a,l,c;for(r=0,o=t.length;r<o;r++)a=t[r]*n,l=r<o-1?t[r+1]*n:i.length,c=Wp(i,a,l,n,!1),c===c.next&&(c.steiner=!0),s.push(Bb(c));for(s.sort(zb),r=0;r<s.length;r++)e=Fb(s[r],e);return e}function zb(i,t){return i.x-t.x}function Fb(i,t){const e=Ob(i,t);if(!e)return t;const n=jp(e,i);return Ki(n,n.next),Ki(e,e.next)}function Ob(i,t){let e=t,n=-1/0,s;const r=i.x,o=i.y;do{if(o<=e.y&&o>=e.next.y&&e.next.y!==e.y){const f=e.x+(o-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(f<=r&&f>n&&(n=f,s=e.x<e.next.x?e:e.next,f===r))return s}e=e.next}while(e!==t);if(!s)return null;const a=s,l=s.x,c=s.y;let h=1/0,u;e=s;do r>=e.x&&e.x>=l&&r!==e.x&&As(o<c?r:n,o,l,c,o<c?n:r,o,e.x,e.y)&&(u=Math.abs(o-e.y)/(r-e.x),Br(e,i)&&(u<h||u===h&&(e.x>s.x||e.x===s.x&&Nb(s,e)))&&(s=e,h=u)),e=e.next;while(e!==a);return s}function Nb(i,t){return de(i.prev,i,t.prev)<0&&de(t.next,i,i.next)<0}function kb(i,t,e,n){let s=i;do s.z===0&&(s.z=Ql(s.x,s.y,t,e,n)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next;while(s!==i);s.prevZ.nextZ=null,s.prevZ=null,Ub(s)}function Ub(i){let t,e,n,s,r,o,a,l,c=1;do{for(e=i,i=null,r=null,o=0;e;){for(o++,n=e,a=0,t=0;t<c&&(a++,n=n.nextZ,!!n);t++);for(l=c;a>0||l>0&&n;)a!==0&&(l===0||!n||e.z<=n.z)?(s=e,e=e.nextZ,a--):(s=n,n=n.nextZ,l--),r?r.nextZ=s:i=s,s.prevZ=r,r=s;e=n}r.nextZ=null,c*=2}while(o>1);return i}function Ql(i,t,e,n,s){return i=(i-e)*s|0,t=(t-n)*s|0,i=(i|i<<8)&16711935,i=(i|i<<4)&252645135,i=(i|i<<2)&858993459,i=(i|i<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,i|t<<1}function Bb(i){let t=i,e=i;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==i);return e}function As(i,t,e,n,s,r,o,a){return(s-o)*(t-a)>=(i-o)*(r-a)&&(i-o)*(n-a)>=(e-o)*(t-a)&&(e-o)*(r-a)>=(s-o)*(n-a)}function Hb(i,t){return i.next.i!==t.i&&i.prev.i!==t.i&&!Vb(i,t)&&(Br(i,t)&&Br(t,i)&&Gb(i,t)&&(de(i.prev,i,t.prev)||de(i,t.prev,t))||pa(i,t)&&de(i.prev,i,i.next)>0&&de(t.prev,t,t.next)>0)}function de(i,t,e){return(t.y-i.y)*(e.x-t.x)-(t.x-i.x)*(e.y-t.y)}function pa(i,t){return i.x===t.x&&i.y===t.y}function Xp(i,t,e,n){const s=Co(de(i,t,e)),r=Co(de(i,t,n)),o=Co(de(e,n,i)),a=Co(de(e,n,t));return!!(s!==r&&o!==a||s===0&&Po(i,e,t)||r===0&&Po(i,n,t)||o===0&&Po(e,i,n)||a===0&&Po(e,t,n))}function Po(i,t,e){return t.x<=Math.max(i.x,e.x)&&t.x>=Math.min(i.x,e.x)&&t.y<=Math.max(i.y,e.y)&&t.y>=Math.min(i.y,e.y)}function Co(i){return i>0?1:i<0?-1:0}function Vb(i,t){let e=i;do{if(e.i!==i.i&&e.next.i!==i.i&&e.i!==t.i&&e.next.i!==t.i&&Xp(e,e.next,i,t))return!0;e=e.next}while(e!==i);return!1}function Br(i,t){return de(i.prev,i,i.next)<0?de(i,t,i.next)>=0&&de(i,i.prev,t)>=0:de(i,t,i.prev)<0||de(i,i.next,t)<0}function Gb(i,t){let e=i,n=!1;const s=(i.x+t.x)/2,r=(i.y+t.y)/2;do e.y>r!=e.next.y>r&&e.next.y!==e.y&&s<(e.next.x-e.x)*(r-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==i);return n}function jp(i,t){const e=new tc(i.i,i.x,i.y),n=new tc(t.i,t.x,t.y),s=i.next,r=t.prev;return i.next=t,t.prev=i,e.next=s,s.prev=e,n.next=e,e.prev=n,r.next=n,n.prev=r,n}function yf(i,t,e,n){const s=new tc(i,t,e);return n?(s.next=n.next,s.prev=n,n.next.prev=s,n.next=s):(s.prev=s,s.next=s),s}function Hr(i){i.next.prev=i.prev,i.prev.next=i.next,i.prevZ&&(i.prevZ.nextZ=i.nextZ),i.nextZ&&(i.nextZ.prevZ=i.prevZ)}function tc(i,t,e){this.i=i,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Wb(i,t,e,n){let s=0;for(let r=t,o=e-n;r<e;r+=n)s+=(i[o]-i[r])*(i[r+1]+i[o+1]),o=r;return s}class ti{static area(t){const e=t.length;let n=0;for(let s=e-1,r=0;r<e;s=r++)n+=t[s].x*t[r].y-t[r].x*t[s].y;return n*.5}static isClockWise(t){return ti.area(t)<0}static triangulateShape(t,e){const n=[],s=[],r=[];vf(t),wf(n,t);let o=t.length;e.forEach(vf);for(let l=0;l<e.length;l++)s.push(o),o+=e[l].length,wf(n,e[l]);const a=Pb.triangulate(n,s);for(let l=0;l<a.length;l+=3)r.push(a.slice(l,l+3));return r}}function vf(i){const t=i.length;t>2&&i[t-1].equals(i[0])&&i.pop()}function wf(i,t){for(let e=0;e<t.length;e++)i.push(t[e].x),i.push(t[e].y)}class qr extends pe{constructor(t=new fe([new xt(.5,.5),new xt(-.5,.5),new xt(-.5,-.5),new xt(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,s=[],r=[];for(let a=0,l=t.length;a<l;a++){const c=t[a];o(c)}this.setAttribute("position",new jt(s,3)),this.setAttribute("uv",new jt(r,2)),this.computeVertexNormals();function o(a){const l=[],c=e.curveSegments!==void 0?e.curveSegments:12,h=e.steps!==void 0?e.steps:1,u=e.depth!==void 0?e.depth:1;let f=e.bevelEnabled!==void 0?e.bevelEnabled:!0,d=e.bevelThickness!==void 0?e.bevelThickness:.2,g=e.bevelSize!==void 0?e.bevelSize:d-.1,p=e.bevelOffset!==void 0?e.bevelOffset:0,m=e.bevelSegments!==void 0?e.bevelSegments:3;const _=e.extrudePath,w=e.UVGenerator!==void 0?e.UVGenerator:Xb;let x,b=!1,S,C,D,y;_&&(x=_.getSpacedPoints(h),b=!0,f=!1,S=_.computeFrenetFrames(h,!1),C=new I,D=new I,y=new I),f||(m=0,d=0,g=0,p=0);const A=a.extractPoints(c);let R=A.shape;const j=A.holes;if(!ti.isClockWise(R)){R=R.reverse();for(let v=0,T=j.length;v<T;v++){const z=j[v];ti.isClockWise(z)&&(j[v]=z.reverse())}}const U=ti.triangulateShape(R,j),O=R;for(let v=0,T=j.length;v<T;v++){const z=j[v];R=R.concat(z)}function J(v,T,z){return T||console.error("THREE.ExtrudeGeometry: vec does not exist"),T.clone().multiplyScalar(z).add(v)}const Z=R.length,it=U.length;function Y(v,T,z){let V,B,et;const st=v.x-T.x,$=v.y-T.y,ut=z.x-v.x,nt=z.y-v.y,E=st*st+$*$,M=st*nt-$*ut;if(Math.abs(M)>Number.EPSILON){const k=Math.sqrt(E),K=Math.sqrt(ut*ut+nt*nt),rt=T.x-$/k,mt=T.y+st/k,Mt=z.x-nt/K,L=z.y+ut/K,G=((Mt-rt)*nt-(L-mt)*ut)/(st*nt-$*ut);V=rt+st*G-v.x,B=mt+$*G-v.y;const bt=V*V+B*B;if(bt<=2)return new xt(V,B);et=Math.sqrt(bt/2)}else{let k=!1;st>Number.EPSILON?ut>Number.EPSILON&&(k=!0):st<-Number.EPSILON?ut<-Number.EPSILON&&(k=!0):Math.sign($)===Math.sign(nt)&&(k=!0),k?(V=-$,B=st,et=Math.sqrt(E)):(V=st,B=$,et=Math.sqrt(E/2))}return new xt(V/et,B/et)}const ft=[];for(let v=0,T=O.length,z=T-1,V=v+1;v<T;v++,z++,V++)z===T&&(z=0),V===T&&(V=0),ft[v]=Y(O[v],O[z],O[V]);const dt=[];let vt,W=ft.concat();for(let v=0,T=j.length;v<T;v++){const z=j[v];vt=[];for(let V=0,B=z.length,et=B-1,st=V+1;V<B;V++,et++,st++)et===B&&(et=0),st===B&&(st=0),vt[V]=Y(z[V],z[et],z[st]);dt.push(vt),W=W.concat(vt)}for(let v=0;v<m;v++){const T=v/m,z=d*Math.cos(T*Math.PI/2),V=g*Math.sin(T*Math.PI/2)+p;for(let B=0,et=O.length;B<et;B++){const st=J(O[B],ft[B],V);tt(st.x,st.y,-z)}for(let B=0,et=j.length;B<et;B++){const st=j[B];vt=dt[B];for(let $=0,ut=st.length;$<ut;$++){const nt=J(st[$],vt[$],V);tt(nt.x,nt.y,-z)}}}const ot=g+p;for(let v=0;v<Z;v++){const T=f?J(R[v],W[v],ot):R[v];b?(D.copy(S.normals[0]).multiplyScalar(T.x),C.copy(S.binormals[0]).multiplyScalar(T.y),y.copy(x[0]).add(D).add(C),tt(y.x,y.y,y.z)):tt(T.x,T.y,0)}for(let v=1;v<=h;v++)for(let T=0;T<Z;T++){const z=f?J(R[T],W[T],ot):R[T];b?(D.copy(S.normals[v]).multiplyScalar(z.x),C.copy(S.binormals[v]).multiplyScalar(z.y),y.copy(x[v]).add(D).add(C),tt(y.x,y.y,y.z)):tt(z.x,z.y,u/h*v)}for(let v=m-1;v>=0;v--){const T=v/m,z=d*Math.cos(T*Math.PI/2),V=g*Math.sin(T*Math.PI/2)+p;for(let B=0,et=O.length;B<et;B++){const st=J(O[B],ft[B],V);tt(st.x,st.y,u+z)}for(let B=0,et=j.length;B<et;B++){const st=j[B];vt=dt[B];for(let $=0,ut=st.length;$<ut;$++){const nt=J(st[$],vt[$],V);b?tt(nt.x,nt.y+x[h-1].y,x[h-1].x+z):tt(nt.x,nt.y,u+z)}}}yt(),N();function yt(){const v=s.length/3;if(f){let T=0,z=Z*T;for(let V=0;V<it;V++){const B=U[V];ct(B[2]+z,B[1]+z,B[0]+z)}T=h+m*2,z=Z*T;for(let V=0;V<it;V++){const B=U[V];ct(B[0]+z,B[1]+z,B[2]+z)}}else{for(let T=0;T<it;T++){const z=U[T];ct(z[2],z[1],z[0])}for(let T=0;T<it;T++){const z=U[T];ct(z[0]+Z*h,z[1]+Z*h,z[2]+Z*h)}}n.addGroup(v,s.length/3-v,0)}function N(){const v=s.length/3;let T=0;F(O,T),T+=O.length;for(let z=0,V=j.length;z<V;z++){const B=j[z];F(B,T),T+=B.length}n.addGroup(v,s.length/3-v,1)}function F(v,T){let z=v.length;for(;--z>=0;){const V=z;let B=z-1;B<0&&(B=v.length-1);for(let et=0,st=h+m*2;et<st;et++){const $=Z*et,ut=Z*(et+1),nt=T+V+$,E=T+B+$,M=T+B+ut,k=T+V+ut;gt(nt,E,M,k)}}}function tt(v,T,z){l.push(v),l.push(T),l.push(z)}function ct(v,T,z){pt(v),pt(T),pt(z);const V=s.length/3,B=w.generateTopUV(n,s,V-3,V-2,V-1);wt(B[0]),wt(B[1]),wt(B[2])}function gt(v,T,z,V){pt(v),pt(T),pt(V),pt(T),pt(z),pt(V);const B=s.length/3,et=w.generateSideWallUV(n,s,B-6,B-3,B-2,B-1);wt(et[0]),wt(et[1]),wt(et[3]),wt(et[1]),wt(et[2]),wt(et[3])}function pt(v){s.push(l[v*3+0]),s.push(l[v*3+1]),s.push(l[v*3+2])}function wt(v){r.push(v.x),r.push(v.y)}}}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return jb(e,n,t)}static fromJSON(t,e){const n=[];for(let r=0,o=t.shapes.length;r<o;r++){const a=e[t.shapes[r]];n.push(a)}const s=t.options.extrudePath;return s!==void 0&&(t.options.extrudePath=new Gp[s.type]().fromJSON(s)),new qr(n,t.options)}}const Xb={generateTopUV:function(i,t,e,n,s){const r=t[e*3],o=t[e*3+1],a=t[n*3],l=t[n*3+1],c=t[s*3],h=t[s*3+1];return[new xt(r,o),new xt(a,l),new xt(c,h)]},generateSideWallUV:function(i,t,e,n,s,r){const o=t[e*3],a=t[e*3+1],l=t[e*3+2],c=t[n*3],h=t[n*3+1],u=t[n*3+2],f=t[s*3],d=t[s*3+1],g=t[s*3+2],p=t[r*3],m=t[r*3+1],_=t[r*3+2];return Math.abs(a-h)<Math.abs(o-c)?[new xt(o,1-l),new xt(c,1-u),new xt(f,1-g),new xt(p,1-_)]:[new xt(a,1-l),new xt(h,1-u),new xt(d,1-g),new xt(m,1-_)]}};function jb(i,t,e){if(e.shapes=[],Array.isArray(i))for(let n=0,s=i.length;n<s;n++){const r=i[n];e.shapes.push(r.uuid)}else e.shapes.push(i.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class Bc extends pe{constructor(t=.5,e=1,n=32,s=1,r=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:s,thetaStart:r,thetaLength:o},n=Math.max(3,n),s=Math.max(1,s);const a=[],l=[],c=[],h=[];let u=t;const f=(e-t)/s,d=new I,g=new xt;for(let p=0;p<=s;p++){for(let m=0;m<=n;m++){const _=r+m/n*o;d.x=u*Math.cos(_),d.y=u*Math.sin(_),l.push(d.x,d.y,d.z),c.push(0,0,1),g.x=(d.x/e+1)/2,g.y=(d.y/e+1)/2,h.push(g.x,g.y)}u+=f}for(let p=0;p<s;p++){const m=p*(n+1);for(let _=0;_<n;_++){const w=_+m,x=w,b=w+n+1,S=w+n+2,C=w+1;a.push(x,b,C),a.push(b,S,C)}}this.setIndex(a),this.setAttribute("position",new jt(l,3)),this.setAttribute("normal",new jt(c,3)),this.setAttribute("uv",new jt(h,2))}static fromJSON(t){return new Bc(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class Hc extends pe{constructor(t=new fe([new xt(0,.5),new xt(-.5,-.5),new xt(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],s=[],r=[],o=[];let a=0,l=0;if(Array.isArray(t)===!1)c(t);else for(let h=0;h<t.length;h++)c(t[h]),this.addGroup(a,l,h),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new jt(s,3)),this.setAttribute("normal",new jt(r,3)),this.setAttribute("uv",new jt(o,2));function c(h){const u=s.length/3,f=h.extractPoints(e);let d=f.shape;const g=f.holes;ti.isClockWise(d)===!1&&(d=d.reverse());for(let m=0,_=g.length;m<_;m++){const w=g[m];ti.isClockWise(w)===!0&&(g[m]=w.reverse())}const p=ti.triangulateShape(d,g);for(let m=0,_=g.length;m<_;m++){const w=g[m];d=d.concat(w)}for(let m=0,_=d.length;m<_;m++){const w=d[m];s.push(w.x,w.y,0),r.push(0,0,1),o.push(w.x,w.y)}for(let m=0,_=p.length;m<_;m++){const w=p[m],x=w[0]+u,b=w[1]+u,S=w[2]+u;n.push(x,b,S),l+=3}}}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return qb(e,t)}static fromJSON(t,e){const n=[];for(let s=0,r=t.shapes.length;s<r;s++){const o=e[t.shapes[s]];n.push(o)}return new Hc(n,t.curveSegments)}}function qb(i,t){if(t.shapes=[],Array.isArray(i))for(let e=0,n=i.length;e<n;e++){const s=i[e];t.shapes.push(s.uuid)}else t.shapes.push(i.uuid);return t}class yn extends pe{constructor(t=1,e=32,n=16,s=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:s,phiLength:r,thetaStart:o,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let c=0;const h=[],u=new I,f=new I,d=[],g=[],p=[],m=[];for(let _=0;_<=n;_++){const w=[],x=_/n;let b=0;_==0&&o==0?b=.5/e:_==n&&l==Math.PI&&(b=-.5/e);for(let S=0;S<=e;S++){const C=S/e;u.x=-t*Math.cos(s+C*r)*Math.sin(o+x*a),u.y=t*Math.cos(o+x*a),u.z=t*Math.sin(s+C*r)*Math.sin(o+x*a),g.push(u.x,u.y,u.z),f.copy(u).normalize(),p.push(f.x,f.y,f.z),m.push(C+b,1-x),w.push(c++)}h.push(w)}for(let _=0;_<n;_++)for(let w=0;w<e;w++){const x=h[_][w+1],b=h[_][w],S=h[_+1][w],C=h[_+1][w+1];(_!==0||o>0)&&d.push(x,b,C),(_!==n-1||l<Math.PI)&&d.push(b,S,C)}this.setIndex(d),this.setAttribute("position",new jt(g,3)),this.setAttribute("normal",new jt(p,3)),this.setAttribute("uv",new jt(m,2))}static fromJSON(t){return new yn(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Ie extends ri{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ct(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ct(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ua,this.normalScale=new xt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Yb extends Ie{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new xt(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Ce(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ct(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ct(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ct(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(t)}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class gl extends ri{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ct(16777215),this.specular=new Ct(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ct(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ua,this.normalScale=new xt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ca,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Vc extends ri{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ct(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ct(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ua,this.normalScale=new xt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ca,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}function di(i,t,e){return qp(i)?new i.constructor(i.subarray(t,e!==void 0?e:i.length)):i.slice(t,e)}function Lo(i,t,e){return!i||!e&&i.constructor===t?i:typeof t.BYTES_PER_ELEMENT=="number"?new t(i):Array.prototype.slice.call(i)}function qp(i){return ArrayBuffer.isView(i)&&!(i instanceof DataView)}function $b(i){function t(s,r){return i[s]-i[r]}const e=i.length,n=new Array(e);for(let s=0;s!==e;++s)n[s]=s;return n.sort(t),n}function Mf(i,t,e){const n=i.length,s=new i.constructor(n);for(let r=0,o=0;o!==n;++r){const a=e[r]*t;for(let l=0;l!==t;++l)s[o++]=i[a+l]}return s}function Yp(i,t,e,n){let s=1,r=i[0];for(;r!==void 0&&r[n]===void 0;)r=i[s++];if(r===void 0)return;let o=r[n];if(o!==void 0)if(Array.isArray(o))do o=r[n],o!==void 0&&(t.push(r.time),e.push.apply(e,o)),r=i[s++];while(r!==void 0);else if(o.toArray!==void 0)do o=r[n],o!==void 0&&(t.push(r.time),o.toArray(e,e.length)),r=i[s++];while(r!==void 0);else do o=r[n],o!==void 0&&(t.push(r.time),e.push(o)),r=i[s++];while(r!==void 0)}class ma{constructor(t,e,n,s){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=s!==void 0?s:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,s=e[n],r=e[n-1];n:{t:{let o;e:{i:if(!(t<s)){for(let a=n+2;;){if(s===void 0){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(r=s,s=e[++n],t<s)break t}o=e.length;break e}if(!(t>=r)){const a=e[1];t<a&&(n=2,r=a);for(let l=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(s=r,r=e[--n-1],t>=r)break t}o=n,n=0;break e}break n}for(;n<o;){const a=n+o>>>1;t<e[a]?o=a:n=a+1}if(s=e[n],r=e[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(s===void 0)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,s)}return this.interpolate_(n,r,t,s)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,s=this.valueSize,r=t*s;for(let o=0;o!==s;++o)e[o]=n[r+o];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Zb extends ma{constructor(t,e,n,s){super(t,e,n,s),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:wu,endingEnd:wu}}intervalChanged_(t,e,n){const s=this.parameterPositions;let r=t-2,o=t+1,a=s[r],l=s[o];if(a===void 0)switch(this.getSettings_().endingStart){case Mu:r=t,a=2*e-n;break;case bu:r=s.length-2,a=e+s[r]-s[r+1];break;default:r=t,a=n}if(l===void 0)switch(this.getSettings_().endingEnd){case Mu:o=t,l=2*n-e;break;case bu:o=1,l=n+s[1]-s[0];break;default:o=t-1,l=e}const c=(n-e)*.5,h=this.valueSize;this._weightPrev=c/(e-a),this._weightNext=c/(l-n),this._offsetPrev=r*h,this._offsetNext=o*h}interpolate_(t,e,n,s){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=t*a,c=l-a,h=this._offsetPrev,u=this._offsetNext,f=this._weightPrev,d=this._weightNext,g=(n-e)/(s-e),p=g*g,m=p*g,_=-f*m+2*f*p-f*g,w=(1+f)*m+(-1.5-2*f)*p+(-.5+f)*g+1,x=(-1-d)*m+(1.5+d)*p+.5*g,b=d*m-d*p;for(let S=0;S!==a;++S)r[S]=_*o[h+S]+w*o[c+S]+x*o[l+S]+b*o[u+S];return r}}class Kb extends ma{constructor(t,e,n,s){super(t,e,n,s)}interpolate_(t,e,n,s){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=t*a,c=l-a,h=(n-e)/(s-e),u=1-h;for(let f=0;f!==a;++f)r[f]=o[c+f]*u+o[l+f]*h;return r}}class Jb extends ma{constructor(t,e,n,s){super(t,e,n,s)}interpolate_(t){return this.copySampleValue_(t-1)}}class Bn{constructor(t,e,n,s){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Lo(e,this.TimeBufferType),this.values=Lo(n,this.ValueBufferType),this.setInterpolation(s||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:Lo(t.times,Array),values:Lo(t.values,Array)};const s=t.getInterpolation();s!==t.DefaultInterpolation&&(n.interpolation=s)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new Jb(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new Kb(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Zb(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case jo:e=this.InterpolantFactoryMethodDiscrete;break;case qo:e=this.InterpolantFactoryMethodLinear;break;case Ua:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return jo;case this.InterpolantFactoryMethodLinear:return qo;case this.InterpolantFactoryMethodSmooth:return Ua}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let n=0,s=e.length;n!==s;++n)e[n]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let n=0,s=e.length;n!==s;++n)e[n]*=t}return this}trim(t,e){const n=this.times,s=n.length;let r=0,o=s-1;for(;r!==s&&n[r]<t;)++r;for(;o!==-1&&n[o]>e;)--o;if(++o,r!==0||o!==s){r>=o&&(o=Math.max(o,1),r=o-1);const a=this.getValueSize();this.times=di(n,r,o),this.values=di(this.values,r*a,o*a)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,s=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let o=null;for(let a=0;a!==r;a++){const l=n[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),t=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),t=!1;break}o=l}if(s!==void 0&&qp(s))for(let a=0,l=s.length;a!==l;++a){const c=s[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),t=!1;break}}return t}optimize(){const t=di(this.times),e=di(this.values),n=this.getValueSize(),s=this.getInterpolation()===Ua,r=t.length-1;let o=1;for(let a=1;a<r;++a){let l=!1;const c=t[a],h=t[a+1];if(c!==h&&(a!==1||c!==t[0]))if(s)l=!0;else{const u=a*n,f=u-n,d=u+n;for(let g=0;g!==n;++g){const p=e[u+g];if(p!==e[f+g]||p!==e[d+g]){l=!0;break}}}if(l){if(a!==o){t[o]=t[a];const u=a*n,f=o*n;for(let d=0;d!==n;++d)e[f+d]=e[u+d]}++o}}if(r>0){t[o]=t[r];for(let a=r*n,l=o*n,c=0;c!==n;++c)e[l+c]=e[a+c];++o}return o!==t.length?(this.times=di(t,0,o),this.values=di(e,0,o*n)):(this.times=t,this.values=e),this}clone(){const t=di(this.times,0),e=di(this.values,0),n=this.constructor,s=new n(this.name,t,e);return s.createInterpolant=this.createInterpolant,s}}Bn.prototype.TimeBufferType=Float32Array;Bn.prototype.ValueBufferType=Float32Array;Bn.prototype.DefaultInterpolation=qo;class Zs extends Bn{}Zs.prototype.ValueTypeName="bool";Zs.prototype.ValueBufferType=Array;Zs.prototype.DefaultInterpolation=jo;Zs.prototype.InterpolantFactoryMethodLinear=void 0;Zs.prototype.InterpolantFactoryMethodSmooth=void 0;class $p extends Bn{}$p.prototype.ValueTypeName="color";class Vr extends Bn{}Vr.prototype.ValueTypeName="number";class Qb extends ma{constructor(t,e,n,s){super(t,e,n,s)}interpolate_(t,e,n,s){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(n-e)/(s-e);let c=t*a;for(let h=c+a;c!==h;c+=4)mn.slerpFlat(r,0,o,c-a,o,c,l);return r}}class Ks extends Bn{InterpolantFactoryMethodLinear(t){return new Qb(this.times,this.values,this.getValueSize(),t)}}Ks.prototype.ValueTypeName="quaternion";Ks.prototype.DefaultInterpolation=qo;Ks.prototype.InterpolantFactoryMethodSmooth=void 0;class Js extends Bn{}Js.prototype.ValueTypeName="string";Js.prototype.ValueBufferType=Array;Js.prototype.DefaultInterpolation=jo;Js.prototype.InterpolantFactoryMethodLinear=void 0;Js.prototype.InterpolantFactoryMethodSmooth=void 0;class Gr extends Bn{}Gr.prototype.ValueTypeName="vector";class tS{constructor(t,e=-1,n,s=qx){this.name=t,this.tracks=n,this.duration=e,this.blendMode=s,this.uuid=si(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,s=1/(t.fps||1);for(let o=0,a=n.length;o!==a;++o)e.push(nS(n[o]).scale(s));const r=new this(t.name,t.duration,e,t.blendMode);return r.uuid=t.uuid,r}static toJSON(t){const e=[],n=t.tracks,s={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let r=0,o=n.length;r!==o;++r)e.push(Bn.toJSON(n[r]));return s}static CreateFromMorphTargetSequence(t,e,n,s){const r=e.length,o=[];for(let a=0;a<r;a++){let l=[],c=[];l.push((a+r-1)%r,a,(a+1)%r),c.push(0,1,0);const h=$b(l);l=Mf(l,1,h),c=Mf(c,1,h),!s&&l[0]===0&&(l.push(r),c.push(c[0])),o.push(new Vr(".morphTargetInfluences["+e[a].name+"]",l,c).scale(1/n))}return new this(t,-1,o)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const s=t;n=s.geometry&&s.geometry.animations||s.animations}for(let s=0;s<n.length;s++)if(n[s].name===e)return n[s];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const s={},r=/^([\w-]*?)([\d]+)$/;for(let a=0,l=t.length;a<l;a++){const c=t[a],h=c.name.match(r);if(h&&h.length>1){const u=h[1];let f=s[u];f||(s[u]=f=[]),f.push(c)}}const o=[];for(const a in s)o.push(this.CreateFromMorphTargetSequence(a,s[a],e,n));return o}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(u,f,d,g,p){if(d.length!==0){const m=[],_=[];Yp(d,m,_,g),m.length!==0&&p.push(new u(f,m,_))}},s=[],r=t.name||"default",o=t.fps||30,a=t.blendMode;let l=t.length||-1;const c=t.hierarchy||[];for(let u=0;u<c.length;u++){const f=c[u].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const d={};let g;for(g=0;g<f.length;g++)if(f[g].morphTargets)for(let p=0;p<f[g].morphTargets.length;p++)d[f[g].morphTargets[p]]=-1;for(const p in d){const m=[],_=[];for(let w=0;w!==f[g].morphTargets.length;++w){const x=f[g];m.push(x.time),_.push(x.morphTarget===p?1:0)}s.push(new Vr(".morphTargetInfluence["+p+"]",m,_))}l=d.length*o}else{const d=".bones["+e[u].name+"]";n(Gr,d+".position",f,"pos",s),n(Ks,d+".quaternion",f,"rot",s),n(Gr,d+".scale",f,"scl",s)}}return s.length===0?null:new this(r,l,s,a)}resetDuration(){const t=this.tracks;let e=0;for(let n=0,s=t.length;n!==s;++n){const r=this.tracks[n];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function eS(i){switch(i.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Vr;case"vector":case"vector2":case"vector3":case"vector4":return Gr;case"color":return $p;case"quaternion":return Ks;case"bool":case"boolean":return Zs;case"string":return Js}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+i)}function nS(i){if(i.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=eS(i.type);if(i.times===void 0){const e=[],n=[];Yp(i.keys,e,n,"value"),i.times=e,i.values=n}return t.parse!==void 0?t.parse(i):new t(i.name,i.times,i.values,i.interpolation)}const $o={enabled:!1,files:{},add:function(i,t){this.enabled!==!1&&(this.files[i]=t)},get:function(i){if(this.enabled!==!1)return this.files[i]},remove:function(i){delete this.files[i]},clear:function(){this.files={}}};class iS{constructor(t,e,n){const s=this;let r=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(h){a++,r===!1&&s.onStart!==void 0&&s.onStart(h,o,a),r=!0},this.itemEnd=function(h){o++,s.onProgress!==void 0&&s.onProgress(h,o,a),o===a&&(r=!1,s.onLoad!==void 0&&s.onLoad())},this.itemError=function(h){s.onError!==void 0&&s.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,u){return c.push(h,u),this},this.removeHandler=function(h){const u=c.indexOf(h);return u!==-1&&c.splice(u,2),this},this.getHandler=function(h){for(let u=0,f=c.length;u<f;u+=2){const d=c[u],g=c[u+1];if(d.global&&(d.lastIndex=0),d.test(h))return g}return null}}}const sS=new iS;class Yr{constructor(t){this.manager=t!==void 0?t:sS,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(s,r){n.load(t,s,e,r)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const $n={};class rS extends Error{constructor(t,e){super(t),this.response=e}}class Zp extends Yr{constructor(t){super(t)}load(t,e,n,s){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=$o.get(t);if(r!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(r),this.manager.itemEnd(t)},0),r;if($n[t]!==void 0){$n[t].push({onLoad:e,onProgress:n,onError:s});return}$n[t]=[],$n[t].push({onLoad:e,onProgress:n,onError:s});const o=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const h=$n[t],u=c.body.getReader(),f=c.headers.get("Content-Length")||c.headers.get("X-File-Size"),d=f?parseInt(f):0,g=d!==0;let p=0;const m=new ReadableStream({start(_){w();function w(){u.read().then(({done:x,value:b})=>{if(x)_.close();else{p+=b.byteLength;const S=new ProgressEvent("progress",{lengthComputable:g,loaded:p,total:d});for(let C=0,D=h.length;C<D;C++){const y=h[C];y.onProgress&&y.onProgress(S)}_.enqueue(b),w()}})}}});return new Response(m)}else throw new rS(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,a));case"json":return c.json();default:if(a===void 0)return c.text();{const u=/charset="?([^;"\s]*)"?/i.exec(a),f=u&&u[1]?u[1].toLowerCase():void 0,d=new TextDecoder(f);return c.arrayBuffer().then(g=>d.decode(g))}}}).then(c=>{$o.add(t,c);const h=$n[t];delete $n[t];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onLoad&&d.onLoad(c)}}).catch(c=>{const h=$n[t];if(h===void 0)throw this.manager.itemError(t),c;delete $n[t];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onError&&d.onError(c)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class oS extends Yr{constructor(t){super(t)}load(t,e,n,s){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,o=$o.get(t);if(o!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(o),r.manager.itemEnd(t)},0),o;const a=kr("img");function l(){h(),$o.add(t,this),e&&e(this),r.manager.itemEnd(t)}function c(u){h(),s&&s(u),r.manager.itemError(t),r.manager.itemEnd(t)}function h(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(t),a.src=t,a}}class Qs extends Yr{constructor(t){super(t)}load(t,e,n,s){const r=new Re,o=new oS(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,function(a){r.image=a,r.needsUpdate=!0,e!==void 0&&e(r)},n,s),r}}class ga extends ae{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Ct(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}}const _l=new Dt,bf=new I,Sf=new I;class Gc{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new xt(512,512),this.map=null,this.mapPass=null,this.matrix=new Dt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Rc,this._frameExtents=new xt(1,1),this._viewportCount=1,this._viewports=[new ne(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;bf.setFromMatrixPosition(t.matrixWorld),e.position.copy(bf),Sf.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Sf),e.updateMatrixWorld(),_l.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(_l),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(_l)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class aS extends Gc{constructor(){super(new Ge(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(t){const e=this.camera,n=Nr*2*t.angle*this.focus,s=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;(n!==e.fov||s!==e.aspect||r!==e.far)&&(e.fov=n,e.aspect=s,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class lS extends ga{constructor(t,e,n=0,s=Math.PI/3,r=0,o=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(ae.DEFAULT_UP),this.updateMatrix(),this.target=new ae,this.distance=n,this.angle=s,this.penumbra=r,this.decay=o,this.map=null,this.shadow=new aS}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const Tf=new Dt,cr=new I,xl=new I;class cS extends Gc{constructor(){super(new Ge(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new xt(4,2),this._viewportCount=6,this._viewports=[new ne(2,1,1,1),new ne(0,1,1,1),new ne(3,1,1,1),new ne(1,1,1,1),new ne(3,0,1,1),new ne(1,0,1,1)],this._cubeDirections=[new I(1,0,0),new I(-1,0,0),new I(0,0,1),new I(0,0,-1),new I(0,1,0),new I(0,-1,0)],this._cubeUps=[new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,0,1),new I(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,s=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),cr.setFromMatrixPosition(t.matrixWorld),n.position.copy(cr),xl.copy(n.position),xl.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(xl),n.updateMatrixWorld(),s.makeTranslation(-cr.x,-cr.y,-cr.z),Tf.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Tf)}}class ec extends ga{constructor(t,e,n=0,s=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=s,this.shadow=new cS}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class hS extends Gc{constructor(){super(new Ic(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class uS extends ga{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(ae.DEFAULT_UP),this.updateMatrix(),this.target=new ae,this.shadow=new hS}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class Kp extends ga{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class fS{static decodeText(t){if(typeof TextDecoder<"u")return new TextDecoder().decode(t);let e="";for(let n=0,s=t.length;n<s;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch{return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.slice(0,e+1)}static resolveURL(t,e){return typeof t!="string"||t===""?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class Wc{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Ef(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=Ef();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function Ef(){return(typeof performance>"u"?Date:performance).now()}const Xc="\\[\\]\\.:\\/",dS=new RegExp("["+Xc+"]","g"),jc="[^"+Xc+"]",pS="[^"+Xc.replace("\\.","")+"]",mS=/((?:WC+[\/:])*)/.source.replace("WC",jc),gS=/(WCOD+)?/.source.replace("WCOD",pS),_S=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",jc),xS=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",jc),yS=new RegExp("^"+mS+gS+_S+xS+"$"),vS=["material","materials","bones","map"];class wS{constructor(t,e,n){const s=n||te.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,s)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,s=this._bindings[n];s!==void 0&&s.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let s=this._targetGroup.nCachedObjects_,r=n.length;s!==r;++s)n[s].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class te{constructor(t,e,n){this.path=e,this.parsedPath=n||te.parseTrackName(e),this.node=te.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new te.Composite(t,e,n):new te(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(dS,"")}static parseTrackName(t){const e=yS.exec(t);if(e===null)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},s=n.nodeName&&n.nodeName.lastIndexOf(".");if(s!==void 0&&s!==-1){const r=n.nodeName.substring(s+1);vS.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,s),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(e===void 0||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(r){for(let o=0;o<r.length;o++){const a=r[o];if(a.name===e||a.uuid===e)return a;const l=n(a.children);if(l)return l}return null},s=n(t.children);if(s)return s}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)t[e++]=n[s]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)n[s]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)n[s]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)n[s]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,s=e.propertyName;let r=e.propertyIndex;if(t||(t=te.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let c=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let h=0;h<t.length;h++)if(t[h].name===c){c=h;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(c!==void 0){if(t[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[c]}}const o=t[s];if(o===void 0){const c=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+s+" but it wasn't found.",t);return}let a=this.Versioning.None;this.targetObject=t,t.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:t.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(r!==void 0){if(s==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[r]!==void 0&&(r=t.morphTargetDictionary[r])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=s;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}te.Composite=wS;te.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};te.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};te.prototype.GetterByBindingType=[te.prototype._getValue_direct,te.prototype._getValue_array,te.prototype._getValue_arrayElement,te.prototype._getValue_toArray];te.prototype.SetterByBindingTypeAndVersioning=[[te.prototype._setValue_direct,te.prototype._setValue_direct_setNeedsUpdate,te.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[te.prototype._setValue_array,te.prototype._setValue_array_setNeedsUpdate,te.prototype._setValue_array_setMatrixWorldNeedsUpdate],[te.prototype._setValue_arrayElement,te.prototype._setValue_arrayElement_setNeedsUpdate,te.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[te.prototype._setValue_fromArray,te.prototype._setValue_fromArray_setNeedsUpdate,te.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class MS{constructor(t,e,n=0,s=1/0){this.ray=new fa(t,e),this.near=n,this.far=s,this.camera=null,this.layers=new Cc,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!0,n=[]){return nc(t,this,n,e),n.sort(Af),n}intersectObjects(t,e=!0,n=[]){for(let s=0,r=t.length;s<r;s++)nc(t[s],this,n,e);return n.sort(Af),n}}function Af(i,t){return i.distance-t.distance}function nc(i,t,e,n){if(i.layers.test(t.layers)&&i.raycast(t,e),n===!0){const s=i.children;for(let r=0,o=s.length;r<o;r++)nc(s[r],t,e,!0)}}class Pf{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(Ce(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class bS{constructor(){this.type="ShapePath",this.color=new Ct,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Jl,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,s){return this.currentPath.quadraticCurveTo(t,e,n,s),this}bezierCurveTo(t,e,n,s,r,o){return this.currentPath.bezierCurveTo(t,e,n,s,r,o),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(_){const w=[];for(let x=0,b=_.length;x<b;x++){const S=_[x],C=new fe;C.curves=S.curves,w.push(C)}return w}function n(_,w){const x=w.length;let b=!1;for(let S=x-1,C=0;C<x;S=C++){let D=w[S],y=w[C],A=y.x-D.x,R=y.y-D.y;if(Math.abs(R)>Number.EPSILON){if(R<0&&(D=w[C],A=-A,y=w[S],R=-R),_.y<D.y||_.y>y.y)continue;if(_.y===D.y){if(_.x===D.x)return!0}else{const j=R*(_.x-D.x)-A*(_.y-D.y);if(j===0)return!0;if(j<0)continue;b=!b}}else{if(_.y!==D.y)continue;if(y.x<=_.x&&_.x<=D.x||D.x<=_.x&&_.x<=y.x)return!0}}return b}const s=ti.isClockWise,r=this.subPaths;if(r.length===0)return[];let o,a,l;const c=[];if(r.length===1)return a=r[0],l=new fe,l.curves=a.curves,c.push(l),c;let h=!s(r[0].getPoints());h=t?!h:h;const u=[],f=[];let d=[],g=0,p;f[g]=void 0,d[g]=[];for(let _=0,w=r.length;_<w;_++)a=r[_],p=a.getPoints(),o=s(p),o=t?!o:o,o?(!h&&f[g]&&g++,f[g]={s:new fe,p},f[g].s.curves=a.curves,h&&g++,d[g]=[]):d[g].push({h:a,p:p[0]});if(!f[0])return e(r);if(f.length>1){let _=!1,w=0;for(let x=0,b=f.length;x<b;x++)u[x]=[];for(let x=0,b=f.length;x<b;x++){const S=d[x];for(let C=0;C<S.length;C++){const D=S[C];let y=!0;for(let A=0;A<f.length;A++)n(D.p,f[A].p)&&(x!==A&&w++,y?(y=!1,u[A].push(D)):_=!0);y&&u[x].push(D)}}w>0&&_===!1&&(d=u)}let m;for(let _=0,w=f.length;_<w;_++){l=f[_].s,c.push(l),m=d[_];for(let x=0,b=m.length;x<b;x++)l.holes.push(m[x].h)}return c}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Ac}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Ac);var Uo={Linear:{None:function(i){return i}},Quadratic:{In:function(i){return i*i},Out:function(i){return i*(2-i)},InOut:function(i){return(i*=2)<1?.5*i*i:-.5*(--i*(i-2)-1)}},Cubic:{In:function(i){return i*i*i},Out:function(i){return--i*i*i+1},InOut:function(i){return(i*=2)<1?.5*i*i*i:.5*((i-=2)*i*i+2)}},Quartic:{In:function(i){return i*i*i*i},Out:function(i){return 1- --i*i*i*i},InOut:function(i){return(i*=2)<1?.5*i*i*i*i:-.5*((i-=2)*i*i*i-2)}},Quintic:{In:function(i){return i*i*i*i*i},Out:function(i){return--i*i*i*i*i+1},InOut:function(i){return(i*=2)<1?.5*i*i*i*i*i:.5*((i-=2)*i*i*i*i+2)}},Sinusoidal:{In:function(i){return 1-Math.cos(i*Math.PI/2)},Out:function(i){return Math.sin(i*Math.PI/2)},InOut:function(i){return .5*(1-Math.cos(Math.PI*i))}},Exponential:{In:function(i){return i===0?0:Math.pow(1024,i-1)},Out:function(i){return i===1?1:1-Math.pow(2,-10*i)},InOut:function(i){return i===0?0:i===1?1:(i*=2)<1?.5*Math.pow(1024,i-1):.5*(-Math.pow(2,-10*(i-1))+2)}},Circular:{In:function(i){return 1-Math.sqrt(1-i*i)},Out:function(i){return Math.sqrt(1- --i*i)},InOut:function(i){return(i*=2)<1?-.5*(Math.sqrt(1-i*i)-1):.5*(Math.sqrt(1-(i-=2)*i)+1)}},Elastic:{In:function(i){return i===0?0:i===1?1:-Math.pow(2,10*(i-1))*Math.sin((i-1.1)*5*Math.PI)},Out:function(i){return i===0?0:i===1?1:Math.pow(2,-10*i)*Math.sin((i-.1)*5*Math.PI)+1},InOut:function(i){return i===0?0:i===1?1:(i*=2,i<1?-.5*Math.pow(2,10*(i-1))*Math.sin((i-1.1)*5*Math.PI):.5*Math.pow(2,-10*(i-1))*Math.sin((i-1.1)*5*Math.PI)+1)}},Back:{In:function(i){var t=1.70158;return i*i*((t+1)*i-t)},Out:function(i){var t=1.70158;return--i*i*((t+1)*i+t)+1},InOut:function(i){var t=2.5949095;return(i*=2)<1?.5*(i*i*((t+1)*i-t)):.5*((i-=2)*i*((t+1)*i+t)+2)}},Bounce:{In:function(i){return 1-Uo.Bounce.Out(1-i)},Out:function(i){return i<1/2.75?7.5625*i*i:i<2/2.75?7.5625*(i-=1.5/2.75)*i+.75:i<2.5/2.75?7.5625*(i-=2.25/2.75)*i+.9375:7.5625*(i-=2.625/2.75)*i+.984375},InOut:function(i){return i<.5?Uo.Bounce.In(i*2)*.5:Uo.Bounce.Out(i*2-1)*.5+.5}}},gr;typeof self>"u"&&typeof process<"u"&&process.hrtime?gr=function(){var i=process.hrtime();return i[0]*1e3+i[1]/1e6}:typeof self<"u"&&self.performance!==void 0&&self.performance.now!==void 0?gr=self.performance.now.bind(self.performance):Date.now!==void 0?gr=Date.now:gr=function(){return new Date().getTime()};var Ss=gr,SS=function(){function i(){this._tweens={},this._tweensAddedDuringUpdate={}}return i.prototype.getAll=function(){var t=this;return Object.keys(this._tweens).map(function(e){return t._tweens[e]})},i.prototype.removeAll=function(){this._tweens={}},i.prototype.add=function(t){this._tweens[t.getId()]=t,this._tweensAddedDuringUpdate[t.getId()]=t},i.prototype.remove=function(t){delete this._tweens[t.getId()],delete this._tweensAddedDuringUpdate[t.getId()]},i.prototype.update=function(t,e){t===void 0&&(t=Ss()),e===void 0&&(e=!1);var n=Object.keys(this._tweens);if(n.length===0)return!1;for(;n.length>0;){this._tweensAddedDuringUpdate={};for(var s=0;s<n.length;s++){var r=this._tweens[n[s]],o=!e;r&&r.update(t,o)===!1&&!e&&delete this._tweens[n[s]]}n=Object.keys(this._tweensAddedDuringUpdate)}return!0},i}(),_r={Linear:function(i,t){var e=i.length-1,n=e*t,s=Math.floor(n),r=_r.Utils.Linear;return t<0?r(i[0],i[1],n):t>1?r(i[e],i[e-1],e-n):r(i[s],i[s+1>e?e:s+1],n-s)},Bezier:function(i,t){for(var e=0,n=i.length-1,s=Math.pow,r=_r.Utils.Bernstein,o=0;o<=n;o++)e+=s(1-t,n-o)*s(t,o)*i[o]*r(n,o);return e},CatmullRom:function(i,t){var e=i.length-1,n=e*t,s=Math.floor(n),r=_r.Utils.CatmullRom;return i[0]===i[e]?(t<0&&(s=Math.floor(n=e*(1+t))),r(i[(s-1+e)%e],i[s],i[(s+1)%e],i[(s+2)%e],n-s)):t<0?i[0]-(r(i[0],i[0],i[1],i[1],-n)-i[0]):t>1?i[e]-(r(i[e],i[e],i[e-1],i[e-1],n-e)-i[e]):r(i[s?s-1:0],i[s],i[e<s+1?e:s+1],i[e<s+2?e:s+2],n-s)},Utils:{Linear:function(i,t,e){return(t-i)*e+i},Bernstein:function(i,t){var e=_r.Utils.Factorial;return e(i)/e(t)/e(i-t)},Factorial:function(){var i=[1];return function(t){var e=1;if(i[t])return i[t];for(var n=t;n>1;n--)e*=n;return i[t]=e,e}}(),CatmullRom:function(i,t,e,n,s){var r=(e-i)*.5,o=(n-t)*.5,a=s*s,l=s*a;return(2*t-2*e+r+o)*l+(-3*t+3*e-2*r-o)*a+r*s+t}}},TS=function(){function i(){}return i.nextId=function(){return i._nextId++},i._nextId=0,i}(),Jp=new SS,It=function(){function i(t,e){e===void 0&&(e=Jp),this._object=t,this._group=e,this._isPaused=!1,this._pauseStart=0,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._initialRepeat=0,this._repeat=0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=0,this._easingFunction=Uo.Linear.None,this._interpolationFunction=_r.Linear,this._chainedTweens=[],this._onStartCallbackFired=!1,this._id=TS.nextId(),this._isChainStopped=!1,this._goToEnd=!1}return i.prototype.getId=function(){return this._id},i.prototype.isPlaying=function(){return this._isPlaying},i.prototype.isPaused=function(){return this._isPaused},i.prototype.to=function(t,e){return this._valuesEnd=Object.create(t),e!==void 0&&(this._duration=e),this},i.prototype.duration=function(t){return this._duration=t,this},i.prototype.start=function(t){if(this._isPlaying)return this;if(this._group&&this._group.add(this),this._repeat=this._initialRepeat,this._reversed){this._reversed=!1;for(var e in this._valuesStartRepeat)this._swapEndStartRepeatValues(e),this._valuesStart[e]=this._valuesStartRepeat[e]}return this._isPlaying=!0,this._isPaused=!1,this._onStartCallbackFired=!1,this._isChainStopped=!1,this._startTime=t!==void 0?typeof t=="string"?Ss()+parseFloat(t):t:Ss(),this._startTime+=this._delayTime,this._setupProperties(this._object,this._valuesStart,this._valuesEnd,this._valuesStartRepeat),this},i.prototype._setupProperties=function(t,e,n,s){for(var r in n){var o=t[r],a=Array.isArray(o),l=a?"array":typeof o,c=!a&&Array.isArray(n[r]);if(!(l==="undefined"||l==="function")){if(c){var h=n[r];if(h.length===0)continue;h=h.map(this._handleRelativeValue.bind(this,o)),n[r]=[o].concat(h)}if((l==="object"||a)&&o&&!c){e[r]=a?[]:{};for(var u in o)e[r][u]=o[u];s[r]=a?[]:{},this._setupProperties(o,e[r],n[r],s[r])}else typeof e[r]>"u"&&(e[r]=o),a||(e[r]*=1),c?s[r]=n[r].slice().reverse():s[r]=e[r]||0}}},i.prototype.stop=function(){return this._isChainStopped||(this._isChainStopped=!0,this.stopChainedTweens()),this._isPlaying?(this._group&&this._group.remove(this),this._isPlaying=!1,this._isPaused=!1,this._onStopCallback&&this._onStopCallback(this._object),this):this},i.prototype.end=function(){return this._goToEnd=!0,this.update(1/0),this},i.prototype.pause=function(t){return t===void 0&&(t=Ss()),this._isPaused||!this._isPlaying?this:(this._isPaused=!0,this._pauseStart=t,this._group&&this._group.remove(this),this)},i.prototype.resume=function(t){return t===void 0&&(t=Ss()),!this._isPaused||!this._isPlaying?this:(this._isPaused=!1,this._startTime+=t-this._pauseStart,this._pauseStart=0,this._group&&this._group.add(this),this)},i.prototype.stopChainedTweens=function(){for(var t=0,e=this._chainedTweens.length;t<e;t++)this._chainedTweens[t].stop();return this},i.prototype.group=function(t){return this._group=t,this},i.prototype.delay=function(t){return this._delayTime=t,this},i.prototype.repeat=function(t){return this._initialRepeat=t,this._repeat=t,this},i.prototype.repeatDelay=function(t){return this._repeatDelayTime=t,this},i.prototype.yoyo=function(t){return this._yoyo=t,this},i.prototype.easing=function(t){return this._easingFunction=t,this},i.prototype.interpolation=function(t){return this._interpolationFunction=t,this},i.prototype.chain=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return this._chainedTweens=t,this},i.prototype.onStart=function(t){return this._onStartCallback=t,this},i.prototype.onUpdate=function(t){return this._onUpdateCallback=t,this},i.prototype.onRepeat=function(t){return this._onRepeatCallback=t,this},i.prototype.onComplete=function(t){return this._onCompleteCallback=t,this},i.prototype.onStop=function(t){return this._onStopCallback=t,this},i.prototype.update=function(t,e){if(t===void 0&&(t=Ss()),e===void 0&&(e=!0),this._isPaused)return!0;var n,s,r=this._startTime+this._duration;if(!this._goToEnd&&!this._isPlaying){if(t>r)return!1;e&&this.start(t)}if(this._goToEnd=!1,t<this._startTime)return!0;this._onStartCallbackFired===!1&&(this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),s=(t-this._startTime)/this._duration,s=this._duration===0||s>1?1:s;var o=this._easingFunction(s);if(this._updateProperties(this._object,this._valuesStart,this._valuesEnd,o),this._onUpdateCallback&&this._onUpdateCallback(this._object,s),s===1)if(this._repeat>0){isFinite(this._repeat)&&this._repeat--;for(n in this._valuesStartRepeat)!this._yoyo&&typeof this._valuesEnd[n]=="string"&&(this._valuesStartRepeat[n]=this._valuesStartRepeat[n]+parseFloat(this._valuesEnd[n])),this._yoyo&&this._swapEndStartRepeatValues(n),this._valuesStart[n]=this._valuesStartRepeat[n];return this._yoyo&&(this._reversed=!this._reversed),this._repeatDelayTime!==void 0?this._startTime=t+this._repeatDelayTime:this._startTime=t+this._delayTime,this._onRepeatCallback&&this._onRepeatCallback(this._object),!0}else{this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var a=0,l=this._chainedTweens.length;a<l;a++)this._chainedTweens[a].start(this._startTime+this._duration);return this._isPlaying=!1,!1}return!0},i.prototype._updateProperties=function(t,e,n,s){for(var r in n)if(e[r]!==void 0){var o=e[r]||0,a=n[r],l=Array.isArray(t[r]),c=Array.isArray(a),h=!l&&c;h?t[r]=this._interpolationFunction(a,s):typeof a=="object"&&a?this._updateProperties(t[r],o,a,s):(a=this._handleRelativeValue(o,a),typeof a=="number"&&(t[r]=o+(a-o)*s))}},i.prototype._handleRelativeValue=function(t,e){return typeof e!="string"?e:e.charAt(0)==="+"||e.charAt(0)==="-"?t+parseFloat(e):parseFloat(e)},i.prototype._swapEndStartRepeatValues=function(t){var e=this._valuesStartRepeat[t],n=this._valuesEnd[t];typeof n=="string"?this._valuesStartRepeat[t]=this._valuesStartRepeat[t]+parseFloat(n):this._valuesStartRepeat[t]=this._valuesEnd[t],this._valuesEnd[t]=e},i}(),Un=Jp;Un.getAll.bind(Un);Un.removeAll.bind(Un);Un.add.bind(Un);Un.remove.bind(Un);var Qp=Un.update.bind(Un);const Cf={type:"change"},yl={type:"start"},Lf={type:"end"};class ES extends Ji{constructor(t,e){super(),this.object=t,this.domElement=e,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new I,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:es.ROTATE,MIDDLE:es.DOLLY,RIGHT:es.PAN},this.touches={ONE:ns.ROTATE,TWO:ns.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(L){L.addEventListener("keydown",nt),this._domElementKeyEvents=L},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(Cf),n.update(),r=s.NONE},this.update=function(){const L=new I,G=new mn().setFromUnitVectors(t.up,new I(0,1,0)),bt=G.clone().invert(),At=new I,Tt=new mn,Lt=2*Math.PI;return function(){const Ft=n.object.position;L.copy(Ft).sub(n.target),L.applyQuaternion(G),a.setFromVector3(L),n.autoRotate&&r===s.NONE&&A(D()),n.enableDamping?(a.theta+=l.theta*n.dampingFactor,a.phi+=l.phi*n.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let Vt=n.minAzimuthAngle,oe=n.maxAzimuthAngle;return isFinite(Vt)&&isFinite(oe)&&(Vt<-Math.PI?Vt+=Lt:Vt>Math.PI&&(Vt-=Lt),oe<-Math.PI?oe+=Lt:oe>Math.PI&&(oe-=Lt),Vt<=oe?a.theta=Math.max(Vt,Math.min(oe,a.theta)):a.theta=a.theta>(Vt+oe)/2?Math.max(Vt,a.theta):Math.min(oe,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=c,a.radius=Math.max(n.minDistance,Math.min(n.maxDistance,a.radius)),n.enableDamping===!0?n.target.addScaledVector(h,n.dampingFactor):n.target.add(h),L.setFromSpherical(a),L.applyQuaternion(bt),Ft.copy(n.target).add(L),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,h.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),h.set(0,0,0)),c=1,u||At.distanceToSquared(n.object.position)>o||8*(1-Tt.dot(n.object.quaternion))>o?(n.dispatchEvent(Cf),At.copy(n.object.position),Tt.copy(n.object.quaternion),u=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",k),n.domElement.removeEventListener("pointerdown",z),n.domElement.removeEventListener("pointercancel",et),n.domElement.removeEventListener("wheel",ut),n.domElement.removeEventListener("pointermove",V),n.domElement.removeEventListener("pointerup",B),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",nt)};const n=this,s={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=s.NONE;const o=1e-6,a=new Pf,l=new Pf;let c=1;const h=new I;let u=!1;const f=new xt,d=new xt,g=new xt,p=new xt,m=new xt,_=new xt,w=new xt,x=new xt,b=new xt,S=[],C={};function D(){return 2*Math.PI/60/60*n.autoRotateSpeed}function y(){return Math.pow(.95,n.zoomSpeed)}function A(L){l.theta-=L}function R(L){l.phi-=L}const j=function(){const L=new I;return function(bt,At){L.setFromMatrixColumn(At,0),L.multiplyScalar(-bt),h.add(L)}}(),Q=function(){const L=new I;return function(bt,At){n.screenSpacePanning===!0?L.setFromMatrixColumn(At,1):(L.setFromMatrixColumn(At,0),L.crossVectors(n.object.up,L)),L.multiplyScalar(bt),h.add(L)}}(),U=function(){const L=new I;return function(bt,At){const Tt=n.domElement;if(n.object.isPerspectiveCamera){const Lt=n.object.position;L.copy(Lt).sub(n.target);let Et=L.length();Et*=Math.tan(n.object.fov/2*Math.PI/180),j(2*bt*Et/Tt.clientHeight,n.object.matrix),Q(2*At*Et/Tt.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(j(bt*(n.object.right-n.object.left)/n.object.zoom/Tt.clientWidth,n.object.matrix),Q(At*(n.object.top-n.object.bottom)/n.object.zoom/Tt.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function O(L){n.object.isPerspectiveCamera?c/=L:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*L)),n.object.updateProjectionMatrix(),u=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function J(L){n.object.isPerspectiveCamera?c*=L:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/L)),n.object.updateProjectionMatrix(),u=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function Z(L){f.set(L.clientX,L.clientY)}function it(L){w.set(L.clientX,L.clientY)}function Y(L){p.set(L.clientX,L.clientY)}function ft(L){d.set(L.clientX,L.clientY),g.subVectors(d,f).multiplyScalar(n.rotateSpeed);const G=n.domElement;A(2*Math.PI*g.x/G.clientHeight),R(2*Math.PI*g.y/G.clientHeight),f.copy(d),n.update()}function dt(L){x.set(L.clientX,L.clientY),b.subVectors(x,w),b.y>0?O(y()):b.y<0&&J(y()),w.copy(x),n.update()}function vt(L){m.set(L.clientX,L.clientY),_.subVectors(m,p).multiplyScalar(n.panSpeed),U(_.x,_.y),p.copy(m),n.update()}function W(L){L.deltaY<0?J(y()):L.deltaY>0&&O(y()),n.update()}function ot(L){let G=!1;switch(L.code){case n.keys.UP:L.ctrlKey||L.metaKey||L.shiftKey?R(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):U(0,n.keyPanSpeed),G=!0;break;case n.keys.BOTTOM:L.ctrlKey||L.metaKey||L.shiftKey?R(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):U(0,-n.keyPanSpeed),G=!0;break;case n.keys.LEFT:L.ctrlKey||L.metaKey||L.shiftKey?A(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):U(n.keyPanSpeed,0),G=!0;break;case n.keys.RIGHT:L.ctrlKey||L.metaKey||L.shiftKey?A(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):U(-n.keyPanSpeed,0),G=!0;break}G&&(L.preventDefault(),n.update())}function yt(){if(S.length===1)f.set(S[0].pageX,S[0].pageY);else{const L=.5*(S[0].pageX+S[1].pageX),G=.5*(S[0].pageY+S[1].pageY);f.set(L,G)}}function N(){if(S.length===1)p.set(S[0].pageX,S[0].pageY);else{const L=.5*(S[0].pageX+S[1].pageX),G=.5*(S[0].pageY+S[1].pageY);p.set(L,G)}}function F(){const L=S[0].pageX-S[1].pageX,G=S[0].pageY-S[1].pageY,bt=Math.sqrt(L*L+G*G);w.set(0,bt)}function tt(){n.enableZoom&&F(),n.enablePan&&N()}function ct(){n.enableZoom&&F(),n.enableRotate&&yt()}function gt(L){if(S.length==1)d.set(L.pageX,L.pageY);else{const bt=Mt(L),At=.5*(L.pageX+bt.x),Tt=.5*(L.pageY+bt.y);d.set(At,Tt)}g.subVectors(d,f).multiplyScalar(n.rotateSpeed);const G=n.domElement;A(2*Math.PI*g.x/G.clientHeight),R(2*Math.PI*g.y/G.clientHeight),f.copy(d)}function pt(L){if(S.length===1)m.set(L.pageX,L.pageY);else{const G=Mt(L),bt=.5*(L.pageX+G.x),At=.5*(L.pageY+G.y);m.set(bt,At)}_.subVectors(m,p).multiplyScalar(n.panSpeed),U(_.x,_.y),p.copy(m)}function wt(L){const G=Mt(L),bt=L.pageX-G.x,At=L.pageY-G.y,Tt=Math.sqrt(bt*bt+At*At);x.set(0,Tt),b.set(0,Math.pow(x.y/w.y,n.zoomSpeed)),O(b.y),w.copy(x)}function v(L){n.enableZoom&&wt(L),n.enablePan&&pt(L)}function T(L){n.enableZoom&&wt(L),n.enableRotate&&gt(L)}function z(L){n.enabled!==!1&&(S.length===0&&(n.domElement.setPointerCapture(L.pointerId),n.domElement.addEventListener("pointermove",V),n.domElement.addEventListener("pointerup",B)),K(L),L.pointerType==="touch"?E(L):st(L))}function V(L){n.enabled!==!1&&(L.pointerType==="touch"?M(L):$(L))}function B(L){rt(L),S.length===0&&(n.domElement.releasePointerCapture(L.pointerId),n.domElement.removeEventListener("pointermove",V),n.domElement.removeEventListener("pointerup",B)),n.dispatchEvent(Lf),r=s.NONE}function et(L){rt(L)}function st(L){let G;switch(L.button){case 0:G=n.mouseButtons.LEFT;break;case 1:G=n.mouseButtons.MIDDLE;break;case 2:G=n.mouseButtons.RIGHT;break;default:G=-1}switch(G){case es.DOLLY:if(n.enableZoom===!1)return;it(L),r=s.DOLLY;break;case es.ROTATE:if(L.ctrlKey||L.metaKey||L.shiftKey){if(n.enablePan===!1)return;Y(L),r=s.PAN}else{if(n.enableRotate===!1)return;Z(L),r=s.ROTATE}break;case es.PAN:if(L.ctrlKey||L.metaKey||L.shiftKey){if(n.enableRotate===!1)return;Z(L),r=s.ROTATE}else{if(n.enablePan===!1)return;Y(L),r=s.PAN}break;default:r=s.NONE}r!==s.NONE&&n.dispatchEvent(yl)}function $(L){switch(r){case s.ROTATE:if(n.enableRotate===!1)return;ft(L);break;case s.DOLLY:if(n.enableZoom===!1)return;dt(L);break;case s.PAN:if(n.enablePan===!1)return;vt(L);break}}function ut(L){n.enabled===!1||n.enableZoom===!1||r!==s.NONE||(L.preventDefault(),n.dispatchEvent(yl),W(L),n.dispatchEvent(Lf))}function nt(L){n.enabled===!1||n.enablePan===!1||ot(L)}function E(L){switch(mt(L),S.length){case 1:switch(n.touches.ONE){case ns.ROTATE:if(n.enableRotate===!1)return;yt(),r=s.TOUCH_ROTATE;break;case ns.PAN:if(n.enablePan===!1)return;N(),r=s.TOUCH_PAN;break;default:r=s.NONE}break;case 2:switch(n.touches.TWO){case ns.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;tt(),r=s.TOUCH_DOLLY_PAN;break;case ns.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;ct(),r=s.TOUCH_DOLLY_ROTATE;break;default:r=s.NONE}break;default:r=s.NONE}r!==s.NONE&&n.dispatchEvent(yl)}function M(L){switch(mt(L),r){case s.TOUCH_ROTATE:if(n.enableRotate===!1)return;gt(L),n.update();break;case s.TOUCH_PAN:if(n.enablePan===!1)return;pt(L),n.update();break;case s.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;v(L),n.update();break;case s.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;T(L),n.update();break;default:r=s.NONE}}function k(L){n.enabled!==!1&&L.preventDefault()}function K(L){S.push(L)}function rt(L){delete C[L.pointerId];for(let G=0;G<S.length;G++)if(S[G].pointerId==L.pointerId){S.splice(G,1);return}}function mt(L){let G=C[L.pointerId];G===void 0&&(G=new xt,C[L.pointerId]=G),G.set(L.pageX,L.pageY)}function Mt(L){const G=L.pointerId===S[0].pointerId?S[1]:S[0];return C[G.pointerId]}n.domElement.addEventListener("contextmenu",k),n.domElement.addEventListener("pointerdown",z),n.domElement.addEventListener("pointercancel",et),n.domElement.addEventListener("wheel",ut,{passive:!1}),this.update()}}/*!
fflate - fast JavaScript compression/decompression
<https://101arrowz.github.io/fflate>
Licensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE
version 0.6.9
*/var Rf=function(i){return URL.createObjectURL(new Blob([i],{type:"text/javascript"}))};try{URL.revokeObjectURL(Rf(""))}catch{Rf=function(t){return"data:application/javascript;charset=UTF-8,"+encodeURI(t)}}var dn=Uint8Array,yi=Uint16Array,ic=Uint32Array,tm=new dn([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),em=new dn([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),AS=new dn([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),nm=function(i,t){for(var e=new yi(31),n=0;n<31;++n)e[n]=t+=1<<i[n-1];for(var s=new ic(e[30]),n=1;n<30;++n)for(var r=e[n];r<e[n+1];++r)s[r]=r-e[n]<<5|n;return[e,s]},im=nm(tm,2),sm=im[0],PS=im[1];sm[28]=258,PS[258]=28;var CS=nm(em,0),LS=CS[0],sc=new yi(32768);for(var le=0;le<32768;++le){var pi=(le&43690)>>>1|(le&21845)<<1;pi=(pi&52428)>>>2|(pi&13107)<<2,pi=(pi&61680)>>>4|(pi&3855)<<4,sc[le]=((pi&65280)>>>8|(pi&255)<<8)>>>1}var Tr=function(i,t,e){for(var n=i.length,s=0,r=new yi(t);s<n;++s)++r[i[s]-1];var o=new yi(t);for(s=0;s<t;++s)o[s]=o[s-1]+r[s-1]<<1;var a;if(e){a=new yi(1<<t);var l=15-t;for(s=0;s<n;++s)if(i[s])for(var c=s<<4|i[s],h=t-i[s],u=o[i[s]-1]++<<h,f=u|(1<<h)-1;u<=f;++u)a[sc[u]>>>l]=c}else for(a=new yi(n),s=0;s<n;++s)i[s]&&(a[s]=sc[o[i[s]-1]++]>>>15-i[s]);return a},$r=new dn(288);for(var le=0;le<144;++le)$r[le]=8;for(var le=144;le<256;++le)$r[le]=9;for(var le=256;le<280;++le)$r[le]=7;for(var le=280;le<288;++le)$r[le]=8;var rm=new dn(32);for(var le=0;le<32;++le)rm[le]=5;var RS=Tr($r,9,1),IS=Tr(rm,5,1),vl=function(i){for(var t=i[0],e=1;e<i.length;++e)i[e]>t&&(t=i[e]);return t},bn=function(i,t,e){var n=t/8|0;return(i[n]|i[n+1]<<8)>>(t&7)&e},wl=function(i,t){var e=t/8|0;return(i[e]|i[e+1]<<8|i[e+2]<<16)>>(t&7)},DS=function(i){return(i/8|0)+(i&7&&1)},zS=function(i,t,e){(t==null||t<0)&&(t=0),(e==null||e>i.length)&&(e=i.length);var n=new(i instanceof yi?yi:i instanceof ic?ic:dn)(e-t);return n.set(i.subarray(t,e)),n},FS=function(i,t,e){var n=i.length;if(!n||e&&!e.l&&n<5)return t||new dn(0);var s=!t||e,r=!e||e.i;e||(e={}),t||(t=new dn(n*3));var o=function(F){var tt=t.length;if(F>tt){var ct=new dn(Math.max(tt*2,F));ct.set(t),t=ct}},a=e.f||0,l=e.p||0,c=e.b||0,h=e.l,u=e.d,f=e.m,d=e.n,g=n*8;do{if(!h){e.f=a=bn(i,l,1);var p=bn(i,l+1,3);if(l+=3,p)if(p==1)h=RS,u=IS,f=9,d=5;else if(p==2){var x=bn(i,l,31)+257,b=bn(i,l+10,15)+4,S=x+bn(i,l+5,31)+1;l+=14;for(var C=new dn(S),D=new dn(19),y=0;y<b;++y)D[AS[y]]=bn(i,l+y*3,7);l+=b*3;for(var A=vl(D),R=(1<<A)-1,j=Tr(D,A,1),y=0;y<S;){var Q=j[bn(i,l,R)];l+=Q&15;var m=Q>>>4;if(m<16)C[y++]=m;else{var U=0,O=0;for(m==16?(O=3+bn(i,l,3),l+=2,U=C[y-1]):m==17?(O=3+bn(i,l,7),l+=3):m==18&&(O=11+bn(i,l,127),l+=7);O--;)C[y++]=U}}var J=C.subarray(0,x),Z=C.subarray(x);f=vl(J),d=vl(Z),h=Tr(J,f,1),u=Tr(Z,d,1)}else throw"invalid block type";else{var m=DS(l)+4,_=i[m-4]|i[m-3]<<8,w=m+_;if(w>n){if(r)throw"unexpected EOF";break}s&&o(c+_),t.set(i.subarray(m,w),c),e.b=c+=_,e.p=l=w*8;continue}if(l>g){if(r)throw"unexpected EOF";break}}s&&o(c+131072);for(var it=(1<<f)-1,Y=(1<<d)-1,ft=l;;ft=l){var U=h[wl(i,l)&it],dt=U>>>4;if(l+=U&15,l>g){if(r)throw"unexpected EOF";break}if(!U)throw"invalid length/literal";if(dt<256)t[c++]=dt;else if(dt==256){ft=l,h=null;break}else{var vt=dt-254;if(dt>264){var y=dt-257,W=tm[y];vt=bn(i,l,(1<<W)-1)+sm[y],l+=W}var ot=u[wl(i,l)&Y],yt=ot>>>4;if(!ot)throw"invalid distance";l+=ot&15;var Z=LS[yt];if(yt>3){var W=em[yt];Z+=wl(i,l)&(1<<W)-1,l+=W}if(l>g){if(r)throw"unexpected EOF";break}s&&o(c+131072);for(var N=c+vt;c<N;c+=4)t[c]=t[c-Z],t[c+1]=t[c+1-Z],t[c+2]=t[c+2-Z],t[c+3]=t[c+3-Z];c=N}}e.l=h,e.p=ft,e.b=c,h&&(a=1,e.m=f,e.d=u,e.n=d)}while(!a);return c==t.length?t:zS(t,0,c)},OS=new dn(0),NS=function(i){if((i[0]&15)!=8||i[0]>>>4>7||(i[0]<<8|i[1])%31)throw"invalid zlib data";if(i[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function kS(i,t){return FS((NS(i),i.subarray(2,-4)),t)}var US=typeof TextDecoder<"u"&&new TextDecoder,BS=0;try{US.decode(OS,{stream:!0}),BS=1}catch{}function om(i,t,e){const n=e.length-i-1;if(t>=e[n])return n-1;if(t<=e[i])return i;let s=i,r=n,o=Math.floor((s+r)/2);for(;t<e[o]||t>=e[o+1];)t<e[o]?r=o:s=o,o=Math.floor((s+r)/2);return o}function HS(i,t,e,n){const s=[],r=[],o=[];s[0]=1;for(let a=1;a<=e;++a){r[a]=t-n[i+1-a],o[a]=n[i+a]-t;let l=0;for(let c=0;c<a;++c){const h=o[c+1],u=r[a-c],f=s[c]/(h+u);s[c]=l+h*f,l=u*f}s[a]=l}return s}function VS(i,t,e,n){const s=om(i,n,t),r=HS(s,n,i,t),o=new ne(0,0,0,0);for(let a=0;a<=i;++a){const l=e[s-i+a],c=r[a],h=l.w*c;o.x+=l.x*h,o.y+=l.y*h,o.z+=l.z*h,o.w+=l.w*c}return o}function GS(i,t,e,n,s){const r=[];for(let u=0;u<=e;++u)r[u]=0;const o=[];for(let u=0;u<=n;++u)o[u]=r.slice(0);const a=[];for(let u=0;u<=e;++u)a[u]=r.slice(0);a[0][0]=1;const l=r.slice(0),c=r.slice(0);for(let u=1;u<=e;++u){l[u]=t-s[i+1-u],c[u]=s[i+u]-t;let f=0;for(let d=0;d<u;++d){const g=c[d+1],p=l[u-d];a[u][d]=g+p;const m=a[d][u-1]/a[u][d];a[d][u]=f+g*m,f=p*m}a[u][u]=f}for(let u=0;u<=e;++u)o[0][u]=a[u][e];for(let u=0;u<=e;++u){let f=0,d=1;const g=[];for(let p=0;p<=e;++p)g[p]=r.slice(0);g[0][0]=1;for(let p=1;p<=n;++p){let m=0;const _=u-p,w=e-p;u>=p&&(g[d][0]=g[f][0]/a[w+1][_],m=g[d][0]*a[_][w]);const x=_>=-1?1:-_,b=u-1<=w?p-1:e-u;for(let C=x;C<=b;++C)g[d][C]=(g[f][C]-g[f][C-1])/a[w+1][_+C],m+=g[d][C]*a[_+C][w];u<=w&&(g[d][p]=-g[f][p-1]/a[w+1][u],m+=g[d][p]*a[u][w]),o[p][u]=m;const S=f;f=d,d=S}}let h=e;for(let u=1;u<=n;++u){for(let f=0;f<=e;++f)o[u][f]*=h;h*=e-u}return o}function WS(i,t,e,n,s){const r=s<i?s:i,o=[],a=om(i,n,t),l=GS(a,n,i,r,t),c=[];for(let h=0;h<e.length;++h){const u=e[h].clone(),f=u.w;u.x*=f,u.y*=f,u.z*=f,c[h]=u}for(let h=0;h<=r;++h){const u=c[a-i].clone().multiplyScalar(l[h][0]);for(let f=1;f<=i;++f)u.add(c[a-i+f].clone().multiplyScalar(l[h][f]));o[h]=u}for(let h=r+1;h<=s+1;++h)o[h]=new ne(0,0,0);return o}function XS(i,t){let e=1;for(let s=2;s<=i;++s)e*=s;let n=1;for(let s=2;s<=t;++s)n*=s;for(let s=2;s<=i-t;++s)n*=s;return e/n}function jS(i){const t=i.length,e=[],n=[];for(let r=0;r<t;++r){const o=i[r];e[r]=new I(o.x,o.y,o.z),n[r]=o.w}const s=[];for(let r=0;r<t;++r){const o=e[r].clone();for(let a=1;a<=r;++a)o.sub(s[r-a].clone().multiplyScalar(XS(r,a)*n[a]));s[r]=o.divideScalar(n[0])}return s}function qS(i,t,e,n,s){const r=WS(i,t,e,n,s);return jS(r)}class YS extends Ln{constructor(t,e,n,s,r){super(),this.degree=t,this.knots=e,this.controlPoints=[],this.startKnot=s||0,this.endKnot=r||this.knots.length-1;for(let o=0;o<n.length;++o){const a=n[o];this.controlPoints[o]=new ne(a.x,a.y,a.z,a.w)}}getPoint(t,e=new I){const n=e,s=this.knots[this.startKnot]+t*(this.knots[this.endKnot]-this.knots[this.startKnot]),r=VS(this.degree,this.knots,this.controlPoints,s);return r.w!==1&&r.divideScalar(r.w),n.set(r.x,r.y,r.z)}getTangent(t,e=new I){const n=e,s=this.knots[0]+t*(this.knots[this.knots.length-1]-this.knots[0]),r=qS(this.degree,this.knots,this.controlPoints,s,1);return n.copy(r[1]).normalize(),n}}let Xt,me,$e;class $S extends Yr{constructor(t){super(t)}load(t,e,n,s){const r=this,o=r.path===""?fS.extractUrlBase(t):r.path,a=new Zp(this.manager);a.setPath(r.path),a.setResponseType("arraybuffer"),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(t,function(l){try{e(r.parse(l,o))}catch(c){s?s(c):console.error(c),r.manager.itemError(t)}},n,s)}parse(t,e){if(eT(t))Xt=new tT().parse(t);else{const s=hm(t);if(!nT(s))throw new Error("THREE.FBXLoader: Unknown format.");if(Df(s)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+Df(s));Xt=new QS().parse(s)}const n=new Qs(this.manager).setPath(this.resourcePath||e).setCrossOrigin(this.crossOrigin);return new ZS(n,this.manager).parse(Xt)}}class ZS{constructor(t,e){this.textureLoader=t,this.manager=e}parse(){me=this.parseConnections();const t=this.parseImages(),e=this.parseTextures(t),n=this.parseMaterials(e),s=this.parseDeformers(),r=new KS().parse(s);return this.parseScene(s,r,n),$e}parseConnections(){const t=new Map;return"Connections"in Xt&&Xt.Connections.connections.forEach(function(n){const s=n[0],r=n[1],o=n[2];t.has(s)||t.set(s,{parents:[],children:[]});const a={ID:r,relationship:o};t.get(s).parents.push(a),t.has(r)||t.set(r,{parents:[],children:[]});const l={ID:s,relationship:o};t.get(r).children.push(l)}),t}parseImages(){const t={},e={};if("Video"in Xt.Objects){const n=Xt.Objects.Video;for(const s in n){const r=n[s],o=parseInt(s);if(t[o]=r.RelativeFilename||r.Filename,"Content"in r){const a=r.Content instanceof ArrayBuffer&&r.Content.byteLength>0,l=typeof r.Content=="string"&&r.Content!=="";if(a||l){const c=this.parseImage(n[s]);e[r.RelativeFilename||r.Filename]=c}}}}for(const n in t){const s=t[n];e[s]!==void 0?t[n]=e[s]:t[n]=t[n].split("\\").pop()}return t}parseImage(t){const e=t.Content,n=t.RelativeFilename||t.Filename,s=n.slice(n.lastIndexOf(".")+1).toLowerCase();let r;switch(s){case"bmp":r="image/bmp";break;case"jpg":case"jpeg":r="image/jpeg";break;case"png":r="image/png";break;case"tif":r="image/tiff";break;case"tga":this.manager.getHandler(".tga")===null&&console.warn("FBXLoader: TGA loader not found, skipping ",n),r="image/tga";break;default:console.warn('FBXLoader: Image type "'+s+'" is not supported.');return}if(typeof e=="string")return"data:"+r+";base64,"+e;{const o=new Uint8Array(e);return window.URL.createObjectURL(new Blob([o],{type:r}))}}parseTextures(t){const e=new Map;if("Texture"in Xt.Objects){const n=Xt.Objects.Texture;for(const s in n){const r=this.parseTexture(n[s],t);e.set(parseInt(s),r)}}return e}parseTexture(t,e){const n=this.loadTexture(t,e);n.ID=t.id,n.name=t.attrName;const s=t.WrapModeU,r=t.WrapModeV,o=s!==void 0?s.value:0,a=r!==void 0?r.value:0;if(n.wrapS=o===0?Dr:rn,n.wrapT=a===0?Dr:rn,"Scaling"in t){const l=t.Scaling.value;n.repeat.x=l[0],n.repeat.y=l[1]}if("Translation"in t){const l=t.Translation.value;n.offset.x=l[0],n.offset.y=l[1]}return n}loadTexture(t,e){let n;const s=this.textureLoader.path,r=me.get(t.id).children;r!==void 0&&r.length>0&&e[r[0].ID]!==void 0&&(n=e[r[0].ID],(n.indexOf("blob:")===0||n.indexOf("data:")===0)&&this.textureLoader.setPath(void 0));let o;const a=t.FileName.slice(-3).toLowerCase();if(a==="tga"){const l=this.manager.getHandler(".tga");l===null?(console.warn("FBXLoader: TGA loader not found, creating placeholder texture for",t.RelativeFilename),o=new Re):(l.setPath(this.textureLoader.path),o=l.load(n))}else a==="psd"?(console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for",t.RelativeFilename),o=new Re):o=this.textureLoader.load(n);return this.textureLoader.setPath(s),o}parseMaterials(t){const e=new Map;if("Material"in Xt.Objects){const n=Xt.Objects.Material;for(const s in n){const r=this.parseMaterial(n[s],t);r!==null&&e.set(parseInt(s),r)}}return e}parseMaterial(t,e){const n=t.id,s=t.attrName;let r=t.ShadingModel;if(typeof r=="object"&&(r=r.value),!me.has(n))return null;const o=this.parseParameters(t,e,n);let a;switch(r.toLowerCase()){case"phong":a=new gl;break;case"lambert":a=new Vc;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',r),a=new gl;break}return a.setValues(o),a.name=s,a}parseParameters(t,e,n){const s={};t.BumpFactor&&(s.bumpScale=t.BumpFactor.value),t.Diffuse?s.color=new Ct().fromArray(t.Diffuse.value):t.DiffuseColor&&(t.DiffuseColor.type==="Color"||t.DiffuseColor.type==="ColorRGB")&&(s.color=new Ct().fromArray(t.DiffuseColor.value)),t.DisplacementFactor&&(s.displacementScale=t.DisplacementFactor.value),t.Emissive?s.emissive=new Ct().fromArray(t.Emissive.value):t.EmissiveColor&&(t.EmissiveColor.type==="Color"||t.EmissiveColor.type==="ColorRGB")&&(s.emissive=new Ct().fromArray(t.EmissiveColor.value)),t.EmissiveFactor&&(s.emissiveIntensity=parseFloat(t.EmissiveFactor.value)),t.Opacity&&(s.opacity=parseFloat(t.Opacity.value)),s.opacity<1&&(s.transparent=!0),t.ReflectionFactor&&(s.reflectivity=t.ReflectionFactor.value),t.Shininess&&(s.shininess=t.Shininess.value),t.Specular?s.specular=new Ct().fromArray(t.Specular.value):t.SpecularColor&&t.SpecularColor.type==="Color"&&(s.specular=new Ct().fromArray(t.SpecularColor.value));const r=this;return me.get(n).children.forEach(function(o){const a=o.relationship;switch(a){case"Bump":s.bumpMap=r.getTexture(e,o.ID);break;case"Maya|TEX_ao_map":s.aoMap=r.getTexture(e,o.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":s.map=r.getTexture(e,o.ID),s.map!==void 0&&(s.map.encoding=se);break;case"DisplacementColor":s.displacementMap=r.getTexture(e,o.ID);break;case"EmissiveColor":s.emissiveMap=r.getTexture(e,o.ID),s.emissiveMap!==void 0&&(s.emissiveMap.encoding=se);break;case"NormalMap":case"Maya|TEX_normal_map":s.normalMap=r.getTexture(e,o.ID);break;case"ReflectionColor":s.envMap=r.getTexture(e,o.ID),s.envMap!==void 0&&(s.envMap.mapping=Xo,s.envMap.encoding=se);break;case"SpecularColor":s.specularMap=r.getTexture(e,o.ID),s.specularMap!==void 0&&(s.specularMap.encoding=se);break;case"TransparentColor":case"TransparencyFactor":s.alphaMap=r.getTexture(e,o.ID),s.transparent=!0;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",a);break}}),s}getTexture(t,e){return"LayeredTexture"in Xt.Objects&&e in Xt.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),e=me.get(e).children[0].ID),t.get(e)}parseDeformers(){const t={},e={};if("Deformer"in Xt.Objects){const n=Xt.Objects.Deformer;for(const s in n){const r=n[s],o=me.get(parseInt(s));if(r.attrType==="Skin"){const a=this.parseSkeleton(o,n);a.ID=s,o.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),a.geometryID=o.parents[0].ID,t[s]=a}else if(r.attrType==="BlendShape"){const a={id:s};a.rawTargets=this.parseMorphTargets(o,n),a.id=s,o.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),e[s]=a}}}return{skeletons:t,morphTargets:e}}parseSkeleton(t,e){const n=[];return t.children.forEach(function(s){const r=e[s.ID];if(r.attrType!=="Cluster")return;const o={ID:s.ID,indices:[],weights:[],transformLink:new Dt().fromArray(r.TransformLink.a)};"Indexes"in r&&(o.indices=r.Indexes.a,o.weights=r.Weights.a),n.push(o)}),{rawBones:n,bones:[]}}parseMorphTargets(t,e){const n=[];for(let s=0;s<t.children.length;s++){const r=t.children[s],o=e[r.ID],a={name:o.attrName,initialWeight:o.DeformPercent,id:o.id,fullWeights:o.FullWeights.a};if(o.attrType!=="BlendShapeChannel")return;a.geoID=me.get(parseInt(r.ID)).children.filter(function(l){return l.relationship===void 0})[0].ID,n.push(a)}return n}parseScene(t,e,n){$e=new qt;const s=this.parseModels(t.skeletons,e,n),r=Xt.Objects.Model,o=this;s.forEach(function(l){const c=r[l.ID];o.setLookAtProperties(l,c),me.get(l.ID).parents.forEach(function(u){const f=s.get(u.ID);f!==void 0&&f.add(l)}),l.parent===null&&$e.add(l)}),this.bindSkeleton(t.skeletons,e,s),this.createAmbientLight(),$e.traverse(function(l){if(l.userData.transformData){l.parent&&(l.userData.transformData.parentMatrix=l.parent.matrix,l.userData.transformData.parentMatrixWorld=l.parent.matrixWorld);const c=lm(l.userData.transformData);l.applyMatrix4(c),l.updateWorldMatrix()}});const a=new JS().parse();$e.children.length===1&&$e.children[0].isGroup&&($e.children[0].animations=a,$e=$e.children[0]),$e.animations=a}parseModels(t,e,n){const s=new Map,r=Xt.Objects.Model;for(const o in r){const a=parseInt(o),l=r[o],c=me.get(a);let h=this.buildSkeleton(c,t,a,l.attrName);if(!h){switch(l.attrType){case"Camera":h=this.createCamera(c);break;case"Light":h=this.createLight(c);break;case"Mesh":h=this.createMesh(c,e,n);break;case"NurbsCurve":h=this.createCurve(c,e);break;case"LimbNode":case"Root":h=new Zl;break;case"Null":default:h=new qt;break}h.name=l.attrName?te.sanitizeNodeName(l.attrName):"",h.ID=a}this.getTransformData(h,l),s.set(a,h)}return s}buildSkeleton(t,e,n,s){let r=null;return t.parents.forEach(function(o){for(const a in e){const l=e[a];l.rawBones.forEach(function(c,h){if(c.ID===o.ID){const u=r;r=new Zl,r.matrixWorld.copy(c.transformLink),r.name=s?te.sanitizeNodeName(s):"",r.ID=n,l.bones[h]=r,u!==null&&r.add(u)}})}}),r}createCamera(t){let e,n;if(t.children.forEach(function(s){const r=Xt.Objects.NodeAttribute[s.ID];r!==void 0&&(n=r)}),n===void 0)e=new ae;else{let s=0;n.CameraProjectionType!==void 0&&n.CameraProjectionType.value===1&&(s=1);let r=1;n.NearPlane!==void 0&&(r=n.NearPlane.value/1e3);let o=1e3;n.FarPlane!==void 0&&(o=n.FarPlane.value/1e3);let a=window.innerWidth,l=window.innerHeight;n.AspectWidth!==void 0&&n.AspectHeight!==void 0&&(a=n.AspectWidth.value,l=n.AspectHeight.value);const c=a/l;let h=45;n.FieldOfView!==void 0&&(h=n.FieldOfView.value);const u=n.FocalLength?n.FocalLength.value:null;switch(s){case 0:e=new Ge(h,c,r,o),u!==null&&e.setFocalLength(u);break;case 1:e=new Ic(-a/2,a/2,l/2,-l/2,r,o);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+s+"."),e=new ae;break}}return e}createLight(t){let e,n;if(t.children.forEach(function(s){const r=Xt.Objects.NodeAttribute[s.ID];r!==void 0&&(n=r)}),n===void 0)e=new ae;else{let s;n.LightType===void 0?s=0:s=n.LightType.value;let r=16777215;n.Color!==void 0&&(r=new Ct().fromArray(n.Color.value));let o=n.Intensity===void 0?1:n.Intensity.value/100;n.CastLightOnObject!==void 0&&n.CastLightOnObject.value===0&&(o=0);let a=0;n.FarAttenuationEnd!==void 0&&(n.EnableFarAttenuation!==void 0&&n.EnableFarAttenuation.value===0?a=0:a=n.FarAttenuationEnd.value);const l=1;switch(s){case 0:e=new ec(r,o,a,l);break;case 1:e=new uS(r,o);break;case 2:let c=Math.PI/3;n.InnerAngle!==void 0&&(c=On.degToRad(n.InnerAngle.value));let h=0;n.OuterAngle!==void 0&&(h=On.degToRad(n.OuterAngle.value),h=Math.max(h,1)),e=new lS(r,o,a,c,h,l);break;default:console.warn("THREE.FBXLoader: Unknown light type "+n.LightType.value+", defaulting to a PointLight."),e=new ec(r,o);break}n.CastShadows!==void 0&&n.CastShadows.value===1&&(e.castShadow=!0)}return e}createMesh(t,e,n){let s,r=null,o=null;const a=[];return t.children.forEach(function(l){e.has(l.ID)&&(r=e.get(l.ID)),n.has(l.ID)&&a.push(n.get(l.ID))}),a.length>1?o=a:a.length>0?o=a[0]:(o=new gl({color:13421772}),a.push(o)),"color"in r.attributes&&a.forEach(function(l){l.vertexColors=!0}),r.FBX_Deformer?(s=new fb(r,o),s.normalizeSkinWeights()):s=new Ot(r,o),s}createCurve(t,e){const n=t.children.reduce(function(r,o){return e.has(o.ID)&&(r=e.get(o.ID)),r},null),s=new Fp({color:3342591,linewidth:1});return new Op(n,s)}getTransformData(t,e){const n={};"InheritType"in e&&(n.inheritType=parseInt(e.InheritType.value)),"RotationOrder"in e?n.eulerOrder=cm(e.RotationOrder.value):n.eulerOrder="ZYX","Lcl_Translation"in e&&(n.translation=e.Lcl_Translation.value),"PreRotation"in e&&(n.preRotation=e.PreRotation.value),"Lcl_Rotation"in e&&(n.rotation=e.Lcl_Rotation.value),"PostRotation"in e&&(n.postRotation=e.PostRotation.value),"Lcl_Scaling"in e&&(n.scale=e.Lcl_Scaling.value),"ScalingOffset"in e&&(n.scalingOffset=e.ScalingOffset.value),"ScalingPivot"in e&&(n.scalingPivot=e.ScalingPivot.value),"RotationOffset"in e&&(n.rotationOffset=e.RotationOffset.value),"RotationPivot"in e&&(n.rotationPivot=e.RotationPivot.value),t.userData.transformData=n}setLookAtProperties(t,e){"LookAtProperty"in e&&me.get(t.ID).children.forEach(function(s){if(s.relationship==="LookAtProperty"){const r=Xt.Objects.Model[s.ID];if("Lcl_Translation"in r){const o=r.Lcl_Translation.value;t.target!==void 0?(t.target.position.fromArray(o),$e.add(t.target)):t.lookAt(new I().fromArray(o))}}})}bindSkeleton(t,e,n){const s=this.parsePoseNodes();for(const r in t){const o=t[r];me.get(parseInt(o.ID)).parents.forEach(function(l){if(e.has(l.ID)){const c=l.ID;me.get(c).parents.forEach(function(u){n.has(u.ID)&&n.get(u.ID).bind(new zc(o.bones),s[u.ID])})}})}}parsePoseNodes(){const t={};if("Pose"in Xt.Objects){const e=Xt.Objects.Pose;for(const n in e)if(e[n].attrType==="BindPose"&&e[n].NbPoseNodes>0){const s=e[n].PoseNode;Array.isArray(s)?s.forEach(function(r){t[r.Node]=new Dt().fromArray(r.Matrix.a)}):t[s.Node]=new Dt().fromArray(s.Matrix.a)}}return t}createAmbientLight(){if("GlobalSettings"in Xt&&"AmbientColor"in Xt.GlobalSettings){const t=Xt.GlobalSettings.AmbientColor.value,e=t[0],n=t[1],s=t[2];if(e!==0||n!==0||s!==0){const r=new Ct(e,n,s);$e.add(new Kp(r,1))}}}}class KS{constructor(){this.negativeMaterialIndices=!1}parse(t){const e=new Map;if("Geometry"in Xt.Objects){const n=Xt.Objects.Geometry;for(const s in n){const r=me.get(parseInt(s)),o=this.parseGeometry(r,n[s],t);e.set(parseInt(s),o)}}return this.negativeMaterialIndices===!0&&console.warn("THREE.FBXLoader: The FBX file contains invalid (negative) material indices. The asset might not render as expected."),e}parseGeometry(t,e,n){switch(e.attrType){case"Mesh":return this.parseMeshGeometry(t,e,n);case"NurbsCurve":return this.parseNurbsGeometry(e)}}parseMeshGeometry(t,e,n){const s=n.skeletons,r=[],o=t.parents.map(function(u){return Xt.Objects.Model[u.ID]});if(o.length===0)return;const a=t.children.reduce(function(u,f){return s[f.ID]!==void 0&&(u=s[f.ID]),u},null);t.children.forEach(function(u){n.morphTargets[u.ID]!==void 0&&r.push(n.morphTargets[u.ID])});const l=o[0],c={};"RotationOrder"in l&&(c.eulerOrder=cm(l.RotationOrder.value)),"InheritType"in l&&(c.inheritType=parseInt(l.InheritType.value)),"GeometricTranslation"in l&&(c.translation=l.GeometricTranslation.value),"GeometricRotation"in l&&(c.rotation=l.GeometricRotation.value),"GeometricScaling"in l&&(c.scale=l.GeometricScaling.value);const h=lm(c);return this.genGeometry(e,a,r,h)}genGeometry(t,e,n,s){const r=new pe;t.attrName&&(r.name=t.attrName);const o=this.parseGeoNode(t,e),a=this.genBuffers(o),l=new jt(a.vertex,3);if(l.applyMatrix4(s),r.setAttribute("position",l),a.colors.length>0&&r.setAttribute("color",new jt(a.colors,3)),e&&(r.setAttribute("skinIndex",new Lc(a.weightsIndices,4)),r.setAttribute("skinWeight",new jt(a.vertexWeights,4)),r.FBX_Deformer=e),a.normal.length>0){const c=new Ke().getNormalMatrix(s),h=new jt(a.normal,3);h.applyNormalMatrix(c),r.setAttribute("normal",h)}if(a.uvs.forEach(function(c,h){let u="uv"+(h+1).toString();h===0&&(u="uv"),r.setAttribute(u,new jt(a.uvs[h],2))}),o.material&&o.material.mappingType!=="AllSame"){let c=a.materialIndex[0],h=0;if(a.materialIndex.forEach(function(u,f){u!==c&&(r.addGroup(h,f-h,c),c=u,h=f)}),r.groups.length>0){const u=r.groups[r.groups.length-1],f=u.start+u.count;f!==a.materialIndex.length&&r.addGroup(f,a.materialIndex.length-f,c)}r.groups.length===0&&r.addGroup(0,a.materialIndex.length,a.materialIndex[0])}return this.addMorphTargets(r,t,n,s),r}parseGeoNode(t,e){const n={};if(n.vertexPositions=t.Vertices!==void 0?t.Vertices.a:[],n.vertexIndices=t.PolygonVertexIndex!==void 0?t.PolygonVertexIndex.a:[],t.LayerElementColor&&(n.color=this.parseVertexColors(t.LayerElementColor[0])),t.LayerElementMaterial&&(n.material=this.parseMaterialIndices(t.LayerElementMaterial[0])),t.LayerElementNormal&&(n.normal=this.parseNormals(t.LayerElementNormal[0])),t.LayerElementUV){n.uv=[];let s=0;for(;t.LayerElementUV[s];)t.LayerElementUV[s].UV&&n.uv.push(this.parseUVs(t.LayerElementUV[s])),s++}return n.weightTable={},e!==null&&(n.skeleton=e,e.rawBones.forEach(function(s,r){s.indices.forEach(function(o,a){n.weightTable[o]===void 0&&(n.weightTable[o]=[]),n.weightTable[o].push({id:r,weight:s.weights[a]})})})),n}genBuffers(t){const e={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]};let n=0,s=0,r=!1,o=[],a=[],l=[],c=[],h=[],u=[];const f=this;return t.vertexIndices.forEach(function(d,g){let p,m=!1;d<0&&(d=d^-1,m=!0);let _=[],w=[];if(o.push(d*3,d*3+1,d*3+2),t.color){const x=Ro(g,n,d,t.color);l.push(x[0],x[1],x[2])}if(t.skeleton){if(t.weightTable[d]!==void 0&&t.weightTable[d].forEach(function(x){w.push(x.weight),_.push(x.id)}),w.length>4){r||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),r=!0);const x=[0,0,0,0],b=[0,0,0,0];w.forEach(function(S,C){let D=S,y=_[C];b.forEach(function(A,R,j){if(D>A){j[R]=D,D=A;const Q=x[R];x[R]=y,y=Q}})}),_=x,w=b}for(;w.length<4;)w.push(0),_.push(0);for(let x=0;x<4;++x)h.push(w[x]),u.push(_[x])}if(t.normal){const x=Ro(g,n,d,t.normal);a.push(x[0],x[1],x[2])}t.material&&t.material.mappingType!=="AllSame"&&(p=Ro(g,n,d,t.material)[0],p<0&&(f.negativeMaterialIndices=!0,p=0)),t.uv&&t.uv.forEach(function(x,b){const S=Ro(g,n,d,x);c[b]===void 0&&(c[b]=[]),c[b].push(S[0]),c[b].push(S[1])}),s++,m&&(s>4&&console.warn("THREE.FBXLoader: Polygons with more than four sides are not supported. Make sure to triangulate the geometry during export."),f.genFace(e,t,o,p,a,l,c,h,u,s),n++,s=0,o=[],a=[],l=[],c=[],h=[],u=[])}),e}genFace(t,e,n,s,r,o,a,l,c,h){for(let u=2;u<h;u++)t.vertex.push(e.vertexPositions[n[0]]),t.vertex.push(e.vertexPositions[n[1]]),t.vertex.push(e.vertexPositions[n[2]]),t.vertex.push(e.vertexPositions[n[(u-1)*3]]),t.vertex.push(e.vertexPositions[n[(u-1)*3+1]]),t.vertex.push(e.vertexPositions[n[(u-1)*3+2]]),t.vertex.push(e.vertexPositions[n[u*3]]),t.vertex.push(e.vertexPositions[n[u*3+1]]),t.vertex.push(e.vertexPositions[n[u*3+2]]),e.skeleton&&(t.vertexWeights.push(l[0]),t.vertexWeights.push(l[1]),t.vertexWeights.push(l[2]),t.vertexWeights.push(l[3]),t.vertexWeights.push(l[(u-1)*4]),t.vertexWeights.push(l[(u-1)*4+1]),t.vertexWeights.push(l[(u-1)*4+2]),t.vertexWeights.push(l[(u-1)*4+3]),t.vertexWeights.push(l[u*4]),t.vertexWeights.push(l[u*4+1]),t.vertexWeights.push(l[u*4+2]),t.vertexWeights.push(l[u*4+3]),t.weightsIndices.push(c[0]),t.weightsIndices.push(c[1]),t.weightsIndices.push(c[2]),t.weightsIndices.push(c[3]),t.weightsIndices.push(c[(u-1)*4]),t.weightsIndices.push(c[(u-1)*4+1]),t.weightsIndices.push(c[(u-1)*4+2]),t.weightsIndices.push(c[(u-1)*4+3]),t.weightsIndices.push(c[u*4]),t.weightsIndices.push(c[u*4+1]),t.weightsIndices.push(c[u*4+2]),t.weightsIndices.push(c[u*4+3])),e.color&&(t.colors.push(o[0]),t.colors.push(o[1]),t.colors.push(o[2]),t.colors.push(o[(u-1)*3]),t.colors.push(o[(u-1)*3+1]),t.colors.push(o[(u-1)*3+2]),t.colors.push(o[u*3]),t.colors.push(o[u*3+1]),t.colors.push(o[u*3+2])),e.material&&e.material.mappingType!=="AllSame"&&(t.materialIndex.push(s),t.materialIndex.push(s),t.materialIndex.push(s)),e.normal&&(t.normal.push(r[0]),t.normal.push(r[1]),t.normal.push(r[2]),t.normal.push(r[(u-1)*3]),t.normal.push(r[(u-1)*3+1]),t.normal.push(r[(u-1)*3+2]),t.normal.push(r[u*3]),t.normal.push(r[u*3+1]),t.normal.push(r[u*3+2])),e.uv&&e.uv.forEach(function(f,d){t.uvs[d]===void 0&&(t.uvs[d]=[]),t.uvs[d].push(a[d][0]),t.uvs[d].push(a[d][1]),t.uvs[d].push(a[d][(u-1)*2]),t.uvs[d].push(a[d][(u-1)*2+1]),t.uvs[d].push(a[d][u*2]),t.uvs[d].push(a[d][u*2+1])})}addMorphTargets(t,e,n,s){if(n.length===0)return;t.morphTargetsRelative=!0,t.morphAttributes.position=[];const r=this;n.forEach(function(o){o.rawTargets.forEach(function(a){const l=Xt.Objects.Geometry[a.geoID];l!==void 0&&r.genMorphGeometry(t,e,l,s,a.name)})})}genMorphGeometry(t,e,n,s,r){const o=e.PolygonVertexIndex!==void 0?e.PolygonVertexIndex.a:[],a=n.Vertices!==void 0?n.Vertices.a:[],l=n.Indexes!==void 0?n.Indexes.a:[],c=t.attributes.position.count*3,h=new Float32Array(c);for(let g=0;g<l.length;g++){const p=l[g]*3;h[p]=a[g*3],h[p+1]=a[g*3+1],h[p+2]=a[g*3+2]}const u={vertexIndices:o,vertexPositions:h},f=this.genBuffers(u),d=new jt(f.vertex,3);d.name=r||n.attrName,d.applyMatrix4(s),t.morphAttributes.position.push(d)}parseNormals(t){const e=t.MappingInformationType,n=t.ReferenceInformationType,s=t.Normals.a;let r=[];return n==="IndexToDirect"&&("NormalIndex"in t?r=t.NormalIndex.a:"NormalsIndex"in t&&(r=t.NormalsIndex.a)),{dataSize:3,buffer:s,indices:r,mappingType:e,referenceType:n}}parseUVs(t){const e=t.MappingInformationType,n=t.ReferenceInformationType,s=t.UV.a;let r=[];return n==="IndexToDirect"&&(r=t.UVIndex.a),{dataSize:2,buffer:s,indices:r,mappingType:e,referenceType:n}}parseVertexColors(t){const e=t.MappingInformationType,n=t.ReferenceInformationType,s=t.Colors.a;let r=[];return n==="IndexToDirect"&&(r=t.ColorIndex.a),{dataSize:4,buffer:s,indices:r,mappingType:e,referenceType:n}}parseMaterialIndices(t){const e=t.MappingInformationType,n=t.ReferenceInformationType;if(e==="NoMappingInformation")return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:n};const s=t.Materials.a,r=[];for(let o=0;o<s.length;++o)r.push(o);return{dataSize:1,buffer:s,indices:r,mappingType:e,referenceType:n}}parseNurbsGeometry(t){const e=parseInt(t.Order);if(isNaN(e))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",t.Order,t.id),new pe;const n=e-1,s=t.KnotVector.a,r=[],o=t.Points.a;for(let u=0,f=o.length;u<f;u+=4)r.push(new ne().fromArray(o,u));let a,l;if(t.Form==="Closed")r.push(r[0]);else if(t.Form==="Periodic"){a=n,l=s.length-1-a;for(let u=0;u<n;++u)r.push(r[u])}const h=new YS(n,s,r,a,l).getPoints(r.length*12);return new pe().setFromPoints(h)}}class JS{parse(){const t=[],e=this.parseClips();if(e!==void 0)for(const n in e){const s=e[n],r=this.addClip(s);t.push(r)}return t}parseClips(){if(Xt.Objects.AnimationCurve===void 0)return;const t=this.parseAnimationCurveNodes();this.parseAnimationCurves(t);const e=this.parseAnimationLayers(t);return this.parseAnimStacks(e)}parseAnimationCurveNodes(){const t=Xt.Objects.AnimationCurveNode,e=new Map;for(const n in t){const s=t[n];if(s.attrName.match(/S|R|T|DeformPercent/)!==null){const r={id:s.id,attr:s.attrName,curves:{}};e.set(r.id,r)}}return e}parseAnimationCurves(t){const e=Xt.Objects.AnimationCurve;for(const n in e){const s={id:e[n].id,times:e[n].KeyTime.a.map(iT),values:e[n].KeyValueFloat.a},r=me.get(s.id);if(r!==void 0){const o=r.parents[0].ID,a=r.parents[0].relationship;a.match(/X/)?t.get(o).curves.x=s:a.match(/Y/)?t.get(o).curves.y=s:a.match(/Z/)?t.get(o).curves.z=s:a.match(/d|DeformPercent/)&&t.has(o)&&(t.get(o).curves.morph=s)}}}parseAnimationLayers(t){const e=Xt.Objects.AnimationLayer,n=new Map;for(const s in e){const r=[],o=me.get(parseInt(s));o!==void 0&&(o.children.forEach(function(l,c){if(t.has(l.ID)){const h=t.get(l.ID);if(h.curves.x!==void 0||h.curves.y!==void 0||h.curves.z!==void 0){if(r[c]===void 0){const u=me.get(l.ID).parents.filter(function(f){return f.relationship!==void 0})[0].ID;if(u!==void 0){const f=Xt.Objects.Model[u.toString()];if(f===void 0){console.warn("THREE.FBXLoader: Encountered a unused curve.",l);return}const d={modelName:f.attrName?te.sanitizeNodeName(f.attrName):"",ID:f.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};$e.traverse(function(g){g.ID===f.id&&(d.transform=g.matrix,g.userData.transformData&&(d.eulerOrder=g.userData.transformData.eulerOrder))}),d.transform||(d.transform=new Dt),"PreRotation"in f&&(d.preRotation=f.PreRotation.value),"PostRotation"in f&&(d.postRotation=f.PostRotation.value),r[c]=d}}r[c]&&(r[c][h.attr]=h)}else if(h.curves.morph!==void 0){if(r[c]===void 0){const u=me.get(l.ID).parents.filter(function(_){return _.relationship!==void 0})[0].ID,f=me.get(u).parents[0].ID,d=me.get(f).parents[0].ID,g=me.get(d).parents[0].ID,p=Xt.Objects.Model[g],m={modelName:p.attrName?te.sanitizeNodeName(p.attrName):"",morphName:Xt.Objects.Deformer[u].attrName};r[c]=m}r[c][h.attr]=h}}}),n.set(parseInt(s),r))}return n}parseAnimStacks(t){const e=Xt.Objects.AnimationStack,n={};for(const s in e){const r=me.get(parseInt(s)).children;r.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");const o=t.get(r[0].ID);n[s]={name:e[s].attrName,layer:o}}return n}addClip(t){let e=[];const n=this;return t.layer.forEach(function(s){e=e.concat(n.generateTracks(s))}),new tS(t.name,-1,e)}generateTracks(t){const e=[];let n=new I,s=new mn,r=new I;if(t.transform&&t.transform.decompose(n,s,r),n=n.toArray(),s=new gn().setFromQuaternion(s,t.eulerOrder).toArray(),r=r.toArray(),t.T!==void 0&&Object.keys(t.T.curves).length>0){const o=this.generateVectorTrack(t.modelName,t.T.curves,n,"position");o!==void 0&&e.push(o)}if(t.R!==void 0&&Object.keys(t.R.curves).length>0){const o=this.generateRotationTrack(t.modelName,t.R.curves,s,t.preRotation,t.postRotation,t.eulerOrder);o!==void 0&&e.push(o)}if(t.S!==void 0&&Object.keys(t.S.curves).length>0){const o=this.generateVectorTrack(t.modelName,t.S.curves,r,"scale");o!==void 0&&e.push(o)}if(t.DeformPercent!==void 0){const o=this.generateMorphTrack(t);o!==void 0&&e.push(o)}return e}generateVectorTrack(t,e,n,s){const r=this.getTimesForAllAxes(e),o=this.getKeyframeTrackValues(r,e,n);return new Gr(t+"."+s,r,o)}generateRotationTrack(t,e,n,s,r,o){e.x!==void 0&&(this.interpolateRotations(e.x),e.x.values=e.x.values.map(On.degToRad)),e.y!==void 0&&(this.interpolateRotations(e.y),e.y.values=e.y.values.map(On.degToRad)),e.z!==void 0&&(this.interpolateRotations(e.z),e.z.values=e.z.values.map(On.degToRad));const a=this.getTimesForAllAxes(e),l=this.getKeyframeTrackValues(a,e,n);s!==void 0&&(s=s.map(On.degToRad),s.push(o),s=new gn().fromArray(s),s=new mn().setFromEuler(s)),r!==void 0&&(r=r.map(On.degToRad),r.push(o),r=new gn().fromArray(r),r=new mn().setFromEuler(r).invert());const c=new mn,h=new gn,u=[];for(let f=0;f<l.length;f+=3)h.set(l[f],l[f+1],l[f+2],o),c.setFromEuler(h),s!==void 0&&c.premultiply(s),r!==void 0&&c.multiply(r),c.toArray(u,f/3*4);return new Ks(t+".quaternion",a,u)}generateMorphTrack(t){const e=t.DeformPercent.curves.morph,n=e.values.map(function(r){return r/100}),s=$e.getObjectByName(t.modelName).morphTargetDictionary[t.morphName];return new Vr(t.modelName+".morphTargetInfluences["+s+"]",e.times,n)}getTimesForAllAxes(t){let e=[];if(t.x!==void 0&&(e=e.concat(t.x.times)),t.y!==void 0&&(e=e.concat(t.y.times)),t.z!==void 0&&(e=e.concat(t.z.times)),e=e.sort(function(n,s){return n-s}),e.length>1){let n=1,s=e[0];for(let r=1;r<e.length;r++){const o=e[r];o!==s&&(e[n]=o,s=o,n++)}e=e.slice(0,n)}return e}getKeyframeTrackValues(t,e,n){const s=n,r=[];let o=-1,a=-1,l=-1;return t.forEach(function(c){if(e.x&&(o=e.x.times.indexOf(c)),e.y&&(a=e.y.times.indexOf(c)),e.z&&(l=e.z.times.indexOf(c)),o!==-1){const h=e.x.values[o];r.push(h),s[0]=h}else r.push(s[0]);if(a!==-1){const h=e.y.values[a];r.push(h),s[1]=h}else r.push(s[1]);if(l!==-1){const h=e.z.values[l];r.push(h),s[2]=h}else r.push(s[2])}),r}interpolateRotations(t){for(let e=1;e<t.values.length;e++){const n=t.values[e-1],s=t.values[e]-n,r=Math.abs(s);if(r>=180){const o=r/180,a=s/o;let l=n+a;const c=t.times[e-1],u=(t.times[e]-c)/o;let f=c+u;const d=[],g=[];for(;f<t.times[e];)d.push(f),f+=u,g.push(l),l+=a;t.times=zf(t.times,e,d),t.values=zf(t.values,e,g)}}}}class QS{getPrevNode(){return this.nodeStack[this.currentIndent-2]}getCurrentNode(){return this.nodeStack[this.currentIndent-1]}getCurrentProp(){return this.currentProp}pushStack(t){this.nodeStack.push(t),this.currentIndent+=1}popStack(){this.nodeStack.pop(),this.currentIndent-=1}setCurrentProp(t,e){this.currentProp=t,this.currentPropName=e}parse(t){this.currentIndent=0,this.allNodes=new am,this.nodeStack=[],this.currentProp=[],this.currentPropName="";const e=this,n=t.split(/[\r\n]+/);return n.forEach(function(s,r){const o=s.match(/^[\s\t]*;/),a=s.match(/^[\s\t]*$/);if(o||a)return;const l=s.match("^\\t{"+e.currentIndent+"}(\\w+):(.*){",""),c=s.match("^\\t{"+e.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),h=s.match("^\\t{"+(e.currentIndent-1)+"}}");l?e.parseNodeBegin(s,l):c?e.parseNodeProperty(s,c,n[++r]):h?e.popStack():s.match(/^[^\s\t}]/)&&e.parseNodePropertyContinued(s)}),this.allNodes}parseNodeBegin(t,e){const n=e[1].trim().replace(/^"/,"").replace(/"$/,""),s=e[2].split(",").map(function(l){return l.trim().replace(/^"/,"").replace(/"$/,"")}),r={name:n},o=this.parseNodeAttr(s),a=this.getCurrentNode();this.currentIndent===0?this.allNodes.add(n,r):n in a?(n==="PoseNode"?a.PoseNode.push(r):a[n].id!==void 0&&(a[n]={},a[n][a[n].id]=a[n]),o.id!==""&&(a[n][o.id]=r)):typeof o.id=="number"?(a[n]={},a[n][o.id]=r):n!=="Properties70"&&(n==="PoseNode"?a[n]=[r]:a[n]=r),typeof o.id=="number"&&(r.id=o.id),o.name!==""&&(r.attrName=o.name),o.type!==""&&(r.attrType=o.type),this.pushStack(r)}parseNodeAttr(t){let e=t[0];t[0]!==""&&(e=parseInt(t[0]),isNaN(e)&&(e=t[0]));let n="",s="";return t.length>1&&(n=t[1].replace(/^(\w+)::/,""),s=t[2]),{id:e,name:n,type:s}}parseNodeProperty(t,e,n){let s=e[1].replace(/^"/,"").replace(/"$/,"").trim(),r=e[2].replace(/^"/,"").replace(/"$/,"").trim();s==="Content"&&r===","&&(r=n.replace(/"/g,"").replace(/,$/,"").trim());const o=this.getCurrentNode();if(o.name==="Properties70"){this.parseNodeSpecialProperty(t,s,r);return}if(s==="C"){const l=r.split(",").slice(1),c=parseInt(l[0]),h=parseInt(l[1]);let u=r.split(",").slice(3);u=u.map(function(f){return f.trim().replace(/^"/,"")}),s="connections",r=[c,h],rT(r,u),o[s]===void 0&&(o[s]=[])}s==="Node"&&(o.id=r),s in o&&Array.isArray(o[s])?o[s].push(r):s!=="a"?o[s]=r:o.a=r,this.setCurrentProp(o,s),s==="a"&&r.slice(-1)!==","&&(o.a=bl(r))}parseNodePropertyContinued(t){const e=this.getCurrentNode();e.a+=t,t.slice(-1)!==","&&(e.a=bl(e.a))}parseNodeSpecialProperty(t,e,n){const s=n.split('",').map(function(h){return h.trim().replace(/^\"/,"").replace(/\s/,"_")}),r=s[0],o=s[1],a=s[2],l=s[3];let c=s[4];switch(o){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":c=parseFloat(c);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":c=bl(c);break}this.getPrevNode()[r]={type:o,type2:a,flag:l,value:c},this.setCurrentProp(this.getPrevNode(),r)}}class tT{parse(t){const e=new If(t);e.skip(23);const n=e.getUint32();if(n<6400)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+n);const s=new am;for(;!this.endOfContent(e);){const r=this.parseNode(e,n);r!==null&&s.add(r.name,r)}return s}endOfContent(t){return t.size()%16===0?(t.getOffset()+160+16&-16)>=t.size():t.getOffset()+160+16>=t.size()}parseNode(t,e){const n={},s=e>=7500?t.getUint64():t.getUint32(),r=e>=7500?t.getUint64():t.getUint32();e>=7500?t.getUint64():t.getUint32();const o=t.getUint8(),a=t.getString(o);if(s===0)return null;const l=[];for(let f=0;f<r;f++)l.push(this.parseProperty(t));const c=l.length>0?l[0]:"",h=l.length>1?l[1]:"",u=l.length>2?l[2]:"";for(n.singleProperty=r===1&&t.getOffset()===s;s>t.getOffset();){const f=this.parseNode(t,e);f!==null&&this.parseSubNode(a,n,f)}return n.propertyList=l,typeof c=="number"&&(n.id=c),h!==""&&(n.attrName=h),u!==""&&(n.attrType=u),a!==""&&(n.name=a),n}parseSubNode(t,e,n){if(n.singleProperty===!0){const s=n.propertyList[0];Array.isArray(s)?(e[n.name]=n,n.a=s):e[n.name]=s}else if(t==="Connections"&&n.name==="C"){const s=[];n.propertyList.forEach(function(r,o){o!==0&&s.push(r)}),e.connections===void 0&&(e.connections=[]),e.connections.push(s)}else if(n.name==="Properties70")Object.keys(n).forEach(function(r){e[r]=n[r]});else if(t==="Properties70"&&n.name==="P"){let s=n.propertyList[0],r=n.propertyList[1];const o=n.propertyList[2],a=n.propertyList[3];let l;s.indexOf("Lcl ")===0&&(s=s.replace("Lcl ","Lcl_")),r.indexOf("Lcl ")===0&&(r=r.replace("Lcl ","Lcl_")),r==="Color"||r==="ColorRGB"||r==="Vector"||r==="Vector3D"||r.indexOf("Lcl_")===0?l=[n.propertyList[4],n.propertyList[5],n.propertyList[6]]:l=n.propertyList[4],e[s]={type:r,type2:o,flag:a,value:l}}else e[n.name]===void 0?typeof n.id=="number"?(e[n.name]={},e[n.name][n.id]=n):e[n.name]=n:n.name==="PoseNode"?(Array.isArray(e[n.name])||(e[n.name]=[e[n.name]]),e[n.name].push(n)):e[n.name][n.id]===void 0&&(e[n.name][n.id]=n)}parseProperty(t){const e=t.getString(1);let n;switch(e){case"C":return t.getBoolean();case"D":return t.getFloat64();case"F":return t.getFloat32();case"I":return t.getInt32();case"L":return t.getInt64();case"R":return n=t.getUint32(),t.getArrayBuffer(n);case"S":return n=t.getUint32(),t.getString(n);case"Y":return t.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":const s=t.getUint32(),r=t.getUint32(),o=t.getUint32();if(r===0)switch(e){case"b":case"c":return t.getBooleanArray(s);case"d":return t.getFloat64Array(s);case"f":return t.getFloat32Array(s);case"i":return t.getInt32Array(s);case"l":return t.getInt64Array(s)}const a=kS(new Uint8Array(t.getArrayBuffer(o))),l=new If(a.buffer);switch(e){case"b":case"c":return l.getBooleanArray(s);case"d":return l.getFloat64Array(s);case"f":return l.getFloat32Array(s);case"i":return l.getInt32Array(s);case"l":return l.getInt64Array(s)}break;default:throw new Error("THREE.FBXLoader: Unknown property type "+e)}}}class If{constructor(t,e){this.dv=new DataView(t),this.offset=0,this.littleEndian=e!==void 0?e:!0,this._textDecoder=new TextDecoder}getOffset(){return this.offset}size(){return this.dv.buffer.byteLength}skip(t){this.offset+=t}getBoolean(){return(this.getUint8()&1)===1}getBooleanArray(t){const e=[];for(let n=0;n<t;n++)e.push(this.getBoolean());return e}getUint8(){const t=this.dv.getUint8(this.offset);return this.offset+=1,t}getInt16(){const t=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,t}getInt32(){const t=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,t}getInt32Array(t){const e=[];for(let n=0;n<t;n++)e.push(this.getInt32());return e}getUint32(){const t=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,t}getInt64(){let t,e;return this.littleEndian?(t=this.getUint32(),e=this.getUint32()):(e=this.getUint32(),t=this.getUint32()),e&2147483648?(e=~e&4294967295,t=~t&4294967295,t===4294967295&&(e=e+1&4294967295),t=t+1&4294967295,-(e*4294967296+t)):e*4294967296+t}getInt64Array(t){const e=[];for(let n=0;n<t;n++)e.push(this.getInt64());return e}getUint64(){let t,e;return this.littleEndian?(t=this.getUint32(),e=this.getUint32()):(e=this.getUint32(),t=this.getUint32()),e*4294967296+t}getFloat32(){const t=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,t}getFloat32Array(t){const e=[];for(let n=0;n<t;n++)e.push(this.getFloat32());return e}getFloat64(){const t=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,t}getFloat64Array(t){const e=[];for(let n=0;n<t;n++)e.push(this.getFloat64());return e}getArrayBuffer(t){const e=this.dv.buffer.slice(this.offset,this.offset+t);return this.offset+=t,e}getString(t){const e=this.offset;let n=new Uint8Array(this.dv.buffer,e,t);this.skip(t);const s=n.indexOf(0);return s>=0&&(n=new Uint8Array(this.dv.buffer,e,s)),this._textDecoder.decode(n)}}class am{add(t,e){this[t]=e}}function eT(i){const t="Kaydara FBX Binary  \0";return i.byteLength>=t.length&&t===hm(i,0,t.length)}function nT(i){const t=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"];let e=0;function n(s){const r=i[s-1];return i=i.slice(e+s),e++,r}for(let s=0;s<t.length;++s)if(n(1)===t[s])return!1;return!0}function Df(i){const t=/FBXVersion: (\d+)/,e=i.match(t);if(e)return parseInt(e[1]);throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function iT(i){return i/46186158e3}const sT=[];function Ro(i,t,e,n){let s;switch(n.mappingType){case"ByPolygonVertex":s=i;break;case"ByPolygon":s=t;break;case"ByVertice":s=e;break;case"AllSame":s=n.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+n.mappingType)}n.referenceType==="IndexToDirect"&&(s=n.indices[s]);const r=s*n.dataSize,o=r+n.dataSize;return oT(sT,n.buffer,r,o)}const Ml=new gn,_s=new I;function lm(i){const t=new Dt,e=new Dt,n=new Dt,s=new Dt,r=new Dt,o=new Dt,a=new Dt,l=new Dt,c=new Dt,h=new Dt,u=new Dt,f=new Dt,d=i.inheritType?i.inheritType:0;if(i.translation&&t.setPosition(_s.fromArray(i.translation)),i.preRotation){const R=i.preRotation.map(On.degToRad);R.push(i.eulerOrder||gn.DEFAULT_ORDER),e.makeRotationFromEuler(Ml.fromArray(R))}if(i.rotation){const R=i.rotation.map(On.degToRad);R.push(i.eulerOrder||gn.DEFAULT_ORDER),n.makeRotationFromEuler(Ml.fromArray(R))}if(i.postRotation){const R=i.postRotation.map(On.degToRad);R.push(i.eulerOrder||gn.DEFAULT_ORDER),s.makeRotationFromEuler(Ml.fromArray(R)),s.invert()}i.scale&&r.scale(_s.fromArray(i.scale)),i.scalingOffset&&a.setPosition(_s.fromArray(i.scalingOffset)),i.scalingPivot&&o.setPosition(_s.fromArray(i.scalingPivot)),i.rotationOffset&&l.setPosition(_s.fromArray(i.rotationOffset)),i.rotationPivot&&c.setPosition(_s.fromArray(i.rotationPivot)),i.parentMatrixWorld&&(u.copy(i.parentMatrix),h.copy(i.parentMatrixWorld));const g=e.clone().multiply(n).multiply(s),p=new Dt;p.extractRotation(h);const m=new Dt;m.copyPosition(h);const _=m.clone().invert().multiply(h),w=p.clone().invert().multiply(_),x=r,b=new Dt;if(d===0)b.copy(p).multiply(g).multiply(w).multiply(x);else if(d===1)b.copy(p).multiply(w).multiply(g).multiply(x);else{const j=new Dt().scale(new I().setFromMatrixScale(u)).clone().invert(),Q=w.clone().multiply(j);b.copy(p).multiply(g).multiply(Q).multiply(x)}const S=c.clone().invert(),C=o.clone().invert();let D=t.clone().multiply(l).multiply(c).multiply(e).multiply(n).multiply(s).multiply(S).multiply(a).multiply(o).multiply(r).multiply(C);const y=new Dt().copyPosition(D),A=h.clone().multiply(y);return f.copyPosition(A),D=f.clone().multiply(b),D.premultiply(h.invert()),D}function cm(i){i=i||0;const t=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return i===6?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),t[0]):t[i]}function bl(i){return i.split(",").map(function(e){return parseFloat(e)})}function hm(i,t,e){return t===void 0&&(t=0),e===void 0&&(e=i.byteLength),new TextDecoder().decode(new Uint8Array(i,t,e))}function rT(i,t){for(let e=0,n=i.length,s=t.length;e<s;e++,n++)i[n]=t[e]}function oT(i,t,e,n){for(let s=e,r=0;s<n;s++,r++)i[r]=t[s];return i}function zf(i,t,e){return i.slice(0,t).concat(e).concat(i.slice(t))}const aT=new $S,lT=i=>new Promise((t,e)=>{aT.load(i,n=>{t(n)},()=>{},n=>{e(n)})}),qc=(i,t)=>{i.aspect=window.innerWidth/window.innerHeight,i.updateProjectionMatrix(),t.setSize(window.innerWidth,window.innerHeight),t.setPixelRatio(Math.min(window.devicePixelRatio,2))},Yc=(i,t=4e3)=>{const e=document.getElementById(i),n=new hb,s=new Ge(60,window.innerWidth/window.innerHeight,1,1e5);n.add(s);const r=new ES(s,e);r.enableDamping=!0,r.enableZoom=!1,r.minDistance=100,r.maxDistance=4e3,n.add(new Kp(11382189));const o=new ec(16777215,1,1e4);o.position.set(1e3,t,1e3),o.castShadow=!0,n.add(o);const a=new zp({canvas:e});return a.setSize(window.innerWidth,window.innerHeight),a.setPixelRatio(Math.min(window.devicePixelRatio,2)),a.setClearColor(new Ct(0),1),a.shadowMap.enabled=!0,a.shadowMap.type=pp,{scene:n,camera:s,controls:r,renderer:a}},$c=(i,t)=>{const e=document.body;e.onwheel=n=>{const s=n.clientX/window.innerWidth*2-1,r=-(n.clientY/window.innerHeight*2-1),o=new I(s,r,.5);o.unproject(i),o.sub(i.position).normalize();const a=30,l=n.wheelDelta/Math.abs(n.wheelDelta);i.position.x+=o.x*l*a,i.position.y+=o.y*l*a,i.position.z+=o.z*l*a,t.target.x+=o.x*l*a,t.target.y+=o.y*l*a,t.target.z+=o.z*l*a}},Zc=(i,t,e)=>{let n=!0;document.onmousedown=()=>{n=!0,document.onmousemove=()=>{n=!1}},document.onmouseup=s=>{n&&s.target.nodeName==="CANVAS"&&cT(s,i,t,e),document.onmousemove=null}},cT=(i,t,e,n)=>{let s=null;const r=i.clientX/window.innerWidth*2-1,o=-(i.clientY/window.innerHeight*2-1),c=new I(r,o,.5).unproject(e).sub(e.position).normalize(),u=new MS(e.position,c).intersectObjects(t.children,!0);u.length&&(s=u[0]),s&&n(s,3,1e3)},We={mesh:"#1B3045",head:"#ffffff",surroundLineColor:"#4f90bb",risingColor:"#5588aa",liveColor:"#ffffff",radarColor:"#ff8800",wallColor:"#fab73f",circleColor:"#00bbff",coneColor:"#ffff00",flyColor:"#00bbff",sparklesColor:[13758190,15263976,12374766,9498256,11592447,13296127,16759807,15794175,16777200,16758213,16775885,16767673,16774638,16119260,16777184,14745599]};class hT{constructor(t,e,n,s){this.height=n,this.time=s,this.scene=t,this.child=e,this.createMesh(),this.createLine()}createMesh(){this.child.geometry.computeBoundingBox(),this.child.geometry.computeBoundingSphere();const{max:t,min:e}=this.child.geometry.boundingBox,n=t.z-e.z,s=new we({uniforms:{u_city_color:{value:new Ct(We.mesh)},u_head_color:{value:new Ct(We.head)},u_size:{value:n},u_rising_height:this.height,u_rising_color:{value:new Ct(We.risingColor)},u_time:this.time},vertexShader:`
        uniform float u_time;
        
        varying vec3 v_position;

        void main() {
          float f_rising_duration = 4.0;
          float f_risen = u_time / f_rising_duration;
          if (f_risen > 1.0) {
            f_risen = 1.0;
          }
          float z = position.z * f_risen;

          v_position = position;
          gl_Position = projectionMatrix * modelViewMatrix * vec4(vec2(position), z, 1.0);
        }
      `,fragmentShader:`
        uniform vec3 u_city_color;
        uniform vec3 u_head_color;
        uniform float u_size;
        uniform vec3 u_rising_color;
        uniform float u_rising_height;
        varying vec3 v_position;

        void main() {
          vec3 base_color = u_city_color;
          base_color = mix(base_color, u_head_color, v_position.z / u_size);
          if (u_rising_height > v_position.z && u_rising_height < v_position.z + 6.0) {
            float f_index = (u_rising_height - v_position.z) / 3.0;
            base_color = mix(u_rising_color, base_color, abs(f_index - 1.0));
          }
          
          gl_FragColor = vec4(base_color, 1.0);
        }
      `}),r=new Ot(this.child.geometry,s);r.position.copy(this.child.position),r.rotation.copy(this.child.rotation),r.scale.copy(this.child.scale),this.scene.add(r)}createLine(){const t=new Ab(this.child.geometry),{max:e,min:n}=this.child.geometry.boundingBox,s=new we({uniforms:{line_color:{value:new Ct(We.surroundLineColor)},u_time:this.time,u_max:{value:e},u_min:{value:n},live_color:{value:new Ct(We.liveColor)}},vertexShader:`
        uniform float u_time;
        uniform vec3 line_color;
        uniform vec3 live_color;
        uniform vec3 u_max;
        uniform vec3 u_min;

        varying vec3 v_color;

        void main() {
          float f_rising_duration = 4.0;
          float f_risen = u_time / f_rising_duration;
          if (f_risen > 1.0) {
            f_risen = 1.0;
          }
          float z = position.z * f_risen;

          float new_time = mod(u_time * 0.1, 1.0);
          float rangY = mix(u_min.y, u_max.y, new_time);
          if (rangY < position.y && rangY > position.y - 200.0) {
            float f_index = 1.0 - sin((position.y - rangY) / 200.0 * 3.14);
            float r = mix(live_color.r, line_color.r, f_index);
            float g = mix(live_color.g, line_color.g, f_index);
            float b = mix(live_color.b, line_color.b, f_index);

            v_color = vec3(r, g, b);
          } else {
            v_color = line_color;
          }
          gl_Position = projectionMatrix * modelViewMatrix * vec4(vec2(position), z, 1.0);
        }
      `,fragmentShader:`
        varying vec3 v_color;

        void main() {
          gl_FragColor = vec4(v_color, 1.0);
        }
      `}),r=new mb(t,s);r.scale.copy(this.child.scale),r.rotation.copy(this.child.rotation),r.position.copy(this.child.position),this.scene.add(r)}}class uT{constructor(t){this.scene=t,this.url="/src/assets/black-bg.png",this.init()}init(){const t=new Qs,e=new yn(5e3,32,32),n=new Ti({side:Xe,map:t.load(this.url)}),s=new Ot(e,n);s.position.set(0,0,0),this.scene.add(s)}}class fT{constructor(t,e){this.scene=t,this.time=e,this.init()}init(){const e=new qs(100,100,1,1),n=new we({uniforms:{u_color:{value:new Ct(We.radarColor)},u_radius:{value:50},u_time:this.time},transparent:!0,side:Xe,vertexShader:`
        varying vec2 v_position;

        void main() {
          v_position = vec2(position);
          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
      `,fragmentShader:`
        precision mediump float;
        varying vec2 v_position;

        uniform float u_time;
        uniform float u_radius;
        uniform vec3 u_color;

        void main() {
          float angle = atan(v_position.x, v_position.y);
          float new_angle = mod(angle + u_time, 3.1215926 * 2.0);
          float dis = distance(vec2(0.0, 0.0), v_position);
          float borderWidth = 2.0;
          float f_opacity = 1.0;
          if (dis > u_radius) {// 处于雷达之外
            f_opacity = 0.0;
          } else if (dis > u_radius - borderWidth) {// 处于圆环上
            f_opacity = 1.0;
          } else {// 处于圆环内
            f_opacity = 1.0 - new_angle;
          }

          gl_FragColor = vec4(u_color, f_opacity);
        }
      `}),s=new Ot(e,n);s.position.set(300,10,0),s.rotateX(-Math.PI/2),this.scene.add(s)}}let um=class{constructor(t,e){this.scene=t,this.time=e}createCylinder(t){const e=new oi(t.radius,t.radius,t.height,32,1,t.open);e.translate(0,t.height/2,0);const n=new we({uniforms:{u_time:this.time,u_color:{value:new Ct(t.color)},u_height:{value:t.height},u_opacity:{value:t.opacity},u_speed:{value:t.speed}},transparent:!0,side:Xe,depthTest:!1,vertexShader:`
        uniform float u_time;
        uniform float u_height;
        uniform float u_speed;

        varying float v_opacity;

        void main() {
          vec3 v_position = position * mod(u_time / u_speed, 1.0);
          v_opacity = (u_height - position.y) / u_height;
          gl_Position = projectionMatrix * modelViewMatrix * vec4(v_position, 1.0);
        }
      `,fragmentShader:`
        uniform vec3 u_color;
        uniform float u_opacity;

        varying float v_opacity;

        void main() {
          gl_FragColor = vec4(u_color, v_opacity * u_opacity);
        }
      `}),s=new Ot(e,n);s.position.copy(t.position),this.scene.add(s)}};class dT{constructor(t,e){new um(t,e).createCylinder({radius:50,height:50,opacity:.6,speed:2,open:!0,color:We.wallColor,position:{x:0,y:0,z:0}})}}class pT{constructor(t,e){new um(t,e).createCylinder({radius:50,height:1,opacity:.6,speed:1,open:!1,color:We.circleColor,position:{x:300,y:0,z:300}})}}class mT{constructor(t,e){this.scene=t,this.time=e,this.init({color:We.wallColor,height:60,opacity:.6,speed:4,position:{x:300,y:0,z:-200}})}init(t){const e=new yn(50,32,32,Math.PI/2,Math.PI*2,0,Math.PI/2),n=new we({uniforms:{u_time:this.time,u_color:{value:new Ct(t.color)},u_height:{value:t.height},u_opacity:{value:t.opacity},u_speed:{value:t.speed}},transparent:!0,side:Xe,depthTest:!1,vertexShader:`
        uniform float u_time;
        uniform float u_height;
        uniform float u_speed;

        varying float v_opacity;

        void main() {
          vec3 v_position = position * mod(u_time / u_speed, 1.0);
          v_opacity = (u_height - position.y) / u_height;
          gl_Position = projectionMatrix * modelViewMatrix * vec4(v_position, 1.0);
        }
      `,fragmentShader:`
        uniform vec3 u_color;
        uniform float u_opacity;

        varying float v_opacity;

        void main() {
          gl_FragColor = vec4(u_color, v_opacity * u_opacity);
        }
      `}),s=new Ot(e,n);s.position.copy(t.position),this.scene.add(s)}}class gT{constructor(t,e,n){this.scene=t,this.top=e,this.height=n,this.init({color:We.coneColor,height:60,speed:4,position:{x:0,y:50,z:0}})}init(t){const e=new Uc(15,30,4),n=new we({uniforms:{u_color:{value:new Ct(t.color)},u_height:this.height,u_top:this.top},transparent:!0,side:Xe,depthTest:!1,vertexShader:`
        uniform float u_top;
        uniform float u_height;

        void main() {
          float f_angle = u_height / 10.0;
          float x = position.x * cos(f_angle) - position.z * sin(f_angle);
          float y = position.y + u_top;
          float z = position.z * cos(f_angle) + position.x * sin(f_angle);
          vec4 v_position = vec4(x, y, z, 1.0);
          gl_Position = projectionMatrix * modelViewMatrix * v_position;
        }
      `,fragmentShader:`
        uniform vec3 u_color;
        uniform float u_opacity;

        void main() {
          gl_FragColor = vec4(u_color, 0.6);
        }
      `}),s=new Ot(e,n);s.position.copy(t.position),s.rotateZ(Math.PI),this.scene.add(s)}}class _T{constructor(t,e){this.scene=t,this.time=e,this.init({source:{x:300,y:0,z:-200},target:{x:-500,y:0,z:-240},range:200,height:300,color:We.flyColor,size:30})}init(t){const e=new I(t.source.x,t.source.y,t.source.z),n=new I(t.target.x,t.target.y,t.target.z),s=n.clone().lerp(e,.5);s.y+=t.height;const r=parseInt(e.distanceTo(n)),a=new Hp(e,s,n).getPoints(r),l=[],c=[];a.forEach((d,g)=>{l.push(d.x,d.y,d.z),c.push(g)});const h=new pe;h.setAttribute("position",new jt(l,3)),h.setAttribute("a_position",new jt(c,1));const u=new we({uniforms:{u_color:{value:new Ct(t.color)},u_range:{value:t.range},u_size:{value:t.size},u_total:{value:r},u_time:this.time},vertexShader:`
        attribute float a_position;
        uniform float u_range;
        uniform float u_size;
        uniform float u_total;
        uniform float u_time;
        varying float v_opacity;

        void main() {
          float size = u_size;
          float total = u_total * mod(u_time, 1.0);

          if (total > a_position && total < a_position + u_range) {
            float index = (a_position + u_range - total) / u_range;
            size *= index;
            v_opacity = 1.0;
          } else {
            v_opacity = 0.0;
          }

          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
          gl_PointSize = size / 10.0;
        }
      `,fragmentShader:`
        uniform vec3 u_color;
        varying float v_opacity;

        void main() {
          gl_FragColor = vec4(u_color, v_opacity);
        }
      `,transparent:!0}),f=new Fc(h,u);this.scene.add(f)}}class xT{constructor(t,e){this.scene=t,this.time=e,this.init({range:200,height:300,color:We.flyColor,size:30})}init(t){const s=new kp([new I(-320,0,160),new I(-150,0,-40),new I(-10,0,-35),new I(40,0,40),new I(30,0,150),new I(-100,0,310)]).getPoints(400),r=[],o=[];s.forEach((h,u)=>{r.push(h.x,h.y,h.z),o.push(u)});const a=new pe;a.setAttribute("position",new jt(r,3)),a.setAttribute("a_position",new jt(o,1));const l=new we({uniforms:{u_color:{value:new Ct(t.color)},u_range:{value:t.range},u_size:{value:t.size},u_total:{value:400},u_time:this.time},vertexShader:`
        attribute float a_position;
        uniform float u_range;
        uniform float u_size;
        uniform float u_total;
        uniform float u_time;
        varying float v_opacity;

        void main() {
          float size = u_size;
          float total = u_total * mod(u_time, 1.0);

          if (total > a_position && total < a_position + u_range) {
            float index = (a_position + u_range - total) / u_range;
            size *= index;
            v_opacity = 1.0;
          } else {
            v_opacity = 0.0;
          }

          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
          gl_PointSize = size / 10.0;
        }
      `,fragmentShader:`
        uniform vec3 u_color;
        varying float v_opacity;

        void main() {
          gl_FragColor = vec4(u_color, v_opacity);
        }
      `,transparent:!0}),c=new Fc(a,l);this.scene.add(c)}}class fm extends Yr{constructor(t){super(t)}load(t,e,n,s){const r=this,o=new Zp(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(a){const l=r.parse(JSON.parse(a));e&&e(l)},n,s)}parse(t){return new yT(t)}}class yT{constructor(t){this.isFont=!0,this.type="Font",this.data=t}generateShapes(t,e=100){const n=[],s=vT(t,e,this.data);for(let r=0,o=s.length;r<o;r++)n.push(...s[r].toShapes());return n}}function vT(i,t,e){const n=Array.from(i),s=t/e.resolution,r=(e.boundingBox.yMax-e.boundingBox.yMin+e.underlineThickness)*s,o=[];let a=0,l=0;for(let c=0;c<n.length;c++){const h=n[c];if(h===`
`)a=0,l-=r;else{const u=wT(h,s,a,l,e);a+=u.offsetX,o.push(u.path)}}return o}function wT(i,t,e,n,s){const r=s.glyphs[i]||s.glyphs["?"];if(!r){console.error('THREE.Font: character "'+i+'" does not exists in font family '+s.familyName+".");return}const o=new bS;let a,l,c,h,u,f,d,g;if(r.o){const p=r._cachedOutline||(r._cachedOutline=r.o.split(" "));for(let m=0,_=p.length;m<_;)switch(p[m++]){case"m":a=p[m++]*t+e,l=p[m++]*t+n,o.moveTo(a,l);break;case"l":a=p[m++]*t+e,l=p[m++]*t+n,o.lineTo(a,l);break;case"q":c=p[m++]*t+e,h=p[m++]*t+n,u=p[m++]*t+e,f=p[m++]*t+n,o.quadraticCurveTo(u,f,c,h);break;case"b":c=p[m++]*t+e,h=p[m++]*t+n,u=p[m++]*t+e,f=p[m++]*t+n,d=p[m++]*t+e,g=p[m++]*t+n,o.bezierCurveTo(u,f,d,g,c,h);break}}return{offsetX:r.ha*t,path:o}}class dm extends qr{constructor(t,e={}){const n=e.font;if(n===void 0)super();else{const s=n.generateShapes(t,e.size);e.depth=e.height!==void 0?e.height:50,e.bevelThickness===void 0&&(e.bevelThickness=10),e.bevelSize===void 0&&(e.bevelSize=8),e.bevelEnabled===void 0&&(e.bevelEnabled=!1),super(s,e)}this.type="TextGeometry"}}class MT{constructor(t){this.scene=t,this.font=null,this.init()}init(){new fm().load("/STXinwei_Regular.json",e=>{this.font=e,this.createTextQueue()})}createTextQueue(){[{text:"最高楼",size:20,position:{x:-20,y:130,z:410},rotate:Math.PI/1.3,color:"#ffffff"},{text:"第二高楼",size:20,position:{x:180,y:110,z:-70},rotate:Math.PI/2,color:"#ffffff"}].forEach(t=>{this.createText(t)})}createText(t){const e=new dm(t.text,{font:this.font,size:t.size,height:2}),n=new we({uniforms:{u_color:{value:new Ct(t.color)}},vertexShader:`
        void main() {
          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
      `,fragmentShader:`
        uniform vec3 u_color;

        void main() {
          gl_FragColor = vec4(u_color, 1.0);
        }
      `}),s=new Ot(e,n);s.position.copy(t.position),s.rotateY(t.rotate),this.scene.add(s)}}class bT{constructor(t,{position:e,direction:n}){this.scene=t,this.position=e,this.direction=n,this.smokes=[],this.points=[],this.mesh=null,this.init()}init(){this.geometry=new pe,this.material=new Np({size:50,map:new Qs().load("/src/assets/smoke.png"),transparent:!0,depthTest:!1}),this.material.onBeforeCompile=t=>{const e=`
        attribute float a_opacity;
        attribute float a_size;
        attribute float a_scale;
        varying float v_opacity;

        void main() {
          v_opacity = a_opacity;
      `;t.vertexShader=t.vertexShader.replace("void main() {",e);const n=`
        gl_PointSize = a_size * a_scale;
      `;t.vertexShader=t.vertexShader.replace("gl_PointSize = size;",n);const s=`
        varying float v_opacity;

        void main() {
      `;t.fragmentShader=t.fragmentShader.replace("void main() {",s);const r=`
        gl_FragColor = vec4(outgoingLight, diffuseColor.a * v_opacity);
      `;t.fragmentShader=t.fragmentShader.replace("gl_FragColor = vec4(outgoingLight, diffuseColor.a);",r)},this.mesh=new Fc(this.geometry,this.material),this.scene.add(this.mesh)}createParticle(){this.smokes.push({opacity:1,scale:1,size:50,x:this.position.x,y:this.position.y,z:this.position.z,vx:Math.random()*this.direction.x,vy:Math.random()+1,vz:Math.random()*this.direction.y})}setAttribute(t,e,n,s){this.geometry.setAttribute("position",new je(new Float32Array(t),3)),this.geometry.setAttribute("a_opacity",new je(new Float32Array(e),1)),this.geometry.setAttribute("a_size",new je(new Float32Array(n),1)),this.geometry.setAttribute("a_scale",new je(new Float32Array(s),1))}update(){const t=[],e=[],n=[],s=[];this.smokes=this.smokes.filter(r=>r.opacity<0?!1:(r.opacity-=.01,r.scale+=.02,r.x+=r.vx,r.y+=r.vy,r.z+=r.vz,t.push(r.x,r.y,r.z),e.push(r.opacity),n.push(r.size),s.push(r.scale),!0)),this.setAttribute(t,e,n,s)}animation(){this.createParticle(),this.update()}}class ST{constructor(t,e,n){this.scene=t,this.x=e.x,this.y=e.y,this.z=e.z,this.vx=e.vx,this.vy=e.vy,this.vz=e.vz,this.sparks=n,this.life=100,this.mesh=null,this.init()}init(){const t=Math.floor(Math.random()*We.sparklesColor.length),e=new yn(3,8,8,0,Math.PI*2,0,Math.PI*2),n=new Ti({color:We.sparklesColor[t]});this.mesh=new Ot(e,n),this.scene.add(this.mesh)}animation(){this.x+=this.vx,this.y+=this.vy,this.z+=this.vz,this.mesh.position.copy({x:this.x,y:this.y,z:this.z}),this.vy-=.05,this.vx*=.95,this.vy*=.95,this.vz*=.95,this.life--,this.life<10&&(this.scene.remove(this.mesh),this.sparks.splice(this.sparks.indexOf(this),1))}}class TT{constructor(t,e,n,s,r){this.scene=t,this.position=e,this.vy=n,this.fires=s,this.sparks=r,this.mesh=null,this.init()}init(){const t=new yn(5,8,8,0,Math.PI*2,0,Math.PI*2),e=new Ti({color:16777215});this.mesh=new Ot(t,e),this.scene.add(this.mesh)}animation(){if(this.position.y+=this.vy,this.vy-=.1,this.mesh.position.copy(this.position),this.vy<1){this.scene.remove(this.mesh),this.fires.splice(this.fires.indexOf(this),1);const t=Math.random()*5+5;for(let e=0;e<60;e++){const n=Math.random()*t,s=Math.cos(e*Math.PI/30)*n,r=(Math.random()*2-1)*n,o=Math.sin(e*Math.PI/30)*n;this.sparks.push(new ST(this.scene,{...this.position,vx:s,vy:r,vz:o},this.sparks))}}}}class ET{constructor(t,e,n){this.tweenPosition=null,this.tweenRotation=null,this.camera=e,this.scene=t,this.controls=n,this.risingHeight={value:0},this.time={value:0},this.coneTop={value:0},this.coneSpeed=.8,this.effects={},this.smoke=null,this.fires=[],this.sparks=[],this.countUp=0,this.firesCount=10,this.loadCity()}loadCity(){lT("/src/model/beijing.fbx").then(t=>{t.traverse(e=>{e.isMesh&&new hT(this.scene,e,this.risingHeight,this.time)}),this.initEffect()})}initEffect(){new uT(this.scene),new fT(this.scene,this.time),new dT(this.scene,this.time),new pT(this.scene,this.time),new mT(this.scene,this.time),new gT(this.scene,this.coneTop,this.risingHeight),new _T(this.scene,this.time),new xT(this.scene,this.time),new MT(this.scene),this.smoke=new bT(this.scene,{position:{x:-20,y:50,z:360},direction:{x:1.3,y:-.7}}),Zc(this.scene,this.camera,(t,e,n)=>{this.tweenPosition=new It(this.camera.position).to({x:t.point.x*e,y:t.point.y*e,z:t.point.z*e},n).start(),this.tweenRotation=new It(this.camera.rotation).to({x:this.camera.rotation.x,y:this.camera.rotation.y,z:this.camera.rotation.z},n).start()}),$c(this.camera,this.controls)}start(t){for(const e in this.effects)Object.hasOwnProperty.call(this.effects,e)&&this.effects[e].pointInstance.animation();this.smoke&&this.smoke.animation(),this.countUp<60?this.countUp++:(this.fires.push(new TT(this.scene,{x:(Math.random()*2-1)*400,y:0,z:(Math.random()*2-1)*200},Math.random()*2+9,this.fires,this.sparks)),this.countUp=0);for(const e of this.fires)e.animation();for(const e of this.sparks)e.animation();this.tweenPosition&&this.tweenRotation&&(this.tweenPosition.update(),this.tweenRotation.update()),this.time.value+=t,this.risingHeight.value+=.4,this.risingHeight.value>160&&(this.risingHeight.value=0),this.coneTop.value+=this.coneSpeed,(this.coneTop.value>15||this.coneTop.value<0)&&(this.coneSpeed=-1*this.coneSpeed)}}const AT=()=>{const{scene:i,camera:t,controls:e,renderer:n}=Yc("city");t.position.set(800,500,-800),e.target.set(0,300,0);const s=new ET(i,t,e),r=new Wc,o=()=>{s.start(r.getDelta()),e.update(),n.render(i,t),requestAnimationFrame(o)};o(),window.addEventListener("resize",()=>qc(t,n))},_a=(i,t)=>{const e=i.__vccOpts||i;for(const[n,s]of t)e[n]=s;return e},PT={data(){return{}},mounted(){AT()},unmounted(){window.removeEventListener("resize",()=>{})}},CT={id:"city"};function LT(i,t,e,n,s,r){return _i(),Vi("canvas",CT," 浏览器不支持canvas，请切换浏览器重试 ")}const RT=_a(PT,[["render",LT]]);let sn=class{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||4473924,this.radius=e.radius||50,this.height=e.height||50,this.open=e.open||!1,this.group=e.group||null,this.init()}init(){const t=new oi(this.radius,this.radius,this.height,20,2,this.open),e=new Ie({color:this.color}),n=new Ot(t,e);n.castShadow=!0,n.rotateX(this.rotation.x),n.rotateY(this.rotation.y),n.rotateZ(this.rotation.z),n.position.copy(this.position),this.group?this.group.add(n):this.scene.add(n)}};class Wt{constructor(t,e,n){this.scene=t,this.position=n.position||{x:0,y:0,z:0},this.rotation=n.rotation||{x:0,y:0,z:0},this.color=n.color||6710886,this.side=n.side||xn,this.verticesArr=e,this.group=n.group||null,this.init()}init(){const t=new Float32Array(this.verticesArr),e=new pe;e.setAttribute("position",new je(t,3)),e.computeVertexNormals();const n=new Ie({color:this.color,side:this.side}),s=new Ot(e,n);s.castShadow=!0,s.rotateX(this.rotation.x),s.rotateY(this.rotation.y),s.rotateZ(this.rotation.z),s.position.copy(this.position),this.group?this.group.add(s):this.scene.add(s)}}let hr=class{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||2003199,this.radius=e.radius||100,this.side=e.side||xn,this.group=e.group||null,this.init()}init(){const t=new yn(this.radius,20,20,Math.PI*2,Math.PI*2,Math.PI*2,Math.PI*2),e=new Ie({color:this.color}),n=new Ot(t,e);n.castShadow=!0,n.rotateX(this.rotation.x),n.rotateY(this.rotation.y),n.rotateZ(this.rotation.z),n.position.copy(this.position),this.group?this.group.add(n):this.scene.add(n)}};class Ff{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||255,this.group=e.group||null,this.init()}init(){const t=new yn(110,20,20,0,Math.PI,0,Math.PI),e=new Ie({color:this.color}),n=new Ot(t,e);n.castShadow=!0,n.rotateX(this.rotation.x),n.rotateY(this.rotation.y),n.rotateZ(this.rotation.z),n.position.copy(this.position),this.group?this.group.add(n):this.scene.add(n)}}class IT{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||255,this.group=e.group||null,this.init()}init(){const t=new $s(110,20,0,Math.PI*2),e=new Ti({color:this.color}),n=new Ot(t,e);n.castShadow=!0,n.rotateX(this.rotation.x),n.rotateY(this.rotation.y),n.rotateZ(this.rotation.z),n.position.copy(this.position),this.group?this.group.add(n):this.scene.add(n)}}const Kt=i=>[...i[0],...i[1],...i[2],...i[0],...i[2],...i[3],...i[0],...i[3],...i[7],...i[0],...i[7],...i[4],...i[1],...i[5],...i[6],...i[1],...i[6],...i[2],...i[0],...i[5],...i[1],...i[0],...i[4],...i[5],...i[2],...i[6],...i[7],...i[2],...i[7],...i[3],...i[4],...i[6],...i[5],...i[4],...i[7],...i[6]],Of=[[10,50,30],[-10,50,30],[-10,0,30],[10,0,30],[10,100,-50],[-10,100,-50],[-10,10,-30],[10,10,-30]],Nf=[[10,190,-40],[-10,190,-40],[-10,20,0],[10,20,0],[10,200,-50],[-10,200,-50],[10,100,-50],[-10,100,-50]],kf=[[150,100,120],[-100,100,100],[-100,-100,100],[150,-100,120],[150,100,-100],[-100,100,-100],[-100,-100,-100],[150,-100,-100]],Uf=[[7,80,0],[-7,80,0],[-20,-10,0],[20,-10,0],[10,100,-20],[-10,100,-20],[-20,-10,-20],[20,-10,-20]],DT=[[10,50,100],[-10,50,100],[-20,-50,100],[20,-50,100],[20,40,80],[-20,40,80],[-50,-50,50],[50,-50,50]],zT=[[10,50,100],[-10,50,100],[-20,-50,100],[20,-50,100],[80,50,80],[-80,50,80],[-50,-50,80],[50,-50,80]],Bf=[[100,50,100],[0,50,100],[0,-350,100],[100,-350,100],[100,50,0],[0,50,0],[0,-350,0],[100,-350,0]],Hf=[[20,40,20],[0,40,20],[0,0,20],[20,0,20],[20,40,0],[0,40,0],[0,0,0],[20,0,0]],FT=[[180,0,50],[-180,0,50],[-180,-200,50],[180,-200,50],[180,0,-90],[-180,0,-90],[-180,-200,-90],[180,-200,-90]],Sl=[[-10,-20,80],[-120,-20,80],[-120,-20,80],[-10,-20,80],[0,0,50],[-150,0,50],[-150,-70,50],[0,-70,50]],Tl=[[120,-20,80],[10,-20,80],[10,-20,80],[120,-20,80],[150,0,50],[0,0,50],[0,-70,50],[150,-70,50]],OT=[[220,0,80],[-220,0,80],[-220,-150,80],[220,-150,80],[220,0,-100],[-220,0,-100],[-220,-150,-100],[220,-150,-100]],NT=[[30,0,80],[-30,0,80],[-20,-20,50],[20,-20,50],[30,0,-100],[-30,0,-100],[-20,-20,-70],[20,-20,-70]],Vf=[[150,0,150],[0,0,150],[0,-500,150],[150,-500,150],[150,0,0],[0,0,0],[0,-500,0],[150,-500,0]],Gf=[[200,0,200],[0,0,200],[0,-500,200],[200,-500,200],[200,0,0],[0,0,0],[0,-500,0],[200,-500,0]],Wf=[[0,0,0],[-200,0,0],[-200,-100,0],[0,-100,0],[0,0,-100],[-200,0,-100],[-200,-100,-100],[0,-100,-100]],Xf=[[0,-50,100],[-200,-50,100],[-200,-100,100],[0,-100,100],[0,0,-100],[-200,0,-100],[-200,-100,-100],[0,-100,-100]],kT=[[0,0,0],[-60,0,0],[-60,-200,0],[0,-200,0],[0,0,-60],[-60,0,-60],[-60,-200,-60],[0,-200,-60]],UT=[[0,0,0],[-20,0,0],[-20,-100,0],[0,-100,0],[0,0,-20],[-20,0,-20],[-20,-100,-20],[0,-100,-20]];class jf{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||4473924,this.side=e.side||xn,this.group=e.group||null,this.init()}init(){const t=new fe;t.moveTo(0,0),t.lineTo(0,40),t.lineTo(100,40),t.lineTo(60,0),t.lineTo(0,0),t.moveTo(20,23),t.lineTo(45,20),t.lineTo(55,25),t.lineTo(55,30),t.lineTo(20,30),t.lineTo(20,23);const e=new Hc(t),n=new Ti({color:this.color,side:this.side}),s=new Ot(e,n);s.castShadow=!0,s.rotateX(this.rotation.x),s.rotateY(this.rotation.y),s.rotateZ(this.rotation.z),s.position.copy(this.position),this.group?this.group.add(s):this.scene.add(s)}}class qf{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||255,this.group=e.group||null,this.init()}init(){const t=new yn(40,10,10,0,Math.PI,0,Math.PI),e=new Ti({color:this.color}),n=new Ot(t,e);n.castShadow=!0,n.rotateX(this.rotation.x),n.rotateY(this.rotation.y),n.rotateZ(this.rotation.z),n.position.copy(this.position),this.group?this.group.add(n):this.scene.add(n)}}const Yf=i=>[...i[0],...i[2],...i[1],...i[0],...i[3],...i[2],...i[0],...i[4],...i[3],...i[4],...i[5],...i[3],...i[4],...i[6],...i[5],...i[7],...i[8],...i[9],...i[7],...i[9],...i[10],...i[7],...i[10],...i[11],...i[11],...i[10],...i[12],...i[11],...i[12],...i[13],...i[1],...i[9],...i[8],...i[1],...i[2],...i[9],...i[2],...i[10],...i[9],...i[2],...i[3],...i[10],...i[3],...i[12],...i[10],...i[3],...i[5],...i[12]],$f=[[0,0,100],[0,150,100],[50,150,100],[120,120,100],[50,-30,100],[300,-100,100],[200,-120,100],[0,0,-10],[0,150,-10],[50,150,-10],[120,120,-10],[50,-30,-10],[300,-100,-10],[200,-120,-10]],Zf=i=>[...i[0],...i[4],...i[1],...i[1],...i[4],...i[2],...i[4],...i[3],...i[2],...i[0],...i[5],...i[4],...i[0],...i[6],...i[5],...i[0],...i[7],...i[6],...i[8],...i[9],...i[12],...i[9],...i[10],...i[12],...i[12],...i[10],...i[11],...i[8],...i[12],...i[13],...i[8],...i[13],...i[14],...i[8],...i[14],...i[15],...i[0],...i[9],...i[8],...i[0],...i[1],...i[9],...i[1],...i[10],...i[9],...i[1],...i[2],...i[10],...i[2],...i[11],...i[10],...i[2],...i[3],...i[11],...i[3],...i[12],...i[11],...i[3],...i[4],...i[12],...i[4],...i[13],...i[12],...i[4],...i[5],...i[13],...i[5],...i[14],...i[13],...i[5],...i[6],...i[14],...i[6],...i[15],...i[14],...i[6],...i[7],...i[15],...i[7],...i[8],...i[15],...i[7],...i[0],...i[8]],Kf=[[0,0,20],[0,50,20],[0,120,20],[20,120,20],[20,50,20],[50,50,20],[50,25,20],[40,0,20],[0,0,0],[0,50,0],[0,120,0],[20,120,0],[20,50,0],[50,50,0],[50,25,0],[40,0,0]];class BT{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||4473924,this.radius=e.radius||20,this.height=e.height||50,this.side=e.side||qe,this.group=e.group||null,this.init()}init(){const t=new oi(this.radius,this.radius,this.height,10,2,!0),e=new Ie({color:this.color,side:this.side}),n=new Ot(t,e),s=new $s(this.radius,10);s.rotateX(-Math.PI/2),s.translate(0,this.height/2,0);const r=new Ot(s,new Ie({color:255,side:this.side})),o=new ae;o.castShadow=!0,o.add(n),o.add(r),o.rotateX(this.rotation.x),o.rotateY(this.rotation.y),o.rotateZ(this.rotation.z),o.position.copy(this.position),this.group?this.group.add(o):this.scene.add(o)}}class HT{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||4473924,this.radius=e.radius||30,this.group=e.group||null,this.init()}init(){const t=new Bc(this.radius,this.radius-10,20),e=new Ie({color:this.color}),n=new Ot(t,e);n.castShadow=!0,n.rotateX(this.rotation.x),n.rotateY(this.rotation.y),n.rotateZ(this.rotation.z),n.position.copy(this.position),this.group?this.group.add(n):this.scene.add(n)}}class pm{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||10066329,this.wrireframe=e.wrireframe||!0,this.init()}init(){const t=new qs(1e5,1e5,10,10),e=new Vc({wireframe:this.wrireframe}),n=new Ie({color:this.color}),s=new Ot(t,e);s.receiveShadow=!0;const r=new Ot(t,n);r.receiveShadow=!0;const o=new ae;o.add(s),o.add(r),o.rotateX(this.rotation.x),o.rotateY(this.rotation.y),o.rotateZ(this.rotation.z),o.position.copy(this.position),o.receiveShadow=!0,this.scene.add(o)}}class VT{constructor(t){this.scene=t,this.init()}init(){const t=new yn(1e5,20,20,Math.PI*2,Math.PI*2,Math.PI*2,Math.PI*2);new Qs().load("/src/assets/sky.jpg",n=>{const s=new Vc({map:n}),r=new Ot(t,s);this.scene.add(r)})}}class xs{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||4473924,this.radius=e.radius||80,this.height=e.height||80,this.group=e.group||null,this.init()}init(){new Qs().load("/src/assets/tyre.jpg",e=>{const n=new $s(this.radius,20,0,Math.PI*2),s=new Ie({map:e}),r=new Ot(n,s);r.rotateX(-Math.PI/2),r.translateZ(41);const o=new oi(this.radius,this.radius,this.height,20,2,!1),a=new Ie({color:this.color}),l=new Ot(o,a),c=new qt;c.add(l),c.add(r),c.castShadow=!0,c.rotateX(this.rotation.x),c.rotateY(this.rotation.y),c.rotateZ(this.rotation.z),c.position.copy(this.position),this.group?this.group.add(c):this.scene.add(c)})}}let GT=class{constructor(t,e,n,s){this.tweenTransform={},this.audio=document.getElementById("audio"),this.camera=e,this.scene=t,this.controls=n,this.renderer=s,this.time={value:0},this.status="robot",this.bulk=new qt,this.head=new qt,this.body=new qt,this.gun=new qt,this.rightHand=new qt,this.rightArm=new qt,this.rightForearm=new qt,this.rightPalm=new qt,this.leftHand=new qt,this.leftArm=new qt,this.leftForearm=new qt,this.leftPalm=new qt,this.rightLeg=new qt,this.leftLeg=new qt,this.countDown=60,this.direction=-1,this.initEffect()}initEffect(){new Wt(this.scene,Kt(kf),{position:{x:-150,y:40,z:0},group:this.body}),new Wt(this.scene,Kt(kf),{position:{x:150,y:40,z:0},rotation:{x:0,y:0,z:Math.PI},group:this.body}),new Wt(this.scene,Kt(FT),{position:{x:0,y:-60,z:0},group:this.body}),new Wt(this.scene,Kt(Sl),{position:{x:-0,y:-60,z:0},color:4473924,group:this.body}),new Wt(this.scene,Kt(Sl),{position:{x:-0,y:-130,z:0},color:4473924,group:this.body}),new Wt(this.scene,Kt(Sl),{position:{x:-0,y:-200,z:0},color:4473924,group:this.body}),new Wt(this.scene,Kt(Tl),{position:{x:-0,y:-60,z:0},color:4473924,group:this.body}),new Wt(this.scene,Kt(Tl),{position:{x:-0,y:-130,z:0},color:4473924,group:this.body}),new Wt(this.scene,Kt(Tl),{position:{x:-0,y:-200,z:0},color:4473924,group:this.body}),new Wt(this.scene,Kt(OT),{position:{x:0,y:-260,z:0},group:this.body}),new Wt(this.scene,Kt(NT),{position:{x:0,y:-410,z:0},color:4473924,group:this.body}),this.bulk.add(this.body),new sn(this.scene,{position:{x:0,y:145,z:0},group:this.head}),new hr(this.scene,{position:{x:0,y:250,z:0},group:this.head}),new Wt(this.scene,Kt(zT),{position:{x:0,y:220,z:10},rotation:{x:.3,y:0,z:0},group:this.head}),new Ff(this.scene,{position:{x:0,y:270,z:0},rotation:{x:Math.PI*1.5,y:0,z:0},group:this.head}),new IT(this.scene,{position:{x:0,y:270,z:0},rotation:{x:Math.PI*.5,y:0,z:0},group:this.head}),new Ff(this.scene,{position:{x:0,y:260,z:0},rotation:{x:3,y:0,z:0},group:this.head}),new Wt(this.scene,Kt(DT),{position:{x:0,y:350,z:0},color:255,group:this.head}),new Wt(this.scene,Kt(Uf),{position:{x:0,y:290,z:110},group:this.head}),new Wt(this.scene,Kt(Uf),{position:{x:0,y:200,z:80},rotation:{x:.5,y:0,z:0},group:this.head}),new Wt(this.scene,Kt(Of),{position:{x:80,y:180,z:70},rotation:{x:0,y:0,z:-.2},color:255,group:this.head}),new Wt(this.scene,Kt(Nf),{position:{x:80,y:180,z:70},rotation:{x:0,y:0,z:-.2},color:255,group:this.head}),new Wt(this.scene,Kt(Of),{position:{x:-80,y:180,z:70},rotation:{x:0,y:0,z:.2},color:255,group:this.head}),new Wt(this.scene,Kt(Nf),{position:{x:-80,y:180,z:70},rotation:{x:0,y:0,z:.2},color:255,group:this.head}),new jf(this.scene,{position:{x:0,y:230,z:110},rotation:{x:0,y:.4,z:0},side:xn,group:this.head}),new jf(this.scene,{position:{x:0,y:230,z:110},rotation:{x:0,y:Math.PI-.4,z:0},side:qe,group:this.head}),new qf(this.scene,{position:{x:80,y:250,z:10},rotation:{x:-.2,y:Math.PI/2,z:0},group:this.head}),new qf(this.scene,{position:{x:-80,y:250,z:10},rotation:{x:Math.PI-.2,y:-Math.PI/2,z:0},group:this.head}),this.bulk.add(this.head),this.leftHand.position.set(270,90,0),new sn(this.scene,{position:{x:0,y:0,z:0},rotation:{x:0,y:0,z:Math.PI/2},group:this.leftHand}),new sn(this.scene,{position:{x:160,y:20,z:0},rotation:{x:-.3,y:0,z:.2},radius:30,height:150,color:6710886,group:this.leftArm}),new sn(this.scene,{position:{x:140,y:120,z:-30},rotation:{x:-.3,y:0,z:.2},radius:20,height:200,color:6710886,group:this.leftArm}),new Wt(this.scene,Kt(Bf),{position:{x:0,y:10,z:-50},rotation:{x:-.3,y:0,z:.2},group:this.leftArm}),new Wt(this.scene,Yf($f),{position:{x:-40,y:50,z:-60},rotation:{x:-.3,y:0,z:-.5},color:255,side:Xe,group:this.leftArm}),this.leftForearm.position.set(120,-290,130),new sn(this.scene,{position:{x:0,y:0,z:170},rotation:{x:-Math.PI/2,y:0,z:0},color:255,radius:50,height:300,group:this.leftForearm}),new hr(this.scene,{position:{x:0,y:0,z:0},radius:50,color:4473924,group:this.leftForearm}),new sn(this.scene,{position:{x:0,y:0,z:330},rotation:{x:-Math.PI/2,y:0,z:0},radius:30,height:50,group:this.leftPalm}),new Wt(this.scene,Zf(Kf),{position:{x:20,y:30,z:350},rotation:{x:Math.PI/2,y:-Math.PI/2,z:0},color:4095,group:this.leftPalm}),new Wt(this.scene,Kt(Hf),{position:{x:0,y:30,z:350},rotation:{x:Math.PI/2,y:-Math.PI/2,z:0},color:4095,group:this.leftPalm}),this.leftForearm.add(this.leftPalm),this.leftArm.add(this.leftForearm),this.leftHand.add(this.leftArm),this.bulk.add(this.leftHand),this.rightHand.position.set(-270,90,0),new sn(this.scene,{position:{x:0,y:0,z:0},rotation:{x:0,y:0,z:Math.PI/2},group:this.rightHand}),new sn(this.scene,{position:{x:-170,y:10,z:0},rotation:{x:-.3,y:0,z:-.2},radius:30,height:150,color:6710886,group:this.rightArm}),new sn(this.scene,{position:{x:-150,y:110,z:-30},rotation:{x:-.3,y:0,z:-.2},radius:20,height:200,color:6710886,group:this.rightArm}),new Wt(this.scene,Kt(Bf),{position:{x:-100,y:10,z:-50},rotation:{x:-.3,y:0,z:-.2},group:this.rightArm}),new Wt(this.scene,Yf($f),{position:{x:40,y:70,z:30},rotation:{x:-.3,y:-Math.PI,z:-.5},color:255,side:Xe,group:this.rightArm}),this.rightForearm.position.set(-120,-310,100),new sn(this.scene,{position:{x:0,y:-150,z:80},rotation:{x:-.5,y:0,z:0},color:255,radius:50,height:300,group:this.rightForearm}),new hr(this.scene,{position:{x:0,y:0,z:0},radius:50,color:4473924,group:this.rightForearm}),new sn(this.scene,{position:{x:0,y:-300,z:160},rotation:{x:-.5,y:0,z:0},radius:30,height:50,group:this.rightPalm}),new Wt(this.scene,Zf(Kf),{position:{x:0,y:-300,z:190},rotation:{x:-Math.PI-.5,y:-Math.PI/2,z:0},color:4095,group:this.rightPalm}),new Wt(this.scene,Kt(Hf),{position:{x:20,y:-300,z:190},rotation:{x:-Math.PI-.5,y:-Math.PI/2,z:0},color:255,group:this.rightPalm}),this.rightForearm.add(this.rightPalm),this.rightArm.add(this.rightForearm),this.rightHand.add(this.rightArm),this.gun.position.set(-150,-800,400),new Wt(this.scene,Kt(kT),{position:{x:0,y:0,z:0},rotation:{x:-Math.PI-.5,y:-Math.PI/2,z:0},color:1052688,group:this.gun}),new Wt(this.scene,Kt(UT),{position:{x:20,y:150,z:-40},rotation:{x:-Math.PI-.5,y:-Math.PI/2,z:Math.PI/2},color:1052688,group:this.gun}),new sn(this.scene,{position:{x:30,y:0,z:40},rotation:{x:-.5,y:0,z:0},radius:20,height:30,color:4473924,group:this.gun}),new sn(this.scene,{position:{x:30,y:-90,z:90},rotation:{x:-.5,y:0,z:0},radius:30,height:200,open:!0,color:1052688,group:this.gun}),new HT(this.scene,{position:{x:30,y:-178,z:138},rotation:{x:-Math.PI/2-.5,y:0,z:0},color:1052688,group:this.gun}),new BT(this.scene,{position:{x:30,y:-155,z:125},rotation:{x:-.5,y:0,z:0},color:1052688,group:this.gun}),this.rightHand.add(this.gun),this.bulk.add(this.rightHand),this.rightLeg.position.set(0,-410,0),new Wt(this.scene,Kt(Vf),{position:{x:40,y:0,z:-80},rotation:{x:0,y:0,z:.2},group:this.rightLeg}),new xs(this.scene,{position:{x:200,y:-90,z:-60},rotation:{x:0,y:0,z:.2-Math.PI/2},group:this.rightLeg}),new Wt(this.scene,Kt(Gf),{position:{x:120,y:-490,z:-100},rotation:{x:0,y:0,z:.2},color:255,group:this.rightLeg}),new xs(this.scene,{position:{x:330,y:-540,z:-60},rotation:{x:0,y:0,z:.2-Math.PI/2},group:this.rightLeg}),new xs(this.scene,{position:{x:390,y:-840,z:-60},rotation:{x:0,y:0,z:.2-Math.PI/2},group:this.rightLeg}),new Wt(this.scene,Kt(Wf),{position:{x:430,y:-970,z:0},color:255,group:this.rightLeg}),new hr(this.scene,{position:{x:320,y:-940,z:0},radius:80,color:4473924,group:this.rightLeg}),new Wt(this.scene,Kt(Xf),{position:{x:430,y:-970,z:120},color:255,group:this.rightLeg}),this.bulk.add(this.rightLeg),this.leftLeg.position.set(0,-410,0),new Wt(this.scene,Kt(Vf),{position:{x:-190,y:30,z:-80},rotation:{x:0,y:0,z:-.2},group:this.leftLeg}),new xs(this.scene,{position:{x:-200,y:-90,z:-60},rotation:{x:0,y:0,z:Math.PI/2-.2},group:this.leftLeg}),new Wt(this.scene,Kt(Gf),{position:{x:-320,y:-450,z:-100},rotation:{x:0,y:0,z:-.2},color:255,group:this.leftLeg}),new xs(this.scene,{position:{x:-330,y:-540,z:-60},rotation:{x:0,y:0,z:Math.PI/2-.2},group:this.leftLeg}),new xs(this.scene,{position:{x:-390,y:-840,z:-60},rotation:{x:0,y:0,z:Math.PI/2-.2},group:this.leftLeg}),new Wt(this.scene,Kt(Wf),{position:{x:-230,y:-970,z:0},color:255,group:this.leftLeg}),new hr(this.scene,{position:{x:-320,y:-940,z:0},radius:80,color:4473924,group:this.leftLeg}),new Wt(this.scene,Kt(Xf),{position:{x:-230,y:-970,z:120},color:255,group:this.leftLeg}),this.bulk.add(this.leftLeg),this.scene.add(this.bulk),new pm(this.scene,{position:{x:0,y:-1480,z:0},rotation:{x:-Math.PI/2,y:0,z:0}}),new VT(this.scene),this.initTween(),this.initTweenReverse()}initTween(){this.tweenTransform.leftLegHorizontalRotate=new It(this.leftLeg.rotation).to({x:this.leftLeg.rotation.x,y:this.leftLeg.rotation.y+Math.PI,z:this.leftLeg.rotation.z},1e3),this.tweenTransform.leftLegVerticalRotate=new It(this.leftLeg.rotation).to({x:this.leftLeg.rotation.x,y:this.leftLeg.rotation.y+Math.PI,z:this.leftLeg.rotation.z+.2},1e3),this.tweenTransform.leftLegAroundRotate=new It(this.leftLeg.rotation).to({x:this.leftLeg.rotation.x+Math.PI/2,y:this.leftLeg.rotation.y+Math.PI,z:this.leftLeg.rotation.z+.2},1e3),this.tweenTransform.leftLegTranslate=new It(this.leftLeg.position).to({x:this.leftLeg.position.x,y:this.leftLeg.position.y+80,z:this.leftLeg.position.z-80},1e3),this.tweenTransform.leftLegHorizontalRotate.chain(this.tweenTransform.leftLegVerticalRotate),this.tweenTransform.leftLegVerticalRotate.chain(this.tweenTransform.leftLegAroundRotate),this.tweenTransform.leftLegAroundRotate.chain(this.tweenTransform.leftLegTranslate),this.tweenTransform.rightLegHorizontalRotate=new It(this.rightLeg.rotation).to({x:this.rightLeg.rotation.x,y:this.rightLeg.rotation.y+Math.PI,z:this.rightLeg.rotation.z},1e3),this.tweenTransform.rightLegVerticalRotate=new It(this.rightLeg.rotation).to({x:this.rightLeg.rotation.x,y:this.rightLeg.rotation.y+Math.PI,z:this.rightLeg.rotation.z-.2},1e3),this.tweenTransform.rightLegAroundRotate=new It(this.rightLeg.rotation).to({x:this.rightLeg.rotation.x+Math.PI/2,y:this.rightLeg.rotation.y+Math.PI,z:this.rightLeg.rotation.z-.2},1e3),this.tweenTransform.rightLegTranslate=new It(this.rightLeg.position).to({x:this.rightLeg.position.x,y:this.rightLeg.position.y+80,z:this.rightLeg.position.z-80},1e3),this.tweenTransform.rightLegHorizontalRotate.chain(this.tweenTransform.rightLegVerticalRotate),this.tweenTransform.rightLegVerticalRotate.chain(this.tweenTransform.rightLegAroundRotate),this.tweenTransform.rightLegAroundRotate.chain(this.tweenTransform.rightLegTranslate),this.tweenTransform.leftHandRotate=new It(this.leftHand.rotation).to({x:this.leftHand.rotation.x,y:this.leftHand.rotation.y+Math.PI/2,z:this.leftHand.rotation.z},1e3),this.tweenTransform.leftHandTranslate=new It(this.leftHand.position).to({x:this.leftHand.position.x-70,y:this.leftHand.position.y,z:this.leftHand.position.z-100},1e3),this.tweenTransform.leftArmRotate=new It(this.leftArm.rotation).to({x:this.leftArm.rotation.x+.3,y:this.leftArm.rotation.y,z:this.leftArm.rotation.z-.2},1e3),this.tweenTransform.leftForearmRotate=new It(this.leftForearm.rotation).to({x:-.3,y:-Math.PI/2-.1,z:.2},1e3),this.tweenTransform.leftPalmTranslate=new It(this.leftPalm.position).to({x:this.leftPalm.position.x,y:this.leftPalm.position.y,z:this.leftPalm.position.z-170},1e3),this.tweenTransform.leftHandRotate.chain(this.tweenTransform.leftHandTranslate),this.tweenTransform.leftHandTranslate.chain(this.tweenTransform.leftArmRotate),this.tweenTransform.leftArmRotate.chain(this.tweenTransform.leftForearmRotate),this.tweenTransform.leftForearmRotate.chain(this.tweenTransform.leftPalmTranslate),this.tweenTransform.rightForearmRotateY=new It(this.rightForearm.rotation).to({x:-Math.PI/2+.5,y:0,z:0},1e3),this.tweenTransform.rightHandRotate=new It(this.rightHand.rotation).to({x:this.rightHand.rotation.x,y:this.rightHand.rotation.y-Math.PI/2,z:this.rightHand.rotation.z},1e3),this.tweenTransform.rightHandTranslate=new It(this.rightHand.position).to({x:this.rightHand.position.x+70,y:this.rightHand.position.y,z:this.rightHand.position.z-100},1e3),this.tweenTransform.rightArmRotate=new It(this.rightArm.rotation).to({x:this.rightArm.rotation.x+.3,y:this.rightArm.rotation.y,z:this.rightArm.rotation.z+.2},1e3),this.tweenTransform.rightForearmRotate=new It(this.rightForearm.rotation).to({x:Math.PI/2,y:.5,z:Math.PI/2},1e3),this.tweenTransform.rightPalmTranslate=new It(this.rightPalm.position).to({x:this.rightPalm.position.x,y:this.rightPalm.position.y+170,z:this.rightPalm.position.z-80},1e3),this.tweenTransform.rightHandRotate.chain(this.tweenTransform.rightHandTranslate),this.tweenTransform.rightHandTranslate.chain(this.tweenTransform.rightArmRotate),this.tweenTransform.rightArmRotate.chain(this.tweenTransform.rightForearmRotate),this.tweenTransform.rightForearmRotate.chain(this.tweenTransform.rightPalmTranslate),this.tweenTransform.gunRotate=new It(this.gun.rotation).to({x:-Math.PI/2+.5,y:0,z:0},1e3),this.tweenTransform.gunTranslate=new It(this.gun.position).to({x:-200,y:this.gun.position.y+480,z:this.gun.position.z-600},1e3),this.tweenTransform.gunRotate.chain(this.tweenTransform.gunTranslate),this.tweenTransform.headTranslate=new It(this.head.position).to({x:this.head.position.x,y:this.head.position.y-200,z:this.head.position.z-100},1e3),this.tweenTransform.bulkTranslate=new It(this.bulk.position).to({y:-1e3},1e3),this.tweenTransform.controlsTarget=new It(this.controls.target).to({y:-1e3}),this.tweenTransform.cameraPosition=new It(this.camera.position).to({x:-1e3,z:1e3}),this.tweenTransform.headTranslate.onComplete(()=>{this.tweenTransform.leftLegHorizontalRotate.start(),this.tweenTransform.rightLegHorizontalRotate.start(),this.tweenTransform.rightForearmRotateY.start(),this.tweenTransform.gunRotate.start()}),this.tweenTransform.leftLegTranslate.onComplete(()=>{this.tweenTransform.bulkTranslate.start(),this.tweenTransform.controlsTarget.start(),this.tweenTransform.cameraPosition.start()}),this.tweenTransform.rightForearmRotateY.onComplete(()=>{this.tweenTransform.leftHandRotate.start(),this.tweenTransform.rightHandRotate.start()}),this.tweenTransform.bulkTranslate.onComplete(()=>{this.status="auto",this.audio.pause(),this.audio.currentTime=0})}initTweenReverse(){this.tweenTransform.leftLegHorizontalRotateReverse=new It(this.leftLeg.rotation).to({x:this.leftLeg.rotation.x,y:this.leftLeg.rotation.y,z:this.leftLeg.rotation.z},1e3),this.tweenTransform.leftLegVerticalRotateReverse=new It(this.leftLeg.rotation).to({x:this.leftLeg.rotation.x,y:this.leftLeg.rotation.y,z:this.leftLeg.rotation.z},1e3),this.tweenTransform.leftLegAroundRotateReverse=new It(this.leftLeg.rotation).to({x:this.leftLeg.rotation.x,y:this.leftLeg.rotation.y,z:this.leftLeg.rotation.z},1e3),this.tweenTransform.leftLegTranslateReverse=new It(this.leftLeg.position).to({x:this.leftLeg.position.x,y:this.leftLeg.position.y,z:this.leftLeg.position.z},1e3),this.tweenTransform.leftLegHorizontalRotateReverse.chain(this.tweenTransform.leftLegVerticalRotateReverse),this.tweenTransform.leftLegVerticalRotateReverse.chain(this.tweenTransform.leftLegAroundRotateReverse),this.tweenTransform.leftLegAroundRotateReverse.chain(this.tweenTransform.leftLegTranslateReverse),this.tweenTransform.rightLegHorizontalRotateReverse=new It(this.rightLeg.rotation).to({x:this.rightLeg.rotation.x,y:this.rightLeg.rotation.y,z:this.rightLeg.rotation.z},1e3),this.tweenTransform.rightLegVerticalRotateReverse=new It(this.rightLeg.rotation).to({x:this.rightLeg.rotation.x,y:this.rightLeg.rotation.y,z:this.rightLeg.rotation.z},1e3),this.tweenTransform.rightLegAroundRotateReverse=new It(this.rightLeg.rotation).to({x:this.rightLeg.rotation.x,y:this.rightLeg.rotation.y,z:this.rightLeg.rotation.z},1e3),this.tweenTransform.rightLegTranslateReverse=new It(this.rightLeg.position).to({x:this.rightLeg.position.x,y:this.rightLeg.position.y,z:this.rightLeg.position.z},1e3),this.tweenTransform.rightLegHorizontalRotateReverse.chain(this.tweenTransform.rightLegVerticalRotateReverse),this.tweenTransform.rightLegVerticalRotateReverse.chain(this.tweenTransform.rightLegAroundRotateReverse),this.tweenTransform.rightLegAroundRotateReverse.chain(this.tweenTransform.rightLegTranslateReverse),this.tweenTransform.leftHandRotateReverse=new It(this.leftHand.rotation).to({x:this.leftHand.rotation.x,y:this.leftHand.rotation.y,z:this.leftHand.rotation.z},1e3),this.tweenTransform.leftHandTranslateReverse=new It(this.leftHand.position).to({x:this.leftHand.position.x,y:this.leftHand.position.y,z:this.leftHand.position.z},1e3),this.tweenTransform.leftArmRotateReverse=new It(this.leftArm.rotation).to({x:this.leftArm.rotation.x,y:this.leftArm.rotation.y,z:this.leftArm.rotation.z},1e3),this.tweenTransform.leftForearmRotateReverse=new It(this.leftForearm.rotation).to({x:0,y:0,z:0},1e3),this.tweenTransform.leftPalmTranslateReverse=new It(this.leftPalm.position).to({x:this.leftPalm.position.x,y:this.leftPalm.position.y,z:this.leftPalm.position.z},1e3),this.tweenTransform.leftHandRotateReverse.chain(this.tweenTransform.leftHandTranslateReverse),this.tweenTransform.leftHandTranslateReverse.chain(this.tweenTransform.leftArmRotateReverse),this.tweenTransform.leftArmRotateReverse.chain(this.tweenTransform.leftForearmRotateReverse),this.tweenTransform.leftForearmRotateReverse.chain(this.tweenTransform.leftPalmTranslateReverse),this.tweenTransform.rightForearmRotateYReverse=new It(this.rightForearm.rotation).to({x:0,y:0,z:0},1e3),this.tweenTransform.rightHandRotateReverse=new It(this.rightHand.rotation).to({x:this.rightHand.rotation.x,y:this.rightHand.rotation.y,z:this.rightHand.rotation.z},1e3),this.tweenTransform.rightHandTranslateReverse=new It(this.rightHand.position).to({x:this.rightHand.position.x,y:this.rightHand.position.y,z:this.rightHand.position.z},1e3),this.tweenTransform.rightArmRotateReverse=new It(this.rightArm.rotation).to({x:this.rightArm.rotation.x,y:this.rightArm.rotation.y,z:this.rightArm.rotation.z},1e3),this.tweenTransform.rightForearmRotateReverse=new It(this.rightForearm.rotation).to({x:0,y:0,z:0},1e3),this.tweenTransform.rightPalmTranslateReverse=new It(this.rightPalm.position).to({x:this.rightPalm.position.x,y:this.rightPalm.position.y,z:this.rightPalm.position.z},1e3),this.tweenTransform.rightHandRotateReverse.chain(this.tweenTransform.rightHandTranslateReverse),this.tweenTransform.rightHandTranslateReverse.chain(this.tweenTransform.rightArmRotateReverse),this.tweenTransform.rightArmRotateReverse.chain(this.tweenTransform.rightForearmRotateReverse),this.tweenTransform.rightForearmRotateReverse.chain(this.tweenTransform.rightPalmTranslateReverse),this.tweenTransform.gunRotateReverse=new It(this.gun.rotation).to({x:0,y:0,z:0},200),this.tweenTransform.gunTranslateReverse=new It(this.gun.position).to({x:this.gun.position.x,y:this.gun.position.y,z:this.gun.position.z},200),this.tweenTransform.rightPalmTranslateReverse.chain(this.tweenTransform.gunRotateReverse),this.tweenTransform.gunRotateReverse.chain(this.tweenTransform.gunTranslateReverse),this.tweenTransform.headTranslateReverse=new It(this.head.position).to({x:this.head.position.x,y:this.head.position.y,z:this.head.position.z},1e3),this.tweenTransform.bulkTranslateReverse=new It(this.bulk.position).to({y:0},1e3),this.tweenTransform.controlsTargetReverse=new It(this.controls.target).to({y:0},1e3),this.tweenTransform.cameraPositionReverse=new It(this.camera.position).to({x:0,z:3e3},1e3),this.tweenTransform.headTranslateReverse.onComplete(()=>{this.tweenTransform.bulkTranslateReverse.start(),this.tweenTransform.leftLegHorizontalRotateReverse.start(),this.tweenTransform.rightLegHorizontalRotateReverse.start(),this.tweenTransform.rightForearmRotateYReverse.start(),this.tweenTransform.controlsTargetReverse.start(),this.tweenTransform.cameraPositionReverse.start()}),this.tweenTransform.rightForearmRotateYReverse.onComplete(()=>{this.tweenTransform.leftHandRotateReverse.start(),this.tweenTransform.rightHandRotateReverse.start()}),this.tweenTransform.rightPalmTranslateReverse.onComplete(()=>{this.status="robot",this.audio.pause()})}start(t){Qp(),this.time.value+=t}transform(){if(this.status==="robot")this.tweenTransform.headTranslate.start(),this.audio.play(),this.status="translating";else if(this.status==="auto")this.tweenTransform.headTranslateReverse.start(),this.audio.play(),this.status="translating";else return}};const WT=i=>{let t=null,e=null;const{scene:n,camera:s,controls:r,renderer:o}=Yc("tf",1e3);s.position.set(0,-1e3,3e3),r.target.set(0,0,0),Zc(n,s,(c,h,u)=>{t=new TWEEN.Tween(s.position).to({x:c.point.x*h,y:c.point.y*h,z:c.point.z*h},u).start(),e=new TWEEN.Tween(s.rotation).to({x:s.rotation.x,y:s.rotation.y,z:s.rotation.z},u).start()}),$c(s,r),i.OptimusPrime=new GT(n,s,r,o);const a=new Wc,l=()=>{t&&e&&(t.update(),e.update()),i.OptimusPrime.start(a.getDelta()),r.update(),o.render(n,s),requestAnimationFrame(l)};l(),window.addEventListener("resize",()=>qc(s,o))};const XT={data(){return{transformer:{OptimusPrime:null}}},mounted(){WT(this.transformer)},unmounted(){window.removeEventListener("resize",()=>{})},methods:{transform(i){i.preventDefault(),i.stopPropagation(),this.transformer.OptimusPrime.transform()}}},mm=i=>(T0("data-v-4d5ff822"),i=i(),E0(),i),jT={class:"wrap"},qT=mm(()=>ni("canvas",{id:"tf"}," 浏览器不支持canvas，请切换浏览器重试 ",-1)),YT={class:"actions"},$T=["onclick"],ZT=mm(()=>ni("audio",{src:"/src/assets/transform.mp3",loop:"loop",id:"audio"},null,-1));function KT(i,t,e,n,s,r){return _i(),Vi("div",jT,[qT,ni("div",YT,[ni("a",{onclick:r.transform},"transform",8,$T)]),ZT])}const JT=_a(XT,[["render",KT],["__scopeId","data-v-4d5ff822"]]);class QT{constructor(t,e){this.scene=t,this.life=e,this.init()}init(){const t=new $s(50,20,0,Math.PI*2),e=new we({uniforms:{u_opacity:this.life,u_color:{value:new Ct(We.circleColor)}},transparent:!0,vertexShader:`
        void main() {
          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
      `,fragmentShader:`
        uniform float u_opacity;
        uniform vec3 u_color;

        void main() {
          gl_FragColor = vec4(u_color, u_opacity);
        }
      `});this.mesh=new Ot(t,e),this.mesh.rotateX(-Math.PI/2),this.scene.add(this.mesh)}alive(t){this.mesh.position.copy(t)}}class t2{constructor(t){this.scene=t,this.font=null,this.init()}init(){new fm().load("/STXinwei_Regular.json",e=>{this.font=e,this.createTextQueue()})}createTextQueue(){[{text:"点击地面引导瓦力前进",size:200,position:{x:-1e3,y:1,z:1e3},color:"#666666"}].forEach(t=>{this.createText(t)})}createText(t){const e=new dm(t.text,{font:this.font,size:t.size,height:2}),n=new we({uniforms:{u_color:{value:new Ct(t.color)}},vertexShader:`
        void main() {
          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
      `,fragmentShader:`
        uniform vec3 u_color;

        void main() {
          gl_FragColor = vec4(u_color, 1.0);
        }
      `}),s=new Ot(e,n);s.position.copy(t.position),s.rotateX(-Math.PI/2),this.scene.add(s)}}class Be{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.width=e.width||100,this.height=e.height||100,this.depth=e.depth||100,this.color=e.color||16766720,this.group=e.group||t,this.init()}init(){const t=new Qi(this.width,this.height,this.depth,2,2),e=new Ie({color:this.color}),n=new Ot(t,e);n.castShadow=!0,n.receiveShadow=!0,n.rotateX(this.rotation.x),n.rotateY(this.rotation.y),n.rotateZ(this.rotation.z),n.position.copy(this.position),this.group?this.group.add(n):this.scene.add(n)}}class ur{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||10066329,this.radius=e.radius||50,this.height=e.height||50,this.open=e.open||!1,this.group=e.group||null,this.init()}init(){const t=new oi(this.radius,this.radius,this.height,20,2,this.open),e=new Ie({color:this.color}),n=new Ot(t,e);n.castShadow=!0,n.rotateX(this.rotation.x),n.rotateY(this.rotation.y),n.rotateZ(this.rotation.z),n.position.copy(this.position),this.group?this.group.add(n):this.scene.add(n)}}class ve{constructor(t,e={}){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.depth=e.depth||200,this.points=e.points||[],this.color=e.color||10066329,this.group=e.group||t,this.init()}init(){const t={steps:2,depth:this.depth,bevelEnabled:!0,bevelThickness:0,bevelSize:0,bevelOffset:0,bevelSegments:1},e=new qr(this.points,t),n=new Ie({color:this.color}),s=new Ot(e,n);s.castShadow=!0,s.rotateX(this.rotation.x),s.rotateY(this.rotation.y),s.rotateZ(this.rotation.z),s.position.copy(this.position),this.group?this.group.add(s):this.scene.add(s)}}class Jf{constructor(t,e={}){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.depth=e.depth||200,this.points=e.points||[],this.color=e.color||10066329,this.step=e.step||0,this.group=e.group||t,this.init()}init(){const t={steps:2,depth:this.depth,bevelEnabled:!0,bevelThickness:0,bevelSize:0,bevelOffset:0,bevelSegments:1},e=new qr(this.points,t),n=new we({uniforms:{u_step:this.step,u_color:{value:new Ct(this.color)}},transparent:!0,vertexShader:`
        varying vec2 v_position;

        void main() {
          v_position = vec2(position);
          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
      `,fragmentShader:`
        precision mediump float;
        varying vec2 v_position;

        uniform vec3 u_color;
        uniform float u_step;

        void main() {
          float angle = atan(v_position.x - 200.0, v_position.y - 150.0);
          float f_opacity = mod(angle + u_step, 0.5) + 0.5;
          float x = u_color.x * f_opacity;
          float y = u_color.y * f_opacity;
          float z = u_color.z * f_opacity;
          gl_FragColor = vec4(vec3(x, y, z), 1.0);
        }
      `}),s=new Ot(e,n);s.castShadow=!0,s.rotateX(this.rotation.x),s.rotateY(this.rotation.y),s.rotateZ(this.rotation.z),s.position.copy(this.position),this.group?this.group.add(s):this.scene.add(s)}}const ys=(i=200,t=150)=>{const e=new fe;return e.moveTo(0,0),e.lineTo(0,t),e.lineTo(i,t*1.2),e.ellipse(0,-t*.7,t*.7,t*.7,Math.PI/2,-Math.PI/2,!0),e.lineTo(0,0),e},e2=(i=100,t=202)=>{const e=new fe;e.moveTo(0,0),e.lineTo(0,t),e.lineTo(i,t),e.lineTo(i,0),e.lineTo(0,0);const n=new fe().moveTo(i*.1,t*.4).lineTo(i*.9,t*.4).lineTo(i*.9,t*.5).lineTo(i*.1,t*.5).lineTo(i*.1,t*.4),s=new fe().moveTo(i*.1,t*.55).lineTo(i*.9,t*.55).lineTo(i*.9,t*.65).lineTo(i*.1,t*.65).lineTo(i*.1,t*.55),r=new fe().moveTo(i*.1,t*.7).lineTo(i*.9,t*.7).lineTo(i*.9,t*.8).lineTo(i*.1,t*.8).lineTo(i*.1,t*.7),o=new fe().moveTo(i*.1,t*.85).lineTo(i*.9,t*.85).lineTo(i*.9,t*.95).lineTo(i*.1,t*.95).lineTo(i*.1,t*.85),a=new fe().absarc(i*.3,t*.15,i*.2,0,Math.PI*2);return e.holes.push(n),e.holes.push(s),e.holes.push(r),e.holes.push(o),e.holes.push(a),e},n2=(i=100,t=202)=>{const e=new fe;e.moveTo(0,0),e.lineTo(0,t),e.lineTo(i,t),e.lineTo(i,0),e.lineTo(0,0),e.holes.push(new fe().absarc(i*.2,t*.45,i*.15,0,Math.PI*2));for(let n=0;n<10;n++)e.holes.push(new fe().moveTo(i*.4,t*(.05+n*.05)).lineTo(i*.9,t*(.05+n*.05)).lineTo(i*.9,t*(.08+n*.05)).lineTo(i*.4,t*(.08+n*.05)).lineTo(i*.4,t*(.05+n*.05)));return e},vs=(i=100)=>{const t=new fe;return t.moveTo(0,0),t.lineTo(i*.05,i),t.lineTo(i*.1,0),t.lineTo(0,0),t},ws=(i=100)=>{const t=new fe().absarc(0,0,i,0,Math.PI*2),e=i/2,n=new fe().absarc(0,e,i/4,0,Math.PI*2),s=new fe().absarc(e*Math.cos(Math.PI*(1+1/6)),e*Math.sin(Math.PI*(1+1/6)),i/4,0,Math.PI*2),r=new fe().absarc(e*Math.cos(-Math.PI/6),e*Math.sin(-Math.PI/6),i/4,0,Math.PI*2);return t.holes.push(n),t.holes.push(s),t.holes.push(r),t},Qf=()=>{const i=new fe().moveTo(0,-100).lineTo(400,-100).absarc(400,0,100,-Math.PI/2,Math.PI/7).lineTo(390,350).absarc(300,300,100,Math.PI*0,Math.PI*.8).lineTo(-70,70).absarc(0,0,100,Math.PI*.7,Math.PI*1.5),t=new fe().moveTo(0,-80).lineTo(400,-80).absarc(400,0,80,-Math.PI/2,Math.PI/7).lineTo(370,340).absarc(300,300,80,Math.PI*0,Math.PI*.8).lineTo(-57,57).absarc(0,0,80,Math.PI*.7,Math.PI*1.5);return i.holes.push(t),i};class td{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.radius=e.radius||100,this.thetaLength=e.thetaLength||Math.PI*2,this.color=e.color||10066329,this.group=e.group||t,this.init()}init(){const t=new yn(this.radius,20,10,0,Math.PI*2,0,this.thetaLength),e=new Yb({color:this.color,metalness:.25,roughness:0,transmission:1}),n=new Ot(t,e);n.castShadow=!0,n.rotateX(this.rotation.x),n.rotateY(this.rotation.y),n.rotateZ(this.rotation.z),n.position.copy(this.position),this.group?this.group.add(n):this.scene.add(n)}}class i2{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||10066329,this.opacity=e.opacity||1,this.radius=e.radius||50,this.height=e.height||50,this.open=e.open||!1,this.group=e.group||null,this.init()}init(){const t=new oi(this.radius,this.radius,this.height,20,2,this.open),e=new we({uniforms:{u_opacity:this.opacity,u_color:{value:new Ct(this.color)}},transparent:!0,vertexShader:`
        void main() {
          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
      `,fragmentShader:`
        uniform float u_opacity;
        uniform vec3 u_color;

        void main() {
          gl_FragColor = vec4(u_color, u_opacity);
        }
      `}),n=new Ot(t,e);n.castShadow=!0,n.rotateX(this.rotation.x),n.rotateY(this.rotation.y),n.rotateZ(this.rotation.z),n.position.copy(this.position),this.group?this.group.add(n):this.scene.add(n)}}class s2{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.width=e.width||100,this.height=e.height||100,this.depth=e.depth||100,this.color=e.color||16766720,this.group=e.group||t,this.init()}init(){const t=new Qi(this.width,this.height,this.depth,2,2),e=new Ie({color:this.color}),n=new Ot(t,e);n.castShadow=!0,n.receiveShadow=!0,n.rotateX(this.rotation.x),n.rotateY(this.rotation.y),n.rotateZ(this.rotation.z),n.position.copy(this.position),new Qs().load("/src/assets/name.png",r=>{const o=new qs(this.width,this.height,2,2),a=new Ie({color:this.color,map:r}),l=new Ot(o,a);l.translateY(this.position.y),l.translateZ(this.position.z+this.depth/2+1),this.group?(this.group.add(n),this.group.add(l)):(this.group.add(n),this.scene.add(l))})}}class El{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.radius=e.radius||100,this.color=e.color||10066329,this.group=e.group||t,this.init()}init(){const t=new yn(this.radius,20,10,0,Math.PI*2),e=new Ie({color:this.color}),n=new Ot(t,e);n.castShadow=!0,n.rotateX(this.rotation.x),n.rotateY(this.rotation.y),n.rotateZ(this.rotation.z),n.position.copy(this.position),this.group?this.group.add(n):this.scene.add(n)}}class r2{constructor(t,e,n){this.scene=t,this.camera=e,this.controls=n,this.group=new qt,this.body=new qt,this.neck=new qt,this.head=new qt,this.leftHand=new qt,this.rightHand=new qt,this.tyre1=new qt,this.tyre2=new qt,this.tyre3=new qt,this.leftTrack=new qt,this.tyre4=new qt,this.tyre5=new qt,this.tyre6=new qt,this.rightTrack=new qt,this.running=!1,this.trackStep={value:0},this.neckRotateAngle=0,this.neckRotateStep=.01,this.flashLightOpacity={value:1},this.audio=document.getElementById("walk-audio"),this.init()}init(){new Be(this.scene,{width:600,height:600,depth:600,color:16766720,group:this.body}),new Be(this.scene,{position:{x:-50,y:198,z:300},width:100,height:200,depth:20,color:10066329,group:this.body}),new ve(this.scene,{position:{x:-100,y:97,z:300},depth:12,color:6710886,points:e2(),group:this.body}),new i2(this.scene,{position:{x:-70,y:125,z:301},rotation:{x:Math.PI/2,y:0,z:0},radius:28,height:20,color:"#f00",opacity:this.flashLightOpacity,group:this.body}),new Be(this.scene,{position:{x:50,y:198,z:300},width:100,height:200,depth:20,group:this.body}),new ve(this.scene,{position:{x:0,y:97,z:300},depth:12,color:3355443,points:n2(),group:this.body}),new s2(this.scene,{position:{x:0,y:-100,z:300},width:500,height:380,depth:100,group:this.body}),new ve(this.scene,{rotation:{x:0,y:Math.PI/2,z:0},depth:200,color:10066329,points:ws(80),group:this.tyre1}),this.tyre1.position.set(300,-100,-100),new ve(this.scene,{rotation:{x:0,y:Math.PI/2,z:0},depth:200,color:10066329,points:ws(80),group:this.tyre2}),this.tyre2.position.set(300,-400,-200),new ve(this.scene,{rotation:{x:0,y:Math.PI/2,z:0},depth:200,color:10066329,points:ws(80),group:this.tyre3}),this.tyre3.position.set(300,-400,200),new Jf(this.scene,{rotation:{x:0,y:Math.PI/2,z:0},depth:200,color:3355443,points:Qf(),step:this.trackStep,group:this.rightTrack}),this.rightTrack.position.set(300,-400,200),new ve(this.scene,{rotation:{x:0,y:Math.PI/2,z:0},depth:200,color:10066329,points:ws(80),group:this.tyre4}),this.tyre4.position.set(-500,-100,-100),new ve(this.scene,{rotation:{x:0,y:Math.PI/2,z:0},depth:200,color:10066329,points:ws(80),group:this.tyre5}),this.tyre5.position.set(-500,-400,-200),new ve(this.scene,{rotation:{x:0,y:Math.PI/2,z:0},depth:200,color:10066329,points:ws(80),group:this.tyre6}),this.tyre6.position.set(-500,-400,200),new Jf(this.scene,{rotation:{x:0,y:Math.PI/2,z:0},depth:200,color:3355443,points:Qf(),step:this.trackStep,group:this.leftTrack}),this.leftTrack.position.set(-500,-400,200),new ur(this.scene,{rotation:{x:0,y:0,z:Math.PI/2},radius:50,height:160,group:this.neck}),new Be(this.scene,{position:{x:0,y:0,z:-190},width:200,height:100,depth:300,group:this.neck}),this.neck.rotateX(Math.PI/4),this.neck.position.set(0,340,200),new El(this.scene,{position:{x:0,y:0,z:0},radius:50,group:this.head}),new Be(this.scene,{width:200,height:50,depth:200,position:{x:0,y:40,z:0},color:10066329,group:this.head}),new ve(this.scene,{position:{x:20,y:50,z:0},points:ys(180,130),group:this.head}),new ve(this.scene,{position:{x:10,y:40,z:20},depth:160,points:ys(),color:6710886,group:this.head}),new ve(this.scene,{position:{x:20,y:50,z:-200},points:ys(160,110),group:this.head}),new ur(this.scene,{position:{x:130,y:120,z:200},rotation:{x:Math.PI/2,y:0,z:0},radius:75,height:20,color:6710886,group:this.head}),new td(this.scene,{position:{x:130,y:120,z:130},rotation:{x:Math.PI/2,y:0,z:0},color:new Ct("#000"),radius:100,thetaLength:.8,group:this.head}),new ve(this.scene,{position:{x:-20,y:180,z:0},rotation:{x:0,y:0,z:Math.PI},points:ys(180,130),group:this.head}),new ve(this.scene,{position:{x:-10,y:190,z:20},rotation:{x:0,y:0,z:Math.PI},depth:160,points:ys(),color:6710886,group:this.head}),new ve(this.scene,{position:{x:-20,y:160,z:-200},rotation:{x:0,y:0,z:Math.PI},points:ys(160,110),group:this.head}),new ur(this.scene,{position:{x:-130,y:120,z:200},rotation:{x:Math.PI/2,y:0,z:0},radius:75,height:20,color:6710886,group:this.head}),new td(this.scene,{position:{x:-130,y:120,z:130},rotation:{x:Math.PI/2,y:0,z:0},color:new Ct("#000"),radius:100,thetaLength:.8,group:this.head}),this.neck.add(this.head),this.head.rotateX(-Math.PI/4),this.head.position.set(0,20,-370),new El(this.scene,{position:{x:0,y:0,z:0},radius:50,group:this.leftHand}),new Be(this.scene,{width:100,height:200,depth:400,position:{x:0,y:0,z:240},group:this.leftHand}),new ur(this.scene,{position:{x:0,y:0,z:500},rotation:{x:Math.PI/2,y:0,z:0},radius:40,height:160,group:this.leftHand}),new Be(this.scene,{width:50,height:200,depth:50,position:{x:0,y:0,z:600},color:10066329,group:this.leftHand}),new Be(this.scene,{width:20,height:100,depth:100,position:{x:-50,y:0,z:650},rotation:{x:0,y:-.8,z:0},color:10066329,group:this.leftHand}),new ve(this.scene,{position:{x:-90,y:50,z:680},rotation:{x:Math.PI/2,y:0,z:0},depth:100,points:vs(),group:this.leftHand}),new Be(this.scene,{width:20,height:100,depth:100,position:{x:50,y:55,z:650},rotation:{x:0,y:.8,z:0},color:10066329,group:this.leftHand}),new ve(this.scene,{position:{x:80,y:105,z:680},rotation:{x:Math.PI/2,y:0,z:0},depth:100,points:vs(),group:this.leftHand}),new Be(this.scene,{width:20,height:100,depth:100,position:{x:50,y:-55,z:650},rotation:{x:0,y:.8,z:0},color:10066329,group:this.leftHand}),new ve(this.scene,{position:{x:80,y:-5,z:680},rotation:{x:Math.PI/2,y:0,z:0},depth:100,points:vs(),group:this.leftHand}),this.leftHand.rotateY(.2),this.leftHand.position.set(340,200,-100),new El(this.scene,{position:{x:0,y:0,z:0},radius:50,group:this.rightHand}),new Be(this.scene,{width:100,height:200,depth:400,position:{x:0,y:0,z:240},group:this.rightHand}),new ur(this.scene,{position:{x:0,y:0,z:500},rotation:{x:Math.PI/2,y:0,z:0},radius:40,height:160,group:this.rightHand}),new Be(this.scene,{width:50,height:200,depth:50,position:{x:0,y:0,z:600},color:10066329,group:this.rightHand}),new Be(this.scene,{width:20,height:100,depth:100,position:{x:50,y:0,z:650},rotation:{x:0,y:.8,z:0},color:10066329,group:this.rightHand}),new ve(this.scene,{position:{x:80,y:50,z:680},rotation:{x:Math.PI/2,y:0,z:0},depth:100,points:vs(),group:this.rightHand}),new Be(this.scene,{width:20,height:100,depth:100,position:{x:-50,y:55,z:650},rotation:{x:0,y:-.8,z:0},color:10066329,group:this.rightHand}),new ve(this.scene,{position:{x:-90,y:105,z:680},rotation:{x:Math.PI/2,y:0,z:0},depth:100,points:vs(),group:this.rightHand}),new Be(this.scene,{width:20,height:100,depth:100,position:{x:-50,y:-55,z:650},rotation:{x:0,y:-.8,z:0},color:10066329,group:this.rightHand}),new ve(this.scene,{position:{x:-90,y:-5,z:680},rotation:{x:Math.PI/2,y:0,z:0},depth:100,points:vs(),group:this.rightHand}),this.rightHand.rotateY(-.2),this.rightHand.position.set(-340,200,-100),this.group.add(this.body),this.group.add(this.neck),this.group.add(this.leftHand),this.group.add(this.rightHand),this.group.add(this.tyre1),this.group.add(this.tyre2),this.group.add(this.tyre3),this.group.add(this.rightTrack),this.group.add(this.tyre4),this.group.add(this.tyre5),this.group.add(this.tyre6),this.group.add(this.leftTrack),this.group.translateY(500),this.scene.add(this.group)}start(t){const e=t.x-this.group.position.x,n=t.z-this.group.position.z,s=Math.sqrt(e*e+n*n);let r=0;if(n===0&&e<0)r=Math.PI;else{if(n===0&&e>=0)return;r=Math.atan(e/n)}n<0&&(r=Math.PI+r);const o=new It(this.group.rotation).to({y:r},200),a=new It(this.group.position).to({x:t.x,y:this.group.position.y,z:t.z},s);o.chain(a),o.start(),a.onStart(()=>{this.running=!0,this.audio.currentTime=0,this.audio.play()}),a.onUpdate(()=>{this.camera.position.set(this.group.position.x,this.group.position.y+3e3,this.group.position.z+2e3),this.controls.target.set(this.group.position.x,0,this.group.position.z)}),a.onComplete(()=>{this.running=!1,this.audio.pause()})}animation(t){this.neckRotateAngle+=this.neckRotateStep,(this.neckRotateAngle>=.2||this.neckRotateAngle<=0)&&(this.neckRotateStep*=-1),this.head.rotateX(-this.neckRotateStep),this.neck.rotateX(this.neckRotateStep),this.flashLightOpacity.value-=t*this.neckRotateStep*300,this.rollTrack(t),Qp()}rollTrack(t){const e=t*10;this.running&&(this.tyre1.rotateX(e),this.tyre2.rotateX(e),this.tyre3.rotateX(e),this.tyre4.rotateX(e),this.tyre5.rotateX(e),this.tyre6.rotateX(e),this.trackStep.value=(this.trackStep.value+e)%(Math.PI*2))}}class o2{constructor(t,e,n,s){this.scene=t,this.camera=e,this.controls=n,this.renderer=s,this.time={value:0},this.init()}init(){new pm(this.scene,{rotation:{x:-Math.PI/2,y:0,z:0}}),new t2(this.scene),this.pointer=new QT(this.scene,this.time),this.walle=new r2(this.scene,this.camera,this.controls),Zc(this.scene,this.camera,(t,e,n)=>{this.time.value=1,this.pointer.alive({x:t.point.x,y:1,z:t.point.z}),this.walle.start(t.point)}),$c(this.camera,this.controls)}start(t){this.walle.animation(t),this.time.value>0&&(this.time.value-=t)}}const a2=()=>{const{scene:i,camera:t,controls:e,renderer:n}=Yc("dinosaur");t.position.set(0,3e3,2e3),e.target.set(0,0,0);const s=new o2(i,t,e,n),r=new Wc,o=()=>{const a=r.getDelta();s.start(a),e.update(),n.render(i,t),requestAnimationFrame(o)};o(),window.addEventListener("resize",()=>qc(t,n))},l2={mounted(){a2()},unmounted(){window.removeEventListener("resize",()=>{})}},c2={class:"wrap"},h2=ni("canvas",{id:"dinosaur"}," 浏览器不支持canvas，请切换浏览器重试 ",-1),u2=ni("audio",{src:"/src/assets/walk.mp3",loop:"loop",id:"walk-audio"},null,-1),f2=[h2,u2];function d2(i,t,e,n,s,r){return _i(),Vi("div",c2,f2)}const p2=_a(l2,[["render",d2]]),gm=[{path:"/",component:RT,title:"3d city"},{path:"/transformer",component:JT,title:"transformer"},{path:"/walle",component:p2,title:"walle"}],m2=ex({history:__(),routes:gm});const g2={data(){return{routes:gm,showMenus:!1}},methods:{switchShowMenus(){this.showMenus=!this.showMenus}}},_2=["onmouseleave"],x2=["onmouseenter"],y2={key:1,class:"menus-wrap"};function v2(i,t,e,n,s,r){const o=uh("router-link"),a=uh("router-view");return _i(),Vi("div",null,[ni("div",{class:"menus",onmouseleave:r.switchShowMenus},[s.showMenus?(_i(),Vi("div",y2,[(_i(!0),Vi(Tn,null,$0(s.routes,l=>(_i(),pg(o,{key:l.title,to:l.path},{default:Rd(()=>[Jd(Pm(l.title),1)]),_:2},1032,["to"]))),128))])):(_i(),Vi("a",{key:0,class:"more-icon",onmouseenter:r.switchShowMenus},"...",8,x2))],8,_2),on(a)])}const w2=_a(g2,[["render",v2],["__scopeId","data-v-eacaee66"]]),_m=Kg(w2);_m.use(m2);_m.mount("#app");
