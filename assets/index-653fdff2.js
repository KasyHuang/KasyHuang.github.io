(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function e(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(s){if(s.ep)return;s.ep=!0;const r=e(s);fetch(s.href,r)}})();function Zl(i,t){const e=Object.create(null),n=i.split(",");for(let s=0;s<n.length;s++)e[n[s]]=!0;return t?s=>!!e[s.toLowerCase()]:s=>!!e[s]}function Kl(i){if(Nt(i)){const t={};for(let e=0;e<i.length;e++){const n=i[e],s=ye(n)?um(n):Kl(n);if(s)for(const r in s)t[r]=s[r]}return t}else{if(ye(i))return i;if(he(i))return i}}const lm=/;(?![^(]*\))/g,cm=/:([^]+)/,hm=/\/\*.*?\*\//gs;function um(i){const t={};return i.replace(hm,"").split(lm).forEach(e=>{if(e){const n=e.split(cm);n.length>1&&(t[n[0].trim()]=n[1].trim())}}),t}function Jl(i){let t="";if(ye(i))t=i;else if(Nt(i))for(let e=0;e<i.length;e++){const n=Jl(i[e]);n&&(t+=n+" ")}else if(he(i))for(const e in i)i[e]&&(t+=e+" ");return t.trim()}const fm="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",dm=Zl(fm);function Bf(i){return!!i||i===""}const pm=i=>ye(i)?i:i==null?"":Nt(i)||he(i)&&(i.toString===Wf||!Ut(i.toString))?JSON.stringify(i,Vf,2):String(i),Vf=(i,t)=>t&&t.__v_isRef?Vf(i,t.value):Ms(t)?{[`Map(${t.size})`]:[...t.entries()].reduce((e,[n,s])=>(e[`${n} =>`]=s,e),{})}:Hf(t)?{[`Set(${t.size})`]:[...t.values()]}:he(t)&&!Nt(t)&&!Xf(t)?String(t):t,ce={},ws=[],bn=()=>{},mm=()=>!1,gm=/^on[^a-z]/,Go=i=>gm.test(i),Ql=i=>i.startsWith("onUpdate:"),De=Object.assign,tc=(i,t)=>{const e=i.indexOf(t);e>-1&&i.splice(e,1)},_m=Object.prototype.hasOwnProperty,Kt=(i,t)=>_m.call(i,t),Nt=Array.isArray,Ms=i=>Wo(i)==="[object Map]",Hf=i=>Wo(i)==="[object Set]",Ut=i=>typeof i=="function",ye=i=>typeof i=="string",ec=i=>typeof i=="symbol",he=i=>i!==null&&typeof i=="object",Gf=i=>he(i)&&Ut(i.then)&&Ut(i.catch),Wf=Object.prototype.toString,Wo=i=>Wf.call(i),xm=i=>Wo(i).slice(8,-1),Xf=i=>Wo(i)==="[object Object]",nc=i=>ye(i)&&i!=="NaN"&&i[0]!=="-"&&""+parseInt(i,10)===i,To=Zl(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Xo=i=>{const t=Object.create(null);return e=>t[e]||(t[e]=i(e))},vm=/-(\w)/g,Dn=Xo(i=>i.replace(vm,(t,e)=>e?e.toUpperCase():"")),ym=/\B([A-Z])/g,Us=Xo(i=>i.replace(ym,"-$1").toLowerCase()),jo=Xo(i=>i.charAt(0).toUpperCase()+i.slice(1)),pa=Xo(i=>i?`on${jo(i)}`:""),gr=(i,t)=>!Object.is(i,t),ma=(i,t)=>{for(let e=0;e<i.length;e++)i[e](t)},Do=(i,t,e)=>{Object.defineProperty(i,t,{configurable:!0,enumerable:!1,value:e})},wm=i=>{const t=parseFloat(i);return isNaN(t)?i:t};let Hc;const Mm=()=>Hc||(Hc=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});let vn;class bm{constructor(t=!1){this.detached=t,this._active=!0,this.effects=[],this.cleanups=[],this.parent=vn,!t&&vn&&(this.index=(vn.scopes||(vn.scopes=[])).push(this)-1)}get active(){return this._active}run(t){if(this._active){const e=vn;try{return vn=this,t()}finally{vn=e}}}on(){vn=this}off(){vn=this.parent}stop(t){if(this._active){let e,n;for(e=0,n=this.effects.length;e<n;e++)this.effects[e].stop();for(e=0,n=this.cleanups.length;e<n;e++)this.cleanups[e]();if(this.scopes)for(e=0,n=this.scopes.length;e<n;e++)this.scopes[e].stop(!0);if(!this.detached&&this.parent&&!t){const s=this.parent.scopes.pop();s&&s!==this&&(this.parent.scopes[this.index]=s,s.index=this.index)}this.parent=void 0,this._active=!1}}}function Sm(i,t=vn){t&&t.active&&t.effects.push(i)}function Tm(){return vn}const ic=i=>{const t=new Set(i);return t.w=0,t.n=0,t},jf=i=>(i.w&_i)>0,qf=i=>(i.n&_i)>0,Em=({deps:i})=>{if(i.length)for(let t=0;t<i.length;t++)i[t].w|=_i},Am=i=>{const{deps:t}=i;if(t.length){let e=0;for(let n=0;n<t.length;n++){const s=t[n];jf(s)&&!qf(s)?s.delete(i):t[e++]=s,s.w&=~_i,s.n&=~_i}t.length=e}},xl=new WeakMap;let nr=0,_i=1;const vl=30;let wn;const Ui=Symbol(""),yl=Symbol("");class sc{constructor(t,e=null,n){this.fn=t,this.scheduler=e,this.active=!0,this.deps=[],this.parent=void 0,Sm(this,n)}run(){if(!this.active)return this.fn();let t=wn,e=pi;for(;t;){if(t===this)return;t=t.parent}try{return this.parent=wn,wn=this,pi=!0,_i=1<<++nr,nr<=vl?Em(this):Gc(this),this.fn()}finally{nr<=vl&&Am(this),_i=1<<--nr,wn=this.parent,pi=e,this.parent=void 0,this.deferStop&&this.stop()}}stop(){wn===this?this.deferStop=!0:this.active&&(Gc(this),this.onStop&&this.onStop(),this.active=!1)}}function Gc(i){const{deps:t}=i;if(t.length){for(let e=0;e<t.length;e++)t[e].delete(i);t.length=0}}let pi=!0;const Yf=[];function ks(){Yf.push(pi),pi=!1}function Bs(){const i=Yf.pop();pi=i===void 0?!0:i}function Ye(i,t,e){if(pi&&wn){let n=xl.get(i);n||xl.set(i,n=new Map);let s=n.get(e);s||n.set(e,s=ic()),$f(s)}}function $f(i,t){let e=!1;nr<=vl?qf(i)||(i.n|=_i,e=!jf(i)):e=!i.has(wn),e&&(i.add(wn),wn.deps.push(i))}function Jn(i,t,e,n,s,r){const o=xl.get(i);if(!o)return;let a=[];if(t==="clear")a=[...o.values()];else if(e==="length"&&Nt(i)){const l=Number(n);o.forEach((c,h)=>{(h==="length"||h>=l)&&a.push(c)})}else switch(e!==void 0&&a.push(o.get(e)),t){case"add":Nt(i)?nc(e)&&a.push(o.get("length")):(a.push(o.get(Ui)),Ms(i)&&a.push(o.get(yl)));break;case"delete":Nt(i)||(a.push(o.get(Ui)),Ms(i)&&a.push(o.get(yl)));break;case"set":Ms(i)&&a.push(o.get(Ui));break}if(a.length===1)a[0]&&wl(a[0]);else{const l=[];for(const c of a)c&&l.push(...c);wl(ic(l))}}function wl(i,t){const e=Nt(i)?i:[...i];for(const n of e)n.computed&&Wc(n);for(const n of e)n.computed||Wc(n)}function Wc(i,t){(i!==wn||i.allowRecurse)&&(i.scheduler?i.scheduler():i.run())}const Cm=Zl("__proto__,__v_isRef,__isVue"),Zf=new Set(Object.getOwnPropertyNames(Symbol).filter(i=>i!=="arguments"&&i!=="caller").map(i=>Symbol[i]).filter(ec)),Pm=rc(),Lm=rc(!1,!0),Rm=rc(!0),Xc=Im();function Im(){const i={};return["includes","indexOf","lastIndexOf"].forEach(t=>{i[t]=function(...e){const n=te(this);for(let r=0,o=this.length;r<o;r++)Ye(n,"get",r+"");const s=n[t](...e);return s===-1||s===!1?n[t](...e.map(te)):s}}),["push","pop","shift","unshift","splice"].forEach(t=>{i[t]=function(...e){ks();const n=te(this)[t].apply(this,e);return Bs(),n}}),i}function Dm(i){const t=te(this);return Ye(t,"has",i),t.hasOwnProperty(i)}function rc(i=!1,t=!1){return function(n,s,r){if(s==="__v_isReactive")return!i;if(s==="__v_isReadonly")return i;if(s==="__v_isShallow")return t;if(s==="__v_raw"&&r===(i?t?$m:ed:t?td:Qf).get(n))return n;const o=Nt(n);if(!i){if(o&&Kt(Xc,s))return Reflect.get(Xc,s,r);if(s==="hasOwnProperty")return Dm}const a=Reflect.get(n,s,r);return(ec(s)?Zf.has(s):Cm(s))||(i||Ye(n,"get",s),t)?a:Ie(a)?o&&nc(s)?a:a.value:he(a)?i?nd(a):Fr(a):a}}const Fm=Kf(),zm=Kf(!0);function Kf(i=!1){return function(e,n,s,r){let o=e[n];if(Ls(o)&&Ie(o)&&!Ie(s))return!1;if(!i&&(!Fo(s)&&!Ls(s)&&(o=te(o),s=te(s)),!Nt(e)&&Ie(o)&&!Ie(s)))return o.value=s,!0;const a=Nt(e)&&nc(n)?Number(n)<e.length:Kt(e,n),l=Reflect.set(e,n,s,r);return e===te(r)&&(a?gr(s,o)&&Jn(e,"set",n,s):Jn(e,"add",n,s)),l}}function Om(i,t){const e=Kt(i,t);i[t];const n=Reflect.deleteProperty(i,t);return n&&e&&Jn(i,"delete",t,void 0),n}function Nm(i,t){const e=Reflect.has(i,t);return(!ec(t)||!Zf.has(t))&&Ye(i,"has",t),e}function Um(i){return Ye(i,"iterate",Nt(i)?"length":Ui),Reflect.ownKeys(i)}const Jf={get:Pm,set:Fm,deleteProperty:Om,has:Nm,ownKeys:Um},km={get:Rm,set(i,t){return!0},deleteProperty(i,t){return!0}},Bm=De({},Jf,{get:Lm,set:zm}),oc=i=>i,qo=i=>Reflect.getPrototypeOf(i);function Gr(i,t,e=!1,n=!1){i=i.__v_raw;const s=te(i),r=te(t);e||(t!==r&&Ye(s,"get",t),Ye(s,"get",r));const{has:o}=qo(s),a=n?oc:e?cc:_r;if(o.call(s,t))return a(i.get(t));if(o.call(s,r))return a(i.get(r));i!==s&&i.get(t)}function Wr(i,t=!1){const e=this.__v_raw,n=te(e),s=te(i);return t||(i!==s&&Ye(n,"has",i),Ye(n,"has",s)),i===s?e.has(i):e.has(i)||e.has(s)}function Xr(i,t=!1){return i=i.__v_raw,!t&&Ye(te(i),"iterate",Ui),Reflect.get(i,"size",i)}function jc(i){i=te(i);const t=te(this);return qo(t).has.call(t,i)||(t.add(i),Jn(t,"add",i,i)),this}function qc(i,t){t=te(t);const e=te(this),{has:n,get:s}=qo(e);let r=n.call(e,i);r||(i=te(i),r=n.call(e,i));const o=s.call(e,i);return e.set(i,t),r?gr(t,o)&&Jn(e,"set",i,t):Jn(e,"add",i,t),this}function Yc(i){const t=te(this),{has:e,get:n}=qo(t);let s=e.call(t,i);s||(i=te(i),s=e.call(t,i)),n&&n.call(t,i);const r=t.delete(i);return s&&Jn(t,"delete",i,void 0),r}function $c(){const i=te(this),t=i.size!==0,e=i.clear();return t&&Jn(i,"clear",void 0,void 0),e}function jr(i,t){return function(n,s){const r=this,o=r.__v_raw,a=te(o),l=t?oc:i?cc:_r;return!i&&Ye(a,"iterate",Ui),o.forEach((c,h)=>n.call(s,l(c),l(h),r))}}function qr(i,t,e){return function(...n){const s=this.__v_raw,r=te(s),o=Ms(r),a=i==="entries"||i===Symbol.iterator&&o,l=i==="keys"&&o,c=s[i](...n),h=e?oc:t?cc:_r;return!t&&Ye(r,"iterate",l?yl:Ui),{next(){const{value:u,done:f}=c.next();return f?{value:u,done:f}:{value:a?[h(u[0]),h(u[1])]:h(u),done:f}},[Symbol.iterator](){return this}}}}function ni(i){return function(...t){return i==="delete"?!1:this}}function Vm(){const i={get(r){return Gr(this,r)},get size(){return Xr(this)},has:Wr,add:jc,set:qc,delete:Yc,clear:$c,forEach:jr(!1,!1)},t={get(r){return Gr(this,r,!1,!0)},get size(){return Xr(this)},has:Wr,add:jc,set:qc,delete:Yc,clear:$c,forEach:jr(!1,!0)},e={get(r){return Gr(this,r,!0)},get size(){return Xr(this,!0)},has(r){return Wr.call(this,r,!0)},add:ni("add"),set:ni("set"),delete:ni("delete"),clear:ni("clear"),forEach:jr(!0,!1)},n={get(r){return Gr(this,r,!0,!0)},get size(){return Xr(this,!0)},has(r){return Wr.call(this,r,!0)},add:ni("add"),set:ni("set"),delete:ni("delete"),clear:ni("clear"),forEach:jr(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(r=>{i[r]=qr(r,!1,!1),e[r]=qr(r,!0,!1),t[r]=qr(r,!1,!0),n[r]=qr(r,!0,!0)}),[i,e,t,n]}const[Hm,Gm,Wm,Xm]=Vm();function ac(i,t){const e=t?i?Xm:Wm:i?Gm:Hm;return(n,s,r)=>s==="__v_isReactive"?!i:s==="__v_isReadonly"?i:s==="__v_raw"?n:Reflect.get(Kt(e,s)&&s in n?e:n,s,r)}const jm={get:ac(!1,!1)},qm={get:ac(!1,!0)},Ym={get:ac(!0,!1)},Qf=new WeakMap,td=new WeakMap,ed=new WeakMap,$m=new WeakMap;function Zm(i){switch(i){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Km(i){return i.__v_skip||!Object.isExtensible(i)?0:Zm(xm(i))}function Fr(i){return Ls(i)?i:lc(i,!1,Jf,jm,Qf)}function Jm(i){return lc(i,!1,Bm,qm,td)}function nd(i){return lc(i,!0,km,Ym,ed)}function lc(i,t,e,n,s){if(!he(i)||i.__v_raw&&!(t&&i.__v_isReactive))return i;const r=s.get(i);if(r)return r;const o=Km(i);if(o===0)return i;const a=new Proxy(i,o===2?n:e);return s.set(i,a),a}function bs(i){return Ls(i)?bs(i.__v_raw):!!(i&&i.__v_isReactive)}function Ls(i){return!!(i&&i.__v_isReadonly)}function Fo(i){return!!(i&&i.__v_isShallow)}function id(i){return bs(i)||Ls(i)}function te(i){const t=i&&i.__v_raw;return t?te(t):i}function sd(i){return Do(i,"__v_skip",!0),i}const _r=i=>he(i)?Fr(i):i,cc=i=>he(i)?nd(i):i;function rd(i){pi&&wn&&(i=te(i),$f(i.dep||(i.dep=ic())))}function od(i,t){i=te(i);const e=i.dep;e&&wl(e)}function Ie(i){return!!(i&&i.__v_isRef===!0)}function Qm(i){return ad(i,!1)}function tg(i){return ad(i,!0)}function ad(i,t){return Ie(i)?i:new eg(i,t)}class eg{constructor(t,e){this.__v_isShallow=e,this.dep=void 0,this.__v_isRef=!0,this._rawValue=e?t:te(t),this._value=e?t:_r(t)}get value(){return rd(this),this._value}set value(t){const e=this.__v_isShallow||Fo(t)||Ls(t);t=e?t:te(t),gr(t,this._rawValue)&&(this._rawValue=t,this._value=e?t:_r(t),od(this))}}function Ss(i){return Ie(i)?i.value:i}const ng={get:(i,t,e)=>Ss(Reflect.get(i,t,e)),set:(i,t,e,n)=>{const s=i[t];return Ie(s)&&!Ie(e)?(s.value=e,!0):Reflect.set(i,t,e,n)}};function ld(i){return bs(i)?i:new Proxy(i,ng)}var cd;class ig{constructor(t,e,n,s){this._setter=e,this.dep=void 0,this.__v_isRef=!0,this[cd]=!1,this._dirty=!0,this.effect=new sc(t,()=>{this._dirty||(this._dirty=!0,od(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!s,this.__v_isReadonly=n}get value(){const t=te(this);return rd(t),(t._dirty||!t._cacheable)&&(t._dirty=!1,t._value=t.effect.run()),t._value}set value(t){this._setter(t)}}cd="__v_isReadonly";function sg(i,t,e=!1){let n,s;const r=Ut(i);return r?(n=i,s=bn):(n=i.get,s=i.set),new ig(n,s,r||!s,e)}function mi(i,t,e,n){let s;try{s=n?i(...n):i()}catch(r){Yo(r,t,e)}return s}function dn(i,t,e,n){if(Ut(i)){const r=mi(i,t,e,n);return r&&Gf(r)&&r.catch(o=>{Yo(o,t,e)}),r}const s=[];for(let r=0;r<i.length;r++)s.push(dn(i[r],t,e,n));return s}function Yo(i,t,e,n=!0){const s=t?t.vnode:null;if(t){let r=t.parent;const o=t.proxy,a=e;for(;r;){const c=r.ec;if(c){for(let h=0;h<c.length;h++)if(c[h](i,o,a)===!1)return}r=r.parent}const l=t.appContext.config.errorHandler;if(l){mi(l,null,10,[i,o,a]);return}}rg(i,e,s,n)}function rg(i,t,e,n=!0){console.error(i)}let xr=!1,Ml=!1;const Re=[];let Ln=0;const Ts=[];let qn=null,Ii=0;const hd=Promise.resolve();let hc=null;function ud(i){const t=hc||hd;return i?t.then(this?i.bind(this):i):t}function og(i){let t=Ln+1,e=Re.length;for(;t<e;){const n=t+e>>>1;vr(Re[n])<i?t=n+1:e=n}return t}function uc(i){(!Re.length||!Re.includes(i,xr&&i.allowRecurse?Ln+1:Ln))&&(i.id==null?Re.push(i):Re.splice(og(i.id),0,i),fd())}function fd(){!xr&&!Ml&&(Ml=!0,hc=hd.then(pd))}function ag(i){const t=Re.indexOf(i);t>Ln&&Re.splice(t,1)}function lg(i){Nt(i)?Ts.push(...i):(!qn||!qn.includes(i,i.allowRecurse?Ii+1:Ii))&&Ts.push(i),fd()}function Zc(i,t=xr?Ln+1:0){for(;t<Re.length;t++){const e=Re[t];e&&e.pre&&(Re.splice(t,1),t--,e())}}function dd(i){if(Ts.length){const t=[...new Set(Ts)];if(Ts.length=0,qn){qn.push(...t);return}for(qn=t,qn.sort((e,n)=>vr(e)-vr(n)),Ii=0;Ii<qn.length;Ii++)qn[Ii]();qn=null,Ii=0}}const vr=i=>i.id==null?1/0:i.id,cg=(i,t)=>{const e=vr(i)-vr(t);if(e===0){if(i.pre&&!t.pre)return-1;if(t.pre&&!i.pre)return 1}return e};function pd(i){Ml=!1,xr=!0,Re.sort(cg);const t=bn;try{for(Ln=0;Ln<Re.length;Ln++){const e=Re[Ln];e&&e.active!==!1&&mi(e,null,14)}}finally{Ln=0,Re.length=0,dd(),xr=!1,hc=null,(Re.length||Ts.length)&&pd()}}function hg(i,t,...e){if(i.isUnmounted)return;const n=i.vnode.props||ce;let s=e;const r=t.startsWith("update:"),o=r&&t.slice(7);if(o&&o in n){const h=`${o==="modelValue"?"model":o}Modifiers`,{number:u,trim:f}=n[h]||ce;f&&(s=e.map(d=>ye(d)?d.trim():d)),u&&(s=e.map(wm))}let a,l=n[a=pa(t)]||n[a=pa(Dn(t))];!l&&r&&(l=n[a=pa(Us(t))]),l&&dn(l,i,6,s);const c=n[a+"Once"];if(c){if(!i.emitted)i.emitted={};else if(i.emitted[a])return;i.emitted[a]=!0,dn(c,i,6,s)}}function md(i,t,e=!1){const n=t.emitsCache,s=n.get(i);if(s!==void 0)return s;const r=i.emits;let o={},a=!1;if(!Ut(i)){const l=c=>{const h=md(c,t,!0);h&&(a=!0,De(o,h))};!e&&t.mixins.length&&t.mixins.forEach(l),i.extends&&l(i.extends),i.mixins&&i.mixins.forEach(l)}return!r&&!a?(he(i)&&n.set(i,null),null):(Nt(r)?r.forEach(l=>o[l]=null):De(o,r),he(i)&&n.set(i,o),o)}function $o(i,t){return!i||!Go(t)?!1:(t=t.slice(2).replace(/Once$/,""),Kt(i,t[0].toLowerCase()+t.slice(1))||Kt(i,Us(t))||Kt(i,t))}let hn=null,Zo=null;function zo(i){const t=hn;return hn=i,Zo=i&&i.type.__scopeId||null,t}function ug(i){Zo=i}function fg(){Zo=null}function gd(i,t=hn,e){if(!t||i._n)return i;const n=(...s)=>{n._d&&ah(-1);const r=zo(t);let o;try{o=i(...s)}finally{zo(r),n._d&&ah(1)}return o};return n._n=!0,n._c=!0,n._d=!0,n}function ga(i){const{type:t,vnode:e,proxy:n,withProxy:s,props:r,propsOptions:[o],slots:a,attrs:l,emit:c,render:h,renderCache:u,data:f,setupState:d,ctx:g,inheritAttrs:p}=i;let m,_;const w=zo(i);try{if(e.shapeFlag&4){const b=s||n;m=Cn(h.call(b,b,u,r,d,f,g)),_=l}else{const b=t;m=Cn(b.length>1?b(r,{attrs:l,slots:a,emit:c}):b(r,null)),_=t.props?l:dg(l)}}catch(b){cr.length=0,Yo(b,i,1),m=en($n)}let x=m;if(_&&p!==!1){const b=Object.keys(_),{shapeFlag:S}=x;b.length&&S&7&&(o&&b.some(Ql)&&(_=pg(_,o)),x=xi(x,_))}return e.dirs&&(x=xi(x),x.dirs=x.dirs?x.dirs.concat(e.dirs):e.dirs),e.transition&&(x.transition=e.transition),m=x,zo(w),m}const dg=i=>{let t;for(const e in i)(e==="class"||e==="style"||Go(e))&&((t||(t={}))[e]=i[e]);return t},pg=(i,t)=>{const e={};for(const n in i)(!Ql(n)||!(n.slice(9)in t))&&(e[n]=i[n]);return e};function mg(i,t,e){const{props:n,children:s,component:r}=i,{props:o,children:a,patchFlag:l}=t,c=r.emitsOptions;if(t.dirs||t.transition)return!0;if(e&&l>=0){if(l&1024)return!0;if(l&16)return n?Kc(n,o,c):!!o;if(l&8){const h=t.dynamicProps;for(let u=0;u<h.length;u++){const f=h[u];if(o[f]!==n[f]&&!$o(c,f))return!0}}}else return(s||a)&&(!a||!a.$stable)?!0:n===o?!1:n?o?Kc(n,o,c):!0:!!o;return!1}function Kc(i,t,e){const n=Object.keys(t);if(n.length!==Object.keys(i).length)return!0;for(let s=0;s<n.length;s++){const r=n[s];if(t[r]!==i[r]&&!$o(e,r))return!0}return!1}function gg({vnode:i,parent:t},e){for(;t&&t.subTree===i;)(i=t.vnode).el=e,t=t.parent}const _g=i=>i.__isSuspense;function xg(i,t){t&&t.pendingBranch?Nt(i)?t.effects.push(...i):t.effects.push(i):lg(i)}function Eo(i,t){if(me){let e=me.provides;const n=me.parent&&me.parent.provides;n===e&&(e=me.provides=Object.create(n)),e[i]=t}}function Yn(i,t,e=!1){const n=me||hn;if(n){const s=n.parent==null?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides;if(s&&i in s)return s[i];if(arguments.length>1)return e&&Ut(t)?t.call(n.proxy):t}}const Yr={};function Ao(i,t,e){return _d(i,t,e)}function _d(i,t,{immediate:e,deep:n,flush:s,onTrack:r,onTrigger:o}=ce){const a=Tm()===(me==null?void 0:me.scope)?me:null;let l,c=!1,h=!1;if(Ie(i)?(l=()=>i.value,c=Fo(i)):bs(i)?(l=()=>i,n=!0):Nt(i)?(h=!0,c=i.some(x=>bs(x)||Fo(x)),l=()=>i.map(x=>{if(Ie(x))return x.value;if(bs(x))return _s(x);if(Ut(x))return mi(x,a,2)})):Ut(i)?t?l=()=>mi(i,a,2):l=()=>{if(!(a&&a.isUnmounted))return u&&u(),dn(i,a,3,[f])}:l=bn,t&&n){const x=l;l=()=>_s(x())}let u,f=x=>{u=_.onStop=()=>{mi(x,a,4)}},d;if(wr)if(f=bn,t?e&&dn(t,a,3,[l(),h?[]:void 0,f]):l(),s==="sync"){const x=m0();d=x.__watcherHandles||(x.__watcherHandles=[])}else return bn;let g=h?new Array(i.length).fill(Yr):Yr;const p=()=>{if(_.active)if(t){const x=_.run();(n||c||(h?x.some((b,S)=>gr(b,g[S])):gr(x,g)))&&(u&&u(),dn(t,a,3,[x,g===Yr?void 0:h&&g[0]===Yr?[]:g,f]),g=x)}else _.run()};p.allowRecurse=!!t;let m;s==="sync"?m=p:s==="post"?m=()=>Xe(p,a&&a.suspense):(p.pre=!0,a&&(p.id=a.uid),m=()=>uc(p));const _=new sc(l,m);t?e?p():g=_.run():s==="post"?Xe(_.run.bind(_),a&&a.suspense):_.run();const w=()=>{_.stop(),a&&a.scope&&tc(a.scope.effects,_)};return d&&d.push(w),w}function vg(i,t,e){const n=this.proxy,s=ye(i)?i.includes(".")?xd(n,i):()=>n[i]:i.bind(n,n);let r;Ut(t)?r=t:(r=t.handler,e=t);const o=me;Rs(this);const a=_d(s,r.bind(n),e);return o?Rs(o):ki(),a}function xd(i,t){const e=t.split(".");return()=>{let n=i;for(let s=0;s<e.length&&n;s++)n=n[e[s]];return n}}function _s(i,t){if(!he(i)||i.__v_skip||(t=t||new Set,t.has(i)))return i;if(t.add(i),Ie(i))_s(i.value,t);else if(Nt(i))for(let e=0;e<i.length;e++)_s(i[e],t);else if(Hf(i)||Ms(i))i.forEach(e=>{_s(e,t)});else if(Xf(i))for(const e in i)_s(i[e],t);return i}function yg(){const i={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return bd(()=>{i.isMounted=!0}),Sd(()=>{i.isUnmounting=!0}),i}const sn=[Function,Array],wg={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:sn,onEnter:sn,onAfterEnter:sn,onEnterCancelled:sn,onBeforeLeave:sn,onLeave:sn,onAfterLeave:sn,onLeaveCancelled:sn,onBeforeAppear:sn,onAppear:sn,onAfterAppear:sn,onAppearCancelled:sn},setup(i,{slots:t}){const e=a0(),n=yg();let s;return()=>{const r=t.default&&yd(t.default(),!0);if(!r||!r.length)return;let o=r[0];if(r.length>1){for(const p of r)if(p.type!==$n){o=p;break}}const a=te(i),{mode:l}=a;if(n.isLeaving)return _a(o);const c=Jc(o);if(!c)return _a(o);const h=bl(c,a,n,e);Sl(c,h);const u=e.subTree,f=u&&Jc(u);let d=!1;const{getTransitionKey:g}=c.type;if(g){const p=g();s===void 0?s=p:p!==s&&(s=p,d=!0)}if(f&&f.type!==$n&&(!Fi(c,f)||d)){const p=bl(f,a,n,e);if(Sl(f,p),l==="out-in")return n.isLeaving=!0,p.afterLeave=()=>{n.isLeaving=!1,e.update.active!==!1&&e.update()},_a(o);l==="in-out"&&c.type!==$n&&(p.delayLeave=(m,_,w)=>{const x=vd(n,f);x[String(f.key)]=f,m._leaveCb=()=>{_(),m._leaveCb=void 0,delete h.delayedLeave},h.delayedLeave=w})}return o}}},Mg=wg;function vd(i,t){const{leavingVNodes:e}=i;let n=e.get(t.type);return n||(n=Object.create(null),e.set(t.type,n)),n}function bl(i,t,e,n){const{appear:s,mode:r,persisted:o=!1,onBeforeEnter:a,onEnter:l,onAfterEnter:c,onEnterCancelled:h,onBeforeLeave:u,onLeave:f,onAfterLeave:d,onLeaveCancelled:g,onBeforeAppear:p,onAppear:m,onAfterAppear:_,onAppearCancelled:w}=t,x=String(i.key),b=vd(e,i),S=(v,A)=>{v&&dn(v,n,9,A)},P=(v,A)=>{const R=A[1];S(v,A),Nt(v)?v.every(j=>j.length<=1)&&R():v.length<=1&&R()},D={mode:r,persisted:o,beforeEnter(v){let A=a;if(!e.isMounted)if(s)A=p||a;else return;v._leaveCb&&v._leaveCb(!0);const R=b[x];R&&Fi(i,R)&&R.el._leaveCb&&R.el._leaveCb(),S(A,[v])},enter(v){let A=l,R=c,j=h;if(!e.isMounted)if(s)A=m||l,R=_||c,j=w||h;else return;let Q=!1;const k=v._enterCb=O=>{Q||(Q=!0,O?S(j,[v]):S(R,[v]),D.delayedLeave&&D.delayedLeave(),v._enterCb=void 0)};A?P(A,[v,k]):k()},leave(v,A){const R=String(i.key);if(v._enterCb&&v._enterCb(!0),e.isUnmounting)return A();S(u,[v]);let j=!1;const Q=v._leaveCb=k=>{j||(j=!0,A(),k?S(g,[v]):S(d,[v]),v._leaveCb=void 0,b[R]===i&&delete b[R])};b[R]=i,f?P(f,[v,Q]):Q()},clone(v){return bl(v,t,e,n)}};return D}function _a(i){if(Ko(i))return i=xi(i),i.children=null,i}function Jc(i){return Ko(i)?i.children?i.children[0]:void 0:i}function Sl(i,t){i.shapeFlag&6&&i.component?Sl(i.component.subTree,t):i.shapeFlag&128?(i.ssContent.transition=t.clone(i.ssContent),i.ssFallback.transition=t.clone(i.ssFallback)):i.transition=t}function yd(i,t=!1,e){let n=[],s=0;for(let r=0;r<i.length;r++){let o=i[r];const a=e==null?o.key:String(e)+String(o.key!=null?o.key:r);o.type===yn?(o.patchFlag&128&&s++,n=n.concat(yd(o.children,t,a))):(t||o.type!==$n)&&n.push(a!=null?xi(o,{key:a}):o)}if(s>1)for(let r=0;r<n.length;r++)n[r].patchFlag=-2;return n}function wd(i){return Ut(i)?{setup:i,name:i.name}:i}const Co=i=>!!i.type.__asyncLoader,Ko=i=>i.type.__isKeepAlive;function bg(i,t){Md(i,"a",t)}function Sg(i,t){Md(i,"da",t)}function Md(i,t,e=me){const n=i.__wdc||(i.__wdc=()=>{let s=e;for(;s;){if(s.isDeactivated)return;s=s.parent}return i()});if(Jo(t,n,e),e){let s=e.parent;for(;s&&s.parent;)Ko(s.parent.vnode)&&Tg(n,t,e,s),s=s.parent}}function Tg(i,t,e,n){const s=Jo(t,i,n,!0);Td(()=>{tc(n[t],s)},e)}function Jo(i,t,e=me,n=!1){if(e){const s=e[i]||(e[i]=[]),r=t.__weh||(t.__weh=(...o)=>{if(e.isUnmounted)return;ks(),Rs(e);const a=dn(t,e,i,o);return ki(),Bs(),a});return n?s.unshift(r):s.push(r),r}}const Qn=i=>(t,e=me)=>(!wr||i==="sp")&&Jo(i,(...n)=>t(...n),e),Eg=Qn("bm"),bd=Qn("m"),Ag=Qn("bu"),Cg=Qn("u"),Sd=Qn("bum"),Td=Qn("um"),Pg=Qn("sp"),Lg=Qn("rtg"),Rg=Qn("rtc");function Ig(i,t=me){Jo("ec",i,t)}function Si(i,t,e,n){const s=i.dirs,r=t&&t.dirs;for(let o=0;o<s.length;o++){const a=s[o];r&&(a.oldValue=r[o].value);let l=a.dir[n];l&&(ks(),dn(l,e,8,[i.el,a,i,t]),Bs())}}const Ed="components";function Qc(i,t){return Fg(Ed,i,!0,t)||i}const Dg=Symbol();function Fg(i,t,e=!0,n=!1){const s=hn||me;if(s){const r=s.type;if(i===Ed){const a=f0(r,!1);if(a&&(a===t||a===Dn(t)||a===jo(Dn(t))))return r}const o=th(s[i]||r[i],t)||th(s.appContext[i],t);return!o&&n?r:o}}function th(i,t){return i&&(i[t]||i[Dn(t)]||i[jo(Dn(t))])}function zg(i,t,e,n){let s;const r=e&&e[n];if(Nt(i)||ye(i)){s=new Array(i.length);for(let o=0,a=i.length;o<a;o++)s[o]=t(i[o],o,void 0,r&&r[o])}else if(typeof i=="number"){s=new Array(i);for(let o=0;o<i;o++)s[o]=t(o+1,o,void 0,r&&r[o])}else if(he(i))if(i[Symbol.iterator])s=Array.from(i,(o,a)=>t(o,a,void 0,r&&r[a]));else{const o=Object.keys(i);s=new Array(o.length);for(let a=0,l=o.length;a<l;a++){const c=o[a];s[a]=t(i[c],c,a,r&&r[a])}}else s=[];return e&&(e[n]=s),s}const Tl=i=>i?Ud(i)?mc(i)||i.proxy:Tl(i.parent):null,lr=De(Object.create(null),{$:i=>i,$el:i=>i.vnode.el,$data:i=>i.data,$props:i=>i.props,$attrs:i=>i.attrs,$slots:i=>i.slots,$refs:i=>i.refs,$parent:i=>Tl(i.parent),$root:i=>Tl(i.root),$emit:i=>i.emit,$options:i=>fc(i),$forceUpdate:i=>i.f||(i.f=()=>uc(i.update)),$nextTick:i=>i.n||(i.n=ud.bind(i.proxy)),$watch:i=>vg.bind(i)}),xa=(i,t)=>i!==ce&&!i.__isScriptSetup&&Kt(i,t),Og={get({_:i},t){const{ctx:e,setupState:n,data:s,props:r,accessCache:o,type:a,appContext:l}=i;let c;if(t[0]!=="$"){const d=o[t];if(d!==void 0)switch(d){case 1:return n[t];case 2:return s[t];case 4:return e[t];case 3:return r[t]}else{if(xa(n,t))return o[t]=1,n[t];if(s!==ce&&Kt(s,t))return o[t]=2,s[t];if((c=i.propsOptions[0])&&Kt(c,t))return o[t]=3,r[t];if(e!==ce&&Kt(e,t))return o[t]=4,e[t];El&&(o[t]=0)}}const h=lr[t];let u,f;if(h)return t==="$attrs"&&Ye(i,"get",t),h(i);if((u=a.__cssModules)&&(u=u[t]))return u;if(e!==ce&&Kt(e,t))return o[t]=4,e[t];if(f=l.config.globalProperties,Kt(f,t))return f[t]},set({_:i},t,e){const{data:n,setupState:s,ctx:r}=i;return xa(s,t)?(s[t]=e,!0):n!==ce&&Kt(n,t)?(n[t]=e,!0):Kt(i.props,t)||t[0]==="$"&&t.slice(1)in i?!1:(r[t]=e,!0)},has({_:{data:i,setupState:t,accessCache:e,ctx:n,appContext:s,propsOptions:r}},o){let a;return!!e[o]||i!==ce&&Kt(i,o)||xa(t,o)||(a=r[0])&&Kt(a,o)||Kt(n,o)||Kt(lr,o)||Kt(s.config.globalProperties,o)},defineProperty(i,t,e){return e.get!=null?i._.accessCache[t]=0:Kt(e,"value")&&this.set(i,t,e.value,null),Reflect.defineProperty(i,t,e)}};let El=!0;function Ng(i){const t=fc(i),e=i.proxy,n=i.ctx;El=!1,t.beforeCreate&&eh(t.beforeCreate,i,"bc");const{data:s,computed:r,methods:o,watch:a,provide:l,inject:c,created:h,beforeMount:u,mounted:f,beforeUpdate:d,updated:g,activated:p,deactivated:m,beforeDestroy:_,beforeUnmount:w,destroyed:x,unmounted:b,render:S,renderTracked:P,renderTriggered:D,errorCaptured:v,serverPrefetch:A,expose:R,inheritAttrs:j,components:Q,directives:k,filters:O}=t;if(c&&Ug(c,n,null,i.appContext.config.unwrapInjectedRef),o)for(const it in o){const Y=o[it];Ut(Y)&&(n[it]=Y.bind(e))}if(s){const it=s.call(e,e);he(it)&&(i.data=Fr(it))}if(El=!0,r)for(const it in r){const Y=r[it],ft=Ut(Y)?Y.bind(e,e):Ut(Y.get)?Y.get.bind(e,e):bn,dt=!Ut(Y)&&Ut(Y.set)?Y.set.bind(e):bn,yt=an({get:ft,set:dt});Object.defineProperty(n,it,{enumerable:!0,configurable:!0,get:()=>yt.value,set:W=>yt.value=W})}if(a)for(const it in a)Ad(a[it],n,e,it);if(l){const it=Ut(l)?l.call(e):l;Reflect.ownKeys(it).forEach(Y=>{Eo(Y,it[Y])})}h&&eh(h,i,"c");function Z(it,Y){Nt(Y)?Y.forEach(ft=>it(ft.bind(e))):Y&&it(Y.bind(e))}if(Z(Eg,u),Z(bd,f),Z(Ag,d),Z(Cg,g),Z(bg,p),Z(Sg,m),Z(Ig,v),Z(Rg,P),Z(Lg,D),Z(Sd,w),Z(Td,b),Z(Pg,A),Nt(R))if(R.length){const it=i.exposed||(i.exposed={});R.forEach(Y=>{Object.defineProperty(it,Y,{get:()=>e[Y],set:ft=>e[Y]=ft})})}else i.exposed||(i.exposed={});S&&i.render===bn&&(i.render=S),j!=null&&(i.inheritAttrs=j),Q&&(i.components=Q),k&&(i.directives=k)}function Ug(i,t,e=bn,n=!1){Nt(i)&&(i=Al(i));for(const s in i){const r=i[s];let o;he(r)?"default"in r?o=Yn(r.from||s,r.default,!0):o=Yn(r.from||s):o=Yn(r),Ie(o)&&n?Object.defineProperty(t,s,{enumerable:!0,configurable:!0,get:()=>o.value,set:a=>o.value=a}):t[s]=o}}function eh(i,t,e){dn(Nt(i)?i.map(n=>n.bind(t.proxy)):i.bind(t.proxy),t,e)}function Ad(i,t,e,n){const s=n.includes(".")?xd(e,n):()=>e[n];if(ye(i)){const r=t[i];Ut(r)&&Ao(s,r)}else if(Ut(i))Ao(s,i.bind(e));else if(he(i))if(Nt(i))i.forEach(r=>Ad(r,t,e,n));else{const r=Ut(i.handler)?i.handler.bind(e):t[i.handler];Ut(r)&&Ao(s,r,i)}}function fc(i){const t=i.type,{mixins:e,extends:n}=t,{mixins:s,optionsCache:r,config:{optionMergeStrategies:o}}=i.appContext,a=r.get(t);let l;return a?l=a:!s.length&&!e&&!n?l=t:(l={},s.length&&s.forEach(c=>Oo(l,c,o,!0)),Oo(l,t,o)),he(t)&&r.set(t,l),l}function Oo(i,t,e,n=!1){const{mixins:s,extends:r}=t;r&&Oo(i,r,e,!0),s&&s.forEach(o=>Oo(i,o,e,!0));for(const o in t)if(!(n&&o==="expose")){const a=kg[o]||e&&e[o];i[o]=a?a(i[o],t[o]):t[o]}return i}const kg={data:nh,props:Pi,emits:Pi,methods:Pi,computed:Pi,beforeCreate:Ne,created:Ne,beforeMount:Ne,mounted:Ne,beforeUpdate:Ne,updated:Ne,beforeDestroy:Ne,beforeUnmount:Ne,destroyed:Ne,unmounted:Ne,activated:Ne,deactivated:Ne,errorCaptured:Ne,serverPrefetch:Ne,components:Pi,directives:Pi,watch:Vg,provide:nh,inject:Bg};function nh(i,t){return t?i?function(){return De(Ut(i)?i.call(this,this):i,Ut(t)?t.call(this,this):t)}:t:i}function Bg(i,t){return Pi(Al(i),Al(t))}function Al(i){if(Nt(i)){const t={};for(let e=0;e<i.length;e++)t[i[e]]=i[e];return t}return i}function Ne(i,t){return i?[...new Set([].concat(i,t))]:t}function Pi(i,t){return i?De(De(Object.create(null),i),t):t}function Vg(i,t){if(!i)return t;if(!t)return i;const e=De(Object.create(null),i);for(const n in t)e[n]=Ne(i[n],t[n]);return e}function Hg(i,t,e,n=!1){const s={},r={};Do(r,ta,1),i.propsDefaults=Object.create(null),Cd(i,t,s,r);for(const o in i.propsOptions[0])o in s||(s[o]=void 0);e?i.props=n?s:Jm(s):i.type.props?i.props=s:i.props=r,i.attrs=r}function Gg(i,t,e,n){const{props:s,attrs:r,vnode:{patchFlag:o}}=i,a=te(s),[l]=i.propsOptions;let c=!1;if((n||o>0)&&!(o&16)){if(o&8){const h=i.vnode.dynamicProps;for(let u=0;u<h.length;u++){let f=h[u];if($o(i.emitsOptions,f))continue;const d=t[f];if(l)if(Kt(r,f))d!==r[f]&&(r[f]=d,c=!0);else{const g=Dn(f);s[g]=Cl(l,a,g,d,i,!1)}else d!==r[f]&&(r[f]=d,c=!0)}}}else{Cd(i,t,s,r)&&(c=!0);let h;for(const u in a)(!t||!Kt(t,u)&&((h=Us(u))===u||!Kt(t,h)))&&(l?e&&(e[u]!==void 0||e[h]!==void 0)&&(s[u]=Cl(l,a,u,void 0,i,!0)):delete s[u]);if(r!==a)for(const u in r)(!t||!Kt(t,u))&&(delete r[u],c=!0)}c&&Jn(i,"set","$attrs")}function Cd(i,t,e,n){const[s,r]=i.propsOptions;let o=!1,a;if(t)for(let l in t){if(To(l))continue;const c=t[l];let h;s&&Kt(s,h=Dn(l))?!r||!r.includes(h)?e[h]=c:(a||(a={}))[h]=c:$o(i.emitsOptions,l)||(!(l in n)||c!==n[l])&&(n[l]=c,o=!0)}if(r){const l=te(e),c=a||ce;for(let h=0;h<r.length;h++){const u=r[h];e[u]=Cl(s,l,u,c[u],i,!Kt(c,u))}}return o}function Cl(i,t,e,n,s,r){const o=i[e];if(o!=null){const a=Kt(o,"default");if(a&&n===void 0){const l=o.default;if(o.type!==Function&&Ut(l)){const{propsDefaults:c}=s;e in c?n=c[e]:(Rs(s),n=c[e]=l.call(null,t),ki())}else n=l}o[0]&&(r&&!a?n=!1:o[1]&&(n===""||n===Us(e))&&(n=!0))}return n}function Pd(i,t,e=!1){const n=t.propsCache,s=n.get(i);if(s)return s;const r=i.props,o={},a=[];let l=!1;if(!Ut(i)){const h=u=>{l=!0;const[f,d]=Pd(u,t,!0);De(o,f),d&&a.push(...d)};!e&&t.mixins.length&&t.mixins.forEach(h),i.extends&&h(i.extends),i.mixins&&i.mixins.forEach(h)}if(!r&&!l)return he(i)&&n.set(i,ws),ws;if(Nt(r))for(let h=0;h<r.length;h++){const u=Dn(r[h]);ih(u)&&(o[u]=ce)}else if(r)for(const h in r){const u=Dn(h);if(ih(u)){const f=r[h],d=o[u]=Nt(f)||Ut(f)?{type:f}:Object.assign({},f);if(d){const g=oh(Boolean,d.type),p=oh(String,d.type);d[0]=g>-1,d[1]=p<0||g<p,(g>-1||Kt(d,"default"))&&a.push(u)}}}const c=[o,a];return he(i)&&n.set(i,c),c}function ih(i){return i[0]!=="$"}function sh(i){const t=i&&i.toString().match(/^\s*(function|class) (\w+)/);return t?t[2]:i===null?"null":""}function rh(i,t){return sh(i)===sh(t)}function oh(i,t){return Nt(t)?t.findIndex(e=>rh(e,i)):Ut(t)&&rh(t,i)?0:-1}const Ld=i=>i[0]==="_"||i==="$stable",dc=i=>Nt(i)?i.map(Cn):[Cn(i)],Wg=(i,t,e)=>{if(t._n)return t;const n=gd((...s)=>dc(t(...s)),e);return n._c=!1,n},Rd=(i,t,e)=>{const n=i._ctx;for(const s in i){if(Ld(s))continue;const r=i[s];if(Ut(r))t[s]=Wg(s,r,n);else if(r!=null){const o=dc(r);t[s]=()=>o}}},Id=(i,t)=>{const e=dc(t);i.slots.default=()=>e},Xg=(i,t)=>{if(i.vnode.shapeFlag&32){const e=t._;e?(i.slots=te(t),Do(t,"_",e)):Rd(t,i.slots={})}else i.slots={},t&&Id(i,t);Do(i.slots,ta,1)},jg=(i,t,e)=>{const{vnode:n,slots:s}=i;let r=!0,o=ce;if(n.shapeFlag&32){const a=t._;a?e&&a===1?r=!1:(De(s,t),!e&&a===1&&delete s._):(r=!t.$stable,Rd(t,s)),o=t}else t&&(Id(i,t),o={default:1});if(r)for(const a in s)!Ld(a)&&!(a in o)&&delete s[a]};function Dd(){return{app:null,config:{isNativeTag:mm,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let qg=0;function Yg(i,t){return function(n,s=null){Ut(n)||(n=Object.assign({},n)),s!=null&&!he(s)&&(s=null);const r=Dd(),o=new Set;let a=!1;const l=r.app={_uid:qg++,_component:n,_props:s,_container:null,_context:r,_instance:null,version:g0,get config(){return r.config},set config(c){},use(c,...h){return o.has(c)||(c&&Ut(c.install)?(o.add(c),c.install(l,...h)):Ut(c)&&(o.add(c),c(l,...h))),l},mixin(c){return r.mixins.includes(c)||r.mixins.push(c),l},component(c,h){return h?(r.components[c]=h,l):r.components[c]},directive(c,h){return h?(r.directives[c]=h,l):r.directives[c]},mount(c,h,u){if(!a){const f=en(n,s);return f.appContext=r,h&&t?t(f,c):i(f,c,u),a=!0,l._container=c,c.__vue_app__=l,mc(f.component)||f.component.proxy}},unmount(){a&&(i(null,l._container),delete l._container.__vue_app__)},provide(c,h){return r.provides[c]=h,l}};return l}}function Pl(i,t,e,n,s=!1){if(Nt(i)){i.forEach((f,d)=>Pl(f,t&&(Nt(t)?t[d]:t),e,n,s));return}if(Co(n)&&!s)return;const r=n.shapeFlag&4?mc(n.component)||n.component.proxy:n.el,o=s?null:r,{i:a,r:l}=i,c=t&&t.r,h=a.refs===ce?a.refs={}:a.refs,u=a.setupState;if(c!=null&&c!==l&&(ye(c)?(h[c]=null,Kt(u,c)&&(u[c]=null)):Ie(c)&&(c.value=null)),Ut(l))mi(l,a,12,[o,h]);else{const f=ye(l),d=Ie(l);if(f||d){const g=()=>{if(i.f){const p=f?Kt(u,l)?u[l]:h[l]:l.value;s?Nt(p)&&tc(p,r):Nt(p)?p.includes(r)||p.push(r):f?(h[l]=[r],Kt(u,l)&&(u[l]=h[l])):(l.value=[r],i.k&&(h[i.k]=l.value))}else f?(h[l]=o,Kt(u,l)&&(u[l]=o)):d&&(l.value=o,i.k&&(h[i.k]=o))};o?(g.id=-1,Xe(g,e)):g()}}}const Xe=xg;function $g(i){return Zg(i)}function Zg(i,t){const e=Mm();e.__VUE__=!0;const{insert:n,remove:s,patchProp:r,createElement:o,createText:a,createComment:l,setText:c,setElementText:h,parentNode:u,nextSibling:f,setScopeId:d=bn,insertStaticContent:g}=i,p=(y,T,F,H=null,B=null,et=null,st=!1,$=null,ut=!!T.dynamicChildren)=>{if(y===T)return;y&&!Fi(y,T)&&(H=tt(y),W(y,B,et,!0),y=null),T.patchFlag===-2&&(ut=!1,T.dynamicChildren=null);const{type:nt,ref:E,shapeFlag:M}=T;switch(nt){case Qo:m(y,T,F,H);break;case $n:_(y,T,F,H);break;case va:y==null&&w(T,F,H,st);break;case yn:Q(y,T,F,H,B,et,st,$,ut);break;default:M&1?S(y,T,F,H,B,et,st,$,ut):M&6?k(y,T,F,H,B,et,st,$,ut):(M&64||M&128)&&nt.process(y,T,F,H,B,et,st,$,ut,gt)}E!=null&&B&&Pl(E,y&&y.ref,et,T||y,!T)},m=(y,T,F,H)=>{if(y==null)n(T.el=a(T.children),F,H);else{const B=T.el=y.el;T.children!==y.children&&c(B,T.children)}},_=(y,T,F,H)=>{y==null?n(T.el=l(T.children||""),F,H):T.el=y.el},w=(y,T,F,H)=>{[y.el,y.anchor]=g(y.children,T,F,H,y.el,y.anchor)},x=({el:y,anchor:T},F,H)=>{let B;for(;y&&y!==T;)B=f(y),n(y,F,H),y=B;n(T,F,H)},b=({el:y,anchor:T})=>{let F;for(;y&&y!==T;)F=f(y),s(y),y=F;s(T)},S=(y,T,F,H,B,et,st,$,ut)=>{st=st||T.type==="svg",y==null?P(T,F,H,B,et,st,$,ut):A(y,T,B,et,st,$,ut)},P=(y,T,F,H,B,et,st,$)=>{let ut,nt;const{type:E,props:M,shapeFlag:U,transition:K,dirs:rt}=y;if(ut=y.el=o(y.type,et,M&&M.is,M),U&8?h(ut,y.children):U&16&&v(y.children,ut,null,H,B,et&&E!=="foreignObject",st,$),rt&&Si(y,null,H,"created"),D(ut,y,y.scopeId,st,H),M){for(const Mt in M)Mt!=="value"&&!To(Mt)&&r(ut,Mt,null,M[Mt],et,y.children,H,B,z);"value"in M&&r(ut,"value",null,M.value),(nt=M.onVnodeBeforeMount)&&En(nt,H,y)}rt&&Si(y,null,H,"beforeMount");const mt=(!B||B&&!B.pendingBranch)&&K&&!K.persisted;mt&&K.beforeEnter(ut),n(ut,T,F),((nt=M&&M.onVnodeMounted)||mt||rt)&&Xe(()=>{nt&&En(nt,H,y),mt&&K.enter(ut),rt&&Si(y,null,H,"mounted")},B)},D=(y,T,F,H,B)=>{if(F&&d(y,F),H)for(let et=0;et<H.length;et++)d(y,H[et]);if(B){let et=B.subTree;if(T===et){const st=B.vnode;D(y,st,st.scopeId,st.slotScopeIds,B.parent)}}},v=(y,T,F,H,B,et,st,$,ut=0)=>{for(let nt=ut;nt<y.length;nt++){const E=y[nt]=$?hi(y[nt]):Cn(y[nt]);p(null,E,T,F,H,B,et,st,$)}},A=(y,T,F,H,B,et,st)=>{const $=T.el=y.el;let{patchFlag:ut,dynamicChildren:nt,dirs:E}=T;ut|=y.patchFlag&16;const M=y.props||ce,U=T.props||ce;let K;F&&Ti(F,!1),(K=U.onVnodeBeforeUpdate)&&En(K,F,T,y),E&&Si(T,y,F,"beforeUpdate"),F&&Ti(F,!0);const rt=B&&T.type!=="foreignObject";if(nt?R(y.dynamicChildren,nt,$,F,H,rt,et):st||Y(y,T,$,null,F,H,rt,et,!1),ut>0){if(ut&16)j($,T,M,U,F,H,B);else if(ut&2&&M.class!==U.class&&r($,"class",null,U.class,B),ut&4&&r($,"style",M.style,U.style,B),ut&8){const mt=T.dynamicProps;for(let Mt=0;Mt<mt.length;Mt++){const L=mt[Mt],G=M[L],bt=U[L];(bt!==G||L==="value")&&r($,L,G,bt,B,y.children,F,H,z)}}ut&1&&y.children!==T.children&&h($,T.children)}else!st&&nt==null&&j($,T,M,U,F,H,B);((K=U.onVnodeUpdated)||E)&&Xe(()=>{K&&En(K,F,T,y),E&&Si(T,y,F,"updated")},H)},R=(y,T,F,H,B,et,st)=>{for(let $=0;$<T.length;$++){const ut=y[$],nt=T[$],E=ut.el&&(ut.type===yn||!Fi(ut,nt)||ut.shapeFlag&70)?u(ut.el):F;p(ut,nt,E,null,H,B,et,st,!0)}},j=(y,T,F,H,B,et,st)=>{if(F!==H){if(F!==ce)for(const $ in F)!To($)&&!($ in H)&&r(y,$,F[$],null,st,T.children,B,et,z);for(const $ in H){if(To($))continue;const ut=H[$],nt=F[$];ut!==nt&&$!=="value"&&r(y,$,nt,ut,st,T.children,B,et,z)}"value"in H&&r(y,"value",F.value,H.value)}},Q=(y,T,F,H,B,et,st,$,ut)=>{const nt=T.el=y?y.el:a(""),E=T.anchor=y?y.anchor:a("");let{patchFlag:M,dynamicChildren:U,slotScopeIds:K}=T;K&&($=$?$.concat(K):K),y==null?(n(nt,F,H),n(E,F,H),v(T.children,F,E,B,et,st,$,ut)):M>0&&M&64&&U&&y.dynamicChildren?(R(y.dynamicChildren,U,F,B,et,st,$),(T.key!=null||B&&T===B.subTree)&&Fd(y,T,!0)):Y(y,T,F,E,B,et,st,$,ut)},k=(y,T,F,H,B,et,st,$,ut)=>{T.slotScopeIds=$,y==null?T.shapeFlag&512?B.ctx.activate(T,F,H,st,ut):O(T,F,H,B,et,st,ut):J(y,T,ut)},O=(y,T,F,H,B,et,st)=>{const $=y.component=o0(y,H,B);if(Ko(y)&&($.ctx.renderer=gt),l0($),$.asyncDep){if(B&&B.registerDep($,Z),!y.el){const ut=$.subTree=en($n);_(null,ut,T,F)}return}Z($,y,T,F,B,et,st)},J=(y,T,F)=>{const H=T.component=y.component;if(mg(y,T,F))if(H.asyncDep&&!H.asyncResolved){it(H,T,F);return}else H.next=T,ag(H.update),H.update();else T.el=y.el,H.vnode=T},Z=(y,T,F,H,B,et,st)=>{const $=()=>{if(y.isMounted){let{next:E,bu:M,u:U,parent:K,vnode:rt}=y,mt=E,Mt;Ti(y,!1),E?(E.el=rt.el,it(y,E,st)):E=rt,M&&ma(M),(Mt=E.props&&E.props.onVnodeBeforeUpdate)&&En(Mt,K,E,rt),Ti(y,!0);const L=ga(y),G=y.subTree;y.subTree=L,p(G,L,u(G.el),tt(G),y,B,et),E.el=L.el,mt===null&&gg(y,L.el),U&&Xe(U,B),(Mt=E.props&&E.props.onVnodeUpdated)&&Xe(()=>En(Mt,K,E,rt),B)}else{let E;const{el:M,props:U}=T,{bm:K,m:rt,parent:mt}=y,Mt=Co(T);if(Ti(y,!1),K&&ma(K),!Mt&&(E=U&&U.onVnodeBeforeMount)&&En(E,mt,T),Ti(y,!0),M&&wt){const L=()=>{y.subTree=ga(y),wt(M,y.subTree,y,B,null)};Mt?T.type.__asyncLoader().then(()=>!y.isUnmounted&&L()):L()}else{const L=y.subTree=ga(y);p(null,L,F,H,y,B,et),T.el=L.el}if(rt&&Xe(rt,B),!Mt&&(E=U&&U.onVnodeMounted)){const L=T;Xe(()=>En(E,mt,L),B)}(T.shapeFlag&256||mt&&Co(mt.vnode)&&mt.vnode.shapeFlag&256)&&y.a&&Xe(y.a,B),y.isMounted=!0,T=F=H=null}},ut=y.effect=new sc($,()=>uc(nt),y.scope),nt=y.update=()=>ut.run();nt.id=y.uid,Ti(y,!0),nt()},it=(y,T,F)=>{T.component=y;const H=y.vnode.props;y.vnode=T,y.next=null,Gg(y,T.props,H,F),jg(y,T.children,F),ks(),Zc(),Bs()},Y=(y,T,F,H,B,et,st,$,ut=!1)=>{const nt=y&&y.children,E=y?y.shapeFlag:0,M=T.children,{patchFlag:U,shapeFlag:K}=T;if(U>0){if(U&128){dt(nt,M,F,H,B,et,st,$,ut);return}else if(U&256){ft(nt,M,F,H,B,et,st,$,ut);return}}K&8?(E&16&&z(nt,B,et),M!==nt&&h(F,M)):E&16?K&16?dt(nt,M,F,H,B,et,st,$,ut):z(nt,B,et,!0):(E&8&&h(F,""),K&16&&v(M,F,H,B,et,st,$,ut))},ft=(y,T,F,H,B,et,st,$,ut)=>{y=y||ws,T=T||ws;const nt=y.length,E=T.length,M=Math.min(nt,E);let U;for(U=0;U<M;U++){const K=T[U]=ut?hi(T[U]):Cn(T[U]);p(y[U],K,F,null,B,et,st,$,ut)}nt>E?z(y,B,et,!0,!1,M):v(T,F,H,B,et,st,$,ut,M)},dt=(y,T,F,H,B,et,st,$,ut)=>{let nt=0;const E=T.length;let M=y.length-1,U=E-1;for(;nt<=M&&nt<=U;){const K=y[nt],rt=T[nt]=ut?hi(T[nt]):Cn(T[nt]);if(Fi(K,rt))p(K,rt,F,null,B,et,st,$,ut);else break;nt++}for(;nt<=M&&nt<=U;){const K=y[M],rt=T[U]=ut?hi(T[U]):Cn(T[U]);if(Fi(K,rt))p(K,rt,F,null,B,et,st,$,ut);else break;M--,U--}if(nt>M){if(nt<=U){const K=U+1,rt=K<E?T[K].el:H;for(;nt<=U;)p(null,T[nt]=ut?hi(T[nt]):Cn(T[nt]),F,rt,B,et,st,$,ut),nt++}}else if(nt>U)for(;nt<=M;)W(y[nt],B,et,!0),nt++;else{const K=nt,rt=nt,mt=new Map;for(nt=rt;nt<=U;nt++){const Et=T[nt]=ut?hi(T[nt]):Cn(T[nt]);Et.key!=null&&mt.set(Et.key,nt)}let Mt,L=0;const G=U-rt+1;let bt=!1,At=0;const Tt=new Array(G);for(nt=0;nt<G;nt++)Tt[nt]=0;for(nt=K;nt<=M;nt++){const Et=y[nt];if(L>=G){W(Et,B,et,!0);continue}let zt;if(Et.key!=null)zt=mt.get(Et.key);else for(Mt=rt;Mt<=U;Mt++)if(Tt[Mt-rt]===0&&Fi(Et,T[Mt])){zt=Mt;break}zt===void 0?W(Et,B,et,!0):(Tt[zt-rt]=nt+1,zt>=At?At=zt:bt=!0,p(Et,T[zt],F,null,B,et,st,$,ut),L++)}const Pt=bt?Kg(Tt):ws;for(Mt=Pt.length-1,nt=G-1;nt>=0;nt--){const Et=rt+nt,zt=T[Et],Vt=Et+1<E?T[Et+1].el:H;Tt[nt]===0?p(null,zt,F,Vt,B,et,st,$,ut):bt&&(Mt<0||nt!==Pt[Mt]?yt(zt,F,Vt,2):Mt--)}}},yt=(y,T,F,H,B=null)=>{const{el:et,type:st,transition:$,children:ut,shapeFlag:nt}=y;if(nt&6){yt(y.component.subTree,T,F,H);return}if(nt&128){y.suspense.move(T,F,H);return}if(nt&64){st.move(y,T,F,gt);return}if(st===yn){n(et,T,F);for(let M=0;M<ut.length;M++)yt(ut[M],T,F,H);n(y.anchor,T,F);return}if(st===va){x(y,T,F);return}if(H!==2&&nt&1&&$)if(H===0)$.beforeEnter(et),n(et,T,F),Xe(()=>$.enter(et),B);else{const{leave:M,delayLeave:U,afterLeave:K}=$,rt=()=>n(et,T,F),mt=()=>{M(et,()=>{rt(),K&&K()})};U?U(et,rt,mt):mt()}else n(et,T,F)},W=(y,T,F,H=!1,B=!1)=>{const{type:et,props:st,ref:$,children:ut,dynamicChildren:nt,shapeFlag:E,patchFlag:M,dirs:U}=y;if($!=null&&Pl($,null,F,y,!0),E&256){T.ctx.deactivate(y);return}const K=E&1&&U,rt=!Co(y);let mt;if(rt&&(mt=st&&st.onVnodeBeforeUnmount)&&En(mt,T,y),E&6)N(y.component,F,H);else{if(E&128){y.suspense.unmount(F,H);return}K&&Si(y,null,T,"beforeUnmount"),E&64?y.type.remove(y,T,F,B,gt,H):nt&&(et!==yn||M>0&&M&64)?z(nt,T,F,!1,!0):(et===yn&&M&384||!B&&E&16)&&z(ut,T,F),H&&ot(y)}(rt&&(mt=st&&st.onVnodeUnmounted)||K)&&Xe(()=>{mt&&En(mt,T,y),K&&Si(y,null,T,"unmounted")},F)},ot=y=>{const{type:T,el:F,anchor:H,transition:B}=y;if(T===yn){vt(F,H);return}if(T===va){b(y);return}const et=()=>{s(F),B&&!B.persisted&&B.afterLeave&&B.afterLeave()};if(y.shapeFlag&1&&B&&!B.persisted){const{leave:st,delayLeave:$}=B,ut=()=>st(F,et);$?$(y.el,et,ut):ut()}else et()},vt=(y,T)=>{let F;for(;y!==T;)F=f(y),s(y),y=F;s(T)},N=(y,T,F)=>{const{bum:H,scope:B,update:et,subTree:st,um:$}=y;H&&ma(H),B.stop(),et&&(et.active=!1,W(st,y,T,F)),$&&Xe($,T),Xe(()=>{y.isUnmounted=!0},T),T&&T.pendingBranch&&!T.isUnmounted&&y.asyncDep&&!y.asyncResolved&&y.suspenseId===T.pendingId&&(T.deps--,T.deps===0&&T.resolve())},z=(y,T,F,H=!1,B=!1,et=0)=>{for(let st=et;st<y.length;st++)W(y[st],T,F,H,B)},tt=y=>y.shapeFlag&6?tt(y.component.subTree):y.shapeFlag&128?y.suspense.next():f(y.anchor||y.el),ct=(y,T,F)=>{y==null?T._vnode&&W(T._vnode,null,null,!0):p(T._vnode||null,y,T,null,null,null,F),Zc(),dd(),T._vnode=y},gt={p,um:W,m:yt,r:ot,mt:O,mc:v,pc:Y,pbc:R,n:tt,o:i};let pt,wt;return t&&([pt,wt]=t(gt)),{render:ct,hydrate:pt,createApp:Yg(ct,pt)}}function Ti({effect:i,update:t},e){i.allowRecurse=t.allowRecurse=e}function Fd(i,t,e=!1){const n=i.children,s=t.children;if(Nt(n)&&Nt(s))for(let r=0;r<n.length;r++){const o=n[r];let a=s[r];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=s[r]=hi(s[r]),a.el=o.el),e||Fd(o,a)),a.type===Qo&&(a.el=o.el)}}function Kg(i){const t=i.slice(),e=[0];let n,s,r,o,a;const l=i.length;for(n=0;n<l;n++){const c=i[n];if(c!==0){if(s=e[e.length-1],i[s]<c){t[n]=s,e.push(n);continue}for(r=0,o=e.length-1;r<o;)a=r+o>>1,i[e[a]]<c?r=a+1:o=a;c<i[e[r]]&&(r>0&&(t[n]=e[r-1]),e[r]=n)}}for(r=e.length,o=e[r-1];r-- >0;)e[r]=o,o=t[o];return e}const Jg=i=>i.__isTeleport,yn=Symbol(void 0),Qo=Symbol(void 0),$n=Symbol(void 0),va=Symbol(void 0),cr=[];let Mn=null;function Di(i=!1){cr.push(Mn=i?null:[])}function Qg(){cr.pop(),Mn=cr[cr.length-1]||null}let yr=1;function ah(i){yr+=i}function zd(i){return i.dynamicChildren=yr>0?Mn||ws:null,Qg(),yr>0&&Mn&&Mn.push(i),i}function xs(i,t,e,n,s,r){return zd(Hi(i,t,e,n,s,r,!0))}function t0(i,t,e,n,s){return zd(en(i,t,e,n,s,!0))}function Ll(i){return i?i.__v_isVNode===!0:!1}function Fi(i,t){return i.type===t.type&&i.key===t.key}const ta="__vInternal",Od=({key:i})=>i??null,Po=({ref:i,ref_key:t,ref_for:e})=>i!=null?ye(i)||Ie(i)||Ut(i)?{i:hn,r:i,k:t,f:!!e}:i:null;function Hi(i,t=null,e=null,n=0,s=null,r=i===yn?0:1,o=!1,a=!1){const l={__v_isVNode:!0,__v_skip:!0,type:i,props:t,key:t&&Od(t),ref:t&&Po(t),scopeId:Zo,slotScopeIds:null,children:e,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:r,patchFlag:n,dynamicProps:s,dynamicChildren:null,appContext:null,ctx:hn};return a?(pc(l,e),r&128&&i.normalize(l)):e&&(l.shapeFlag|=ye(e)?8:16),yr>0&&!o&&Mn&&(l.patchFlag>0||r&6)&&l.patchFlag!==32&&Mn.push(l),l}const en=e0;function e0(i,t=null,e=null,n=0,s=null,r=!1){if((!i||i===Dg)&&(i=$n),Ll(i)){const a=xi(i,t,!0);return e&&pc(a,e),yr>0&&!r&&Mn&&(a.shapeFlag&6?Mn[Mn.indexOf(i)]=a:Mn.push(a)),a.patchFlag|=-2,a}if(d0(i)&&(i=i.__vccOpts),t){t=n0(t);let{class:a,style:l}=t;a&&!ye(a)&&(t.class=Jl(a)),he(l)&&(id(l)&&!Nt(l)&&(l=De({},l)),t.style=Kl(l))}const o=ye(i)?1:_g(i)?128:Jg(i)?64:he(i)?4:Ut(i)?2:0;return Hi(i,t,e,n,s,o,r,!0)}function n0(i){return i?id(i)||ta in i?De({},i):i:null}function xi(i,t,e=!1){const{props:n,ref:s,patchFlag:r,children:o}=i,a=t?i0(n||{},t):n;return{__v_isVNode:!0,__v_skip:!0,type:i.type,props:a,key:a&&Od(a),ref:t&&t.ref?e&&s?Nt(s)?s.concat(Po(t)):[s,Po(t)]:Po(t):s,scopeId:i.scopeId,slotScopeIds:i.slotScopeIds,children:o,target:i.target,targetAnchor:i.targetAnchor,staticCount:i.staticCount,shapeFlag:i.shapeFlag,patchFlag:t&&i.type!==yn?r===-1?16:r|16:r,dynamicProps:i.dynamicProps,dynamicChildren:i.dynamicChildren,appContext:i.appContext,dirs:i.dirs,transition:i.transition,component:i.component,suspense:i.suspense,ssContent:i.ssContent&&xi(i.ssContent),ssFallback:i.ssFallback&&xi(i.ssFallback),el:i.el,anchor:i.anchor,ctx:i.ctx,ce:i.ce}}function Nd(i=" ",t=0){return en(Qo,null,i,t)}function Cn(i){return i==null||typeof i=="boolean"?en($n):Nt(i)?en(yn,null,i.slice()):typeof i=="object"?hi(i):en(Qo,null,String(i))}function hi(i){return i.el===null&&i.patchFlag!==-1||i.memo?i:xi(i)}function pc(i,t){let e=0;const{shapeFlag:n}=i;if(t==null)t=null;else if(Nt(t))e=16;else if(typeof t=="object")if(n&65){const s=t.default;s&&(s._c&&(s._d=!1),pc(i,s()),s._c&&(s._d=!0));return}else{e=32;const s=t._;!s&&!(ta in t)?t._ctx=hn:s===3&&hn&&(hn.slots._===1?t._=1:(t._=2,i.patchFlag|=1024))}else Ut(t)?(t={default:t,_ctx:hn},e=32):(t=String(t),n&64?(e=16,t=[Nd(t)]):e=8);i.children=t,i.shapeFlag|=e}function i0(...i){const t={};for(let e=0;e<i.length;e++){const n=i[e];for(const s in n)if(s==="class")t.class!==n.class&&(t.class=Jl([t.class,n.class]));else if(s==="style")t.style=Kl([t.style,n.style]);else if(Go(s)){const r=t[s],o=n[s];o&&r!==o&&!(Nt(r)&&r.includes(o))&&(t[s]=r?[].concat(r,o):o)}else s!==""&&(t[s]=n[s])}return t}function En(i,t,e,n=null){dn(i,t,7,[e,n])}const s0=Dd();let r0=0;function o0(i,t,e){const n=i.type,s=(t?t.appContext:i.appContext)||s0,r={uid:r0++,vnode:i,type:n,parent:t,appContext:s,root:null,next:null,subTree:null,effect:null,update:null,scope:new bm(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(s.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Pd(n,s),emitsOptions:md(n,s),emit:null,emitted:null,propsDefaults:ce,inheritAttrs:n.inheritAttrs,ctx:ce,data:ce,props:ce,attrs:ce,slots:ce,refs:ce,setupState:ce,setupContext:null,suspense:e,suspenseId:e?e.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return r.ctx={_:r},r.root=t?t.root:r,r.emit=hg.bind(null,r),i.ce&&i.ce(r),r}let me=null;const a0=()=>me||hn,Rs=i=>{me=i,i.scope.on()},ki=()=>{me&&me.scope.off(),me=null};function Ud(i){return i.vnode.shapeFlag&4}let wr=!1;function l0(i,t=!1){wr=t;const{props:e,children:n}=i.vnode,s=Ud(i);Hg(i,e,s,t),Xg(i,n);const r=s?c0(i,t):void 0;return wr=!1,r}function c0(i,t){const e=i.type;i.accessCache=Object.create(null),i.proxy=sd(new Proxy(i.ctx,Og));const{setup:n}=e;if(n){const s=i.setupContext=n.length>1?u0(i):null;Rs(i),ks();const r=mi(n,i,0,[i.props,s]);if(Bs(),ki(),Gf(r)){if(r.then(ki,ki),t)return r.then(o=>{lh(i,o,t)}).catch(o=>{Yo(o,i,0)});i.asyncDep=r}else lh(i,r,t)}else kd(i,t)}function lh(i,t,e){Ut(t)?i.type.__ssrInlineRender?i.ssrRender=t:i.render=t:he(t)&&(i.setupState=ld(t)),kd(i,e)}let ch;function kd(i,t,e){const n=i.type;if(!i.render){if(!t&&ch&&!n.render){const s=n.template||fc(i).template;if(s){const{isCustomElement:r,compilerOptions:o}=i.appContext.config,{delimiters:a,compilerOptions:l}=n,c=De(De({isCustomElement:r,delimiters:a},o),l);n.render=ch(s,c)}}i.render=n.render||bn}Rs(i),ks(),Ng(i),Bs(),ki()}function h0(i){return new Proxy(i.attrs,{get(t,e){return Ye(i,"get","$attrs"),t[e]}})}function u0(i){const t=n=>{i.exposed=n||{}};let e;return{get attrs(){return e||(e=h0(i))},slots:i.slots,emit:i.emit,expose:t}}function mc(i){if(i.exposed)return i.exposeProxy||(i.exposeProxy=new Proxy(ld(sd(i.exposed)),{get(t,e){if(e in t)return t[e];if(e in lr)return lr[e](i)},has(t,e){return e in t||e in lr}}))}function f0(i,t=!0){return Ut(i)?i.displayName||i.name:i.name||t&&i.__name}function d0(i){return Ut(i)&&"__vccOpts"in i}const an=(i,t)=>sg(i,t,wr);function Bd(i,t,e){const n=arguments.length;return n===2?he(t)&&!Nt(t)?Ll(t)?en(i,null,[t]):en(i,t):en(i,null,t):(n>3?e=Array.prototype.slice.call(arguments,2):n===3&&Ll(e)&&(e=[e]),en(i,t,e))}const p0=Symbol(""),m0=()=>Yn(p0),g0="3.2.47",_0="http://www.w3.org/2000/svg",zi=typeof document<"u"?document:null,hh=zi&&zi.createElement("template"),x0={insert:(i,t,e)=>{t.insertBefore(i,e||null)},remove:i=>{const t=i.parentNode;t&&t.removeChild(i)},createElement:(i,t,e,n)=>{const s=t?zi.createElementNS(_0,i):zi.createElement(i,e?{is:e}:void 0);return i==="select"&&n&&n.multiple!=null&&s.setAttribute("multiple",n.multiple),s},createText:i=>zi.createTextNode(i),createComment:i=>zi.createComment(i),setText:(i,t)=>{i.nodeValue=t},setElementText:(i,t)=>{i.textContent=t},parentNode:i=>i.parentNode,nextSibling:i=>i.nextSibling,querySelector:i=>zi.querySelector(i),setScopeId(i,t){i.setAttribute(t,"")},insertStaticContent(i,t,e,n,s,r){const o=e?e.previousSibling:t.lastChild;if(s&&(s===r||s.nextSibling))for(;t.insertBefore(s.cloneNode(!0),e),!(s===r||!(s=s.nextSibling)););else{hh.innerHTML=n?`<svg>${i}</svg>`:i;const a=hh.content;if(n){const l=a.firstChild;for(;l.firstChild;)a.appendChild(l.firstChild);a.removeChild(l)}t.insertBefore(a,e)}return[o?o.nextSibling:t.firstChild,e?e.previousSibling:t.lastChild]}};function v0(i,t,e){const n=i._vtc;n&&(t=(t?[t,...n]:[...n]).join(" ")),t==null?i.removeAttribute("class"):e?i.setAttribute("class",t):i.className=t}function y0(i,t,e){const n=i.style,s=ye(e);if(e&&!s){if(t&&!ye(t))for(const r in t)e[r]==null&&Rl(n,r,"");for(const r in e)Rl(n,r,e[r])}else{const r=n.display;s?t!==e&&(n.cssText=e):t&&i.removeAttribute("style"),"_vod"in i&&(n.display=r)}}const uh=/\s*!important$/;function Rl(i,t,e){if(Nt(e))e.forEach(n=>Rl(i,t,n));else if(e==null&&(e=""),t.startsWith("--"))i.setProperty(t,e);else{const n=w0(i,t);uh.test(e)?i.setProperty(Us(n),e.replace(uh,""),"important"):i[n]=e}}const fh=["Webkit","Moz","ms"],ya={};function w0(i,t){const e=ya[t];if(e)return e;let n=Dn(t);if(n!=="filter"&&n in i)return ya[t]=n;n=jo(n);for(let s=0;s<fh.length;s++){const r=fh[s]+n;if(r in i)return ya[t]=r}return t}const dh="http://www.w3.org/1999/xlink";function M0(i,t,e,n,s){if(n&&t.startsWith("xlink:"))e==null?i.removeAttributeNS(dh,t.slice(6,t.length)):i.setAttributeNS(dh,t,e);else{const r=dm(t);e==null||r&&!Bf(e)?i.removeAttribute(t):i.setAttribute(t,r?"":e)}}function b0(i,t,e,n,s,r,o){if(t==="innerHTML"||t==="textContent"){n&&o(n,s,r),i[t]=e??"";return}if(t==="value"&&i.tagName!=="PROGRESS"&&!i.tagName.includes("-")){i._value=e;const l=e??"";(i.value!==l||i.tagName==="OPTION")&&(i.value=l),e==null&&i.removeAttribute(t);return}let a=!1;if(e===""||e==null){const l=typeof i[t];l==="boolean"?e=Bf(e):e==null&&l==="string"?(e="",a=!0):l==="number"&&(e=0,a=!0)}try{i[t]=e}catch{}a&&i.removeAttribute(t)}function S0(i,t,e,n){i.addEventListener(t,e,n)}function T0(i,t,e,n){i.removeEventListener(t,e,n)}function E0(i,t,e,n,s=null){const r=i._vei||(i._vei={}),o=r[t];if(n&&o)o.value=n;else{const[a,l]=A0(t);if(n){const c=r[t]=L0(n,s);S0(i,a,c,l)}else o&&(T0(i,a,o,l),r[t]=void 0)}}const ph=/(?:Once|Passive|Capture)$/;function A0(i){let t;if(ph.test(i)){t={};let n;for(;n=i.match(ph);)i=i.slice(0,i.length-n[0].length),t[n[0].toLowerCase()]=!0}return[i[2]===":"?i.slice(3):Us(i.slice(2)),t]}let wa=0;const C0=Promise.resolve(),P0=()=>wa||(C0.then(()=>wa=0),wa=Date.now());function L0(i,t){const e=n=>{if(!n._vts)n._vts=Date.now();else if(n._vts<=e.attached)return;dn(R0(n,e.value),t,5,[n])};return e.value=i,e.attached=P0(),e}function R0(i,t){if(Nt(t)){const e=i.stopImmediatePropagation;return i.stopImmediatePropagation=()=>{e.call(i),i._stopped=!0},t.map(n=>s=>!s._stopped&&n&&n(s))}else return t}const mh=/^on[a-z]/,I0=(i,t,e,n,s=!1,r,o,a,l)=>{t==="class"?v0(i,n,s):t==="style"?y0(i,e,n):Go(t)?Ql(t)||E0(i,t,e,n,o):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):D0(i,t,n,s))?b0(i,t,n,r,o,a,l):(t==="true-value"?i._trueValue=n:t==="false-value"&&(i._falseValue=n),M0(i,t,n,s))};function D0(i,t,e,n){return n?!!(t==="innerHTML"||t==="textContent"||t in i&&mh.test(t)&&Ut(e)):t==="spellcheck"||t==="draggable"||t==="translate"||t==="form"||t==="list"&&i.tagName==="INPUT"||t==="type"&&i.tagName==="TEXTAREA"||mh.test(t)&&ye(e)?!1:t in i}const F0={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String};Mg.props;const z0=De({patchProp:I0},x0);let gh;function O0(){return gh||(gh=$g(z0))}const N0=(...i)=>{const t=O0().createApp(...i),{mount:e}=t;return t.mount=n=>{const s=U0(n);if(!s)return;const r=t._component;!Ut(r)&&!r.render&&!r.template&&(r.template=s.innerHTML),s.innerHTML="";const o=e(s,!1,s instanceof SVGElement);return s instanceof Element&&(s.removeAttribute("v-cloak"),s.setAttribute("data-v-app","")),o},t};function U0(i){return ye(i)?document.querySelector(i):i}/*!
  * vue-router v4.1.6
  * (c) 2022 Eduardo San Martin Morote
  * @license MIT
  */const ps=typeof window<"u";function k0(i){return i.__esModule||i[Symbol.toStringTag]==="Module"}const se=Object.assign;function Ma(i,t){const e={};for(const n in t){const s=t[n];e[n]=Sn(s)?s.map(i):i(s)}return e}const hr=()=>{},Sn=Array.isArray,B0=/\/$/,V0=i=>i.replace(B0,"");function ba(i,t,e="/"){let n,s={},r="",o="";const a=t.indexOf("#");let l=t.indexOf("?");return a<l&&a>=0&&(l=-1),l>-1&&(n=t.slice(0,l),r=t.slice(l+1,a>-1?a:t.length),s=i(r)),a>-1&&(n=n||t.slice(0,a),o=t.slice(a,t.length)),n=X0(n??t,e),{fullPath:n+(r&&"?")+r+o,path:n,query:s,hash:o}}function H0(i,t){const e=t.query?i(t.query):"";return t.path+(e&&"?")+e+(t.hash||"")}function _h(i,t){return!t||!i.toLowerCase().startsWith(t.toLowerCase())?i:i.slice(t.length)||"/"}function G0(i,t,e){const n=t.matched.length-1,s=e.matched.length-1;return n>-1&&n===s&&Is(t.matched[n],e.matched[s])&&Vd(t.params,e.params)&&i(t.query)===i(e.query)&&t.hash===e.hash}function Is(i,t){return(i.aliasOf||i)===(t.aliasOf||t)}function Vd(i,t){if(Object.keys(i).length!==Object.keys(t).length)return!1;for(const e in i)if(!W0(i[e],t[e]))return!1;return!0}function W0(i,t){return Sn(i)?xh(i,t):Sn(t)?xh(t,i):i===t}function xh(i,t){return Sn(t)?i.length===t.length&&i.every((e,n)=>e===t[n]):i.length===1&&i[0]===t}function X0(i,t){if(i.startsWith("/"))return i;if(!i)return t;const e=t.split("/"),n=i.split("/");let s=e.length-1,r,o;for(r=0;r<n.length;r++)if(o=n[r],o!==".")if(o==="..")s>1&&s--;else break;return e.slice(0,s).join("/")+"/"+n.slice(r-(r===n.length?1:0)).join("/")}var Mr;(function(i){i.pop="pop",i.push="push"})(Mr||(Mr={}));var ur;(function(i){i.back="back",i.forward="forward",i.unknown=""})(ur||(ur={}));function j0(i){if(!i)if(ps){const t=document.querySelector("base");i=t&&t.getAttribute("href")||"/",i=i.replace(/^\w+:\/\/[^\/]+/,"")}else i="/";return i[0]!=="/"&&i[0]!=="#"&&(i="/"+i),V0(i)}const q0=/^[^#]+#/;function Y0(i,t){return i.replace(q0,"#")+t}function $0(i,t){const e=document.documentElement.getBoundingClientRect(),n=i.getBoundingClientRect();return{behavior:t.behavior,left:n.left-e.left-(t.left||0),top:n.top-e.top-(t.top||0)}}const ea=()=>({left:window.pageXOffset,top:window.pageYOffset});function Z0(i){let t;if("el"in i){const e=i.el,n=typeof e=="string"&&e.startsWith("#"),s=typeof e=="string"?n?document.getElementById(e.slice(1)):document.querySelector(e):e;if(!s)return;t=$0(s,i)}else t=i;"scrollBehavior"in document.documentElement.style?window.scrollTo(t):window.scrollTo(t.left!=null?t.left:window.pageXOffset,t.top!=null?t.top:window.pageYOffset)}function vh(i,t){return(history.state?history.state.position-t:-1)+i}const Il=new Map;function K0(i,t){Il.set(i,t)}function J0(i){const t=Il.get(i);return Il.delete(i),t}let Q0=()=>location.protocol+"//"+location.host;function Hd(i,t){const{pathname:e,search:n,hash:s}=t,r=i.indexOf("#");if(r>-1){let a=s.includes(i.slice(r))?i.slice(r).length:1,l=s.slice(a);return l[0]!=="/"&&(l="/"+l),_h(l,"")}return _h(e,i)+n+s}function t_(i,t,e,n){let s=[],r=[],o=null;const a=({state:f})=>{const d=Hd(i,location),g=e.value,p=t.value;let m=0;if(f){if(e.value=d,t.value=f,o&&o===g){o=null;return}m=p?f.position-p.position:0}else n(d);s.forEach(_=>{_(e.value,g,{delta:m,type:Mr.pop,direction:m?m>0?ur.forward:ur.back:ur.unknown})})};function l(){o=e.value}function c(f){s.push(f);const d=()=>{const g=s.indexOf(f);g>-1&&s.splice(g,1)};return r.push(d),d}function h(){const{history:f}=window;f.state&&f.replaceState(se({},f.state,{scroll:ea()}),"")}function u(){for(const f of r)f();r=[],window.removeEventListener("popstate",a),window.removeEventListener("beforeunload",h)}return window.addEventListener("popstate",a),window.addEventListener("beforeunload",h),{pauseListeners:l,listen:c,destroy:u}}function yh(i,t,e,n=!1,s=!1){return{back:i,current:t,forward:e,replaced:n,position:window.history.length,scroll:s?ea():null}}function e_(i){const{history:t,location:e}=window,n={value:Hd(i,e)},s={value:t.state};s.value||r(n.value,{back:null,current:n.value,forward:null,position:t.length-1,replaced:!0,scroll:null},!0);function r(l,c,h){const u=i.indexOf("#"),f=u>-1?(e.host&&document.querySelector("base")?i:i.slice(u))+l:Q0()+i+l;try{t[h?"replaceState":"pushState"](c,"",f),s.value=c}catch(d){console.error(d),e[h?"replace":"assign"](f)}}function o(l,c){const h=se({},t.state,yh(s.value.back,l,s.value.forward,!0),c,{position:s.value.position});r(l,h,!0),n.value=l}function a(l,c){const h=se({},s.value,t.state,{forward:l,scroll:ea()});r(h.current,h,!0);const u=se({},yh(n.value,l,null),{position:h.position+1},c);r(l,u,!1),n.value=l}return{location:n,state:s,push:a,replace:o}}function n_(i){i=j0(i);const t=e_(i),e=t_(i,t.state,t.location,t.replace);function n(r,o=!0){o||e.pauseListeners(),history.go(r)}const s=se({location:"",base:i,go:n,createHref:Y0.bind(null,i)},t,e);return Object.defineProperty(s,"location",{enumerable:!0,get:()=>t.location.value}),Object.defineProperty(s,"state",{enumerable:!0,get:()=>t.state.value}),s}function i_(i){return i=location.host?i||location.pathname+location.search:"",i.includes("#")||(i+="#"),n_(i)}function s_(i){return typeof i=="string"||i&&typeof i=="object"}function Gd(i){return typeof i=="string"||typeof i=="symbol"}const ii={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},Wd=Symbol("");var wh;(function(i){i[i.aborted=4]="aborted",i[i.cancelled=8]="cancelled",i[i.duplicated=16]="duplicated"})(wh||(wh={}));function Ds(i,t){return se(new Error,{type:i,[Wd]:!0},t)}function Bn(i,t){return i instanceof Error&&Wd in i&&(t==null||!!(i.type&t))}const Mh="[^/]+?",r_={sensitive:!1,strict:!1,start:!0,end:!0},o_=/[.+*?^${}()[\]/\\]/g;function a_(i,t){const e=se({},r_,t),n=[];let s=e.start?"^":"";const r=[];for(const c of i){const h=c.length?[]:[90];e.strict&&!c.length&&(s+="/");for(let u=0;u<c.length;u++){const f=c[u];let d=40+(e.sensitive?.25:0);if(f.type===0)u||(s+="/"),s+=f.value.replace(o_,"\\$&"),d+=40;else if(f.type===1){const{value:g,repeatable:p,optional:m,regexp:_}=f;r.push({name:g,repeatable:p,optional:m});const w=_||Mh;if(w!==Mh){d+=10;try{new RegExp(`(${w})`)}catch(b){throw new Error(`Invalid custom RegExp for param "${g}" (${w}): `+b.message)}}let x=p?`((?:${w})(?:/(?:${w}))*)`:`(${w})`;u||(x=m&&c.length<2?`(?:/${x})`:"/"+x),m&&(x+="?"),s+=x,d+=20,m&&(d+=-8),p&&(d+=-20),w===".*"&&(d+=-50)}h.push(d)}n.push(h)}if(e.strict&&e.end){const c=n.length-1;n[c][n[c].length-1]+=.7000000000000001}e.strict||(s+="/?"),e.end?s+="$":e.strict&&(s+="(?:/|$)");const o=new RegExp(s,e.sensitive?"":"i");function a(c){const h=c.match(o),u={};if(!h)return null;for(let f=1;f<h.length;f++){const d=h[f]||"",g=r[f-1];u[g.name]=d&&g.repeatable?d.split("/"):d}return u}function l(c){let h="",u=!1;for(const f of i){(!u||!h.endsWith("/"))&&(h+="/"),u=!1;for(const d of f)if(d.type===0)h+=d.value;else if(d.type===1){const{value:g,repeatable:p,optional:m}=d,_=g in c?c[g]:"";if(Sn(_)&&!p)throw new Error(`Provided param "${g}" is an array but it is not repeatable (* or + modifiers)`);const w=Sn(_)?_.join("/"):_;if(!w)if(m)f.length<2&&(h.endsWith("/")?h=h.slice(0,-1):u=!0);else throw new Error(`Missing required param "${g}"`);h+=w}}return h||"/"}return{re:o,score:n,keys:r,parse:a,stringify:l}}function l_(i,t){let e=0;for(;e<i.length&&e<t.length;){const n=t[e]-i[e];if(n)return n;e++}return i.length<t.length?i.length===1&&i[0]===40+40?-1:1:i.length>t.length?t.length===1&&t[0]===40+40?1:-1:0}function c_(i,t){let e=0;const n=i.score,s=t.score;for(;e<n.length&&e<s.length;){const r=l_(n[e],s[e]);if(r)return r;e++}if(Math.abs(s.length-n.length)===1){if(bh(n))return 1;if(bh(s))return-1}return s.length-n.length}function bh(i){const t=i[i.length-1];return i.length>0&&t[t.length-1]<0}const h_={type:0,value:""},u_=/[a-zA-Z0-9_]/;function f_(i){if(!i)return[[]];if(i==="/")return[[h_]];if(!i.startsWith("/"))throw new Error(`Invalid path "${i}"`);function t(d){throw new Error(`ERR (${e})/"${c}": ${d}`)}let e=0,n=e;const s=[];let r;function o(){r&&s.push(r),r=[]}let a=0,l,c="",h="";function u(){c&&(e===0?r.push({type:0,value:c}):e===1||e===2||e===3?(r.length>1&&(l==="*"||l==="+")&&t(`A repeatable param (${c}) must be alone in its segment. eg: '/:ids+.`),r.push({type:1,value:c,regexp:h,repeatable:l==="*"||l==="+",optional:l==="*"||l==="?"})):t("Invalid state to consume buffer"),c="")}function f(){c+=l}for(;a<i.length;){if(l=i[a++],l==="\\"&&e!==2){n=e,e=4;continue}switch(e){case 0:l==="/"?(c&&u(),o()):l===":"?(u(),e=1):f();break;case 4:f(),e=n;break;case 1:l==="("?e=2:u_.test(l)?f():(u(),e=0,l!=="*"&&l!=="?"&&l!=="+"&&a--);break;case 2:l===")"?h[h.length-1]=="\\"?h=h.slice(0,-1)+l:e=3:h+=l;break;case 3:u(),e=0,l!=="*"&&l!=="?"&&l!=="+"&&a--,h="";break;default:t("Unknown state");break}}return e===2&&t(`Unfinished custom RegExp for param "${c}"`),u(),o(),s}function d_(i,t,e){const n=a_(f_(i.path),e),s=se(n,{record:i,parent:t,children:[],alias:[]});return t&&!s.record.aliasOf==!t.record.aliasOf&&t.children.push(s),s}function p_(i,t){const e=[],n=new Map;t=Eh({strict:!1,end:!0,sensitive:!1},t);function s(h){return n.get(h)}function r(h,u,f){const d=!f,g=m_(h);g.aliasOf=f&&f.record;const p=Eh(t,h),m=[g];if("alias"in h){const x=typeof h.alias=="string"?[h.alias]:h.alias;for(const b of x)m.push(se({},g,{components:f?f.record.components:g.components,path:b,aliasOf:f?f.record:g}))}let _,w;for(const x of m){const{path:b}=x;if(u&&b[0]!=="/"){const S=u.record.path,P=S[S.length-1]==="/"?"":"/";x.path=u.record.path+(b&&P+b)}if(_=d_(x,u,p),f?f.alias.push(_):(w=w||_,w!==_&&w.alias.push(_),d&&h.name&&!Th(_)&&o(h.name)),g.children){const S=g.children;for(let P=0;P<S.length;P++)r(S[P],_,f&&f.children[P])}f=f||_,(_.record.components&&Object.keys(_.record.components).length||_.record.name||_.record.redirect)&&l(_)}return w?()=>{o(w)}:hr}function o(h){if(Gd(h)){const u=n.get(h);u&&(n.delete(h),e.splice(e.indexOf(u),1),u.children.forEach(o),u.alias.forEach(o))}else{const u=e.indexOf(h);u>-1&&(e.splice(u,1),h.record.name&&n.delete(h.record.name),h.children.forEach(o),h.alias.forEach(o))}}function a(){return e}function l(h){let u=0;for(;u<e.length&&c_(h,e[u])>=0&&(h.record.path!==e[u].record.path||!Xd(h,e[u]));)u++;e.splice(u,0,h),h.record.name&&!Th(h)&&n.set(h.record.name,h)}function c(h,u){let f,d={},g,p;if("name"in h&&h.name){if(f=n.get(h.name),!f)throw Ds(1,{location:h});p=f.record.name,d=se(Sh(u.params,f.keys.filter(w=>!w.optional).map(w=>w.name)),h.params&&Sh(h.params,f.keys.map(w=>w.name))),g=f.stringify(d)}else if("path"in h)g=h.path,f=e.find(w=>w.re.test(g)),f&&(d=f.parse(g),p=f.record.name);else{if(f=u.name?n.get(u.name):e.find(w=>w.re.test(u.path)),!f)throw Ds(1,{location:h,currentLocation:u});p=f.record.name,d=se({},u.params,h.params),g=f.stringify(d)}const m=[];let _=f;for(;_;)m.unshift(_.record),_=_.parent;return{name:p,path:g,params:d,matched:m,meta:__(m)}}return i.forEach(h=>r(h)),{addRoute:r,resolve:c,removeRoute:o,getRoutes:a,getRecordMatcher:s}}function Sh(i,t){const e={};for(const n of t)n in i&&(e[n]=i[n]);return e}function m_(i){return{path:i.path,redirect:i.redirect,name:i.name,meta:i.meta||{},aliasOf:void 0,beforeEnter:i.beforeEnter,props:g_(i),children:i.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in i?i.components||null:i.component&&{default:i.component}}}function g_(i){const t={},e=i.props||!1;if("component"in i)t.default=e;else for(const n in i.components)t[n]=typeof e=="boolean"?e:e[n];return t}function Th(i){for(;i;){if(i.record.aliasOf)return!0;i=i.parent}return!1}function __(i){return i.reduce((t,e)=>se(t,e.meta),{})}function Eh(i,t){const e={};for(const n in i)e[n]=n in t?t[n]:i[n];return e}function Xd(i,t){return t.children.some(e=>e===i||Xd(i,e))}const jd=/#/g,x_=/&/g,v_=/\//g,y_=/=/g,w_=/\?/g,qd=/\+/g,M_=/%5B/g,b_=/%5D/g,Yd=/%5E/g,S_=/%60/g,$d=/%7B/g,T_=/%7C/g,Zd=/%7D/g,E_=/%20/g;function gc(i){return encodeURI(""+i).replace(T_,"|").replace(M_,"[").replace(b_,"]")}function A_(i){return gc(i).replace($d,"{").replace(Zd,"}").replace(Yd,"^")}function Dl(i){return gc(i).replace(qd,"%2B").replace(E_,"+").replace(jd,"%23").replace(x_,"%26").replace(S_,"`").replace($d,"{").replace(Zd,"}").replace(Yd,"^")}function C_(i){return Dl(i).replace(y_,"%3D")}function P_(i){return gc(i).replace(jd,"%23").replace(w_,"%3F")}function L_(i){return i==null?"":P_(i).replace(v_,"%2F")}function No(i){try{return decodeURIComponent(""+i)}catch{}return""+i}function R_(i){const t={};if(i===""||i==="?")return t;const n=(i[0]==="?"?i.slice(1):i).split("&");for(let s=0;s<n.length;++s){const r=n[s].replace(qd," "),o=r.indexOf("="),a=No(o<0?r:r.slice(0,o)),l=o<0?null:No(r.slice(o+1));if(a in t){let c=t[a];Sn(c)||(c=t[a]=[c]),c.push(l)}else t[a]=l}return t}function Ah(i){let t="";for(let e in i){const n=i[e];if(e=C_(e),n==null){n!==void 0&&(t+=(t.length?"&":"")+e);continue}(Sn(n)?n.map(r=>r&&Dl(r)):[n&&Dl(n)]).forEach(r=>{r!==void 0&&(t+=(t.length?"&":"")+e,r!=null&&(t+="="+r))})}return t}function I_(i){const t={};for(const e in i){const n=i[e];n!==void 0&&(t[e]=Sn(n)?n.map(s=>s==null?null:""+s):n==null?n:""+n)}return t}const D_=Symbol(""),Ch=Symbol(""),_c=Symbol(""),Kd=Symbol(""),Fl=Symbol("");function js(){let i=[];function t(n){return i.push(n),()=>{const s=i.indexOf(n);s>-1&&i.splice(s,1)}}function e(){i=[]}return{add:t,list:()=>i,reset:e}}function ui(i,t,e,n,s){const r=n&&(n.enterCallbacks[s]=n.enterCallbacks[s]||[]);return()=>new Promise((o,a)=>{const l=u=>{u===!1?a(Ds(4,{from:e,to:t})):u instanceof Error?a(u):s_(u)?a(Ds(2,{from:t,to:u})):(r&&n.enterCallbacks[s]===r&&typeof u=="function"&&r.push(u),o())},c=i.call(n&&n.instances[s],t,e,l);let h=Promise.resolve(c);i.length<3&&(h=h.then(l)),h.catch(u=>a(u))})}function Sa(i,t,e,n){const s=[];for(const r of i)for(const o in r.components){let a=r.components[o];if(!(t!=="beforeRouteEnter"&&!r.instances[o]))if(F_(a)){const c=(a.__vccOpts||a)[t];c&&s.push(ui(c,e,n,r,o))}else{let l=a();s.push(()=>l.then(c=>{if(!c)return Promise.reject(new Error(`Couldn't resolve component "${o}" at "${r.path}"`));const h=k0(c)?c.default:c;r.components[o]=h;const f=(h.__vccOpts||h)[t];return f&&ui(f,e,n,r,o)()}))}}return s}function F_(i){return typeof i=="object"||"displayName"in i||"props"in i||"__vccOpts"in i}function Ph(i){const t=Yn(_c),e=Yn(Kd),n=an(()=>t.resolve(Ss(i.to))),s=an(()=>{const{matched:l}=n.value,{length:c}=l,h=l[c-1],u=e.matched;if(!h||!u.length)return-1;const f=u.findIndex(Is.bind(null,h));if(f>-1)return f;const d=Lh(l[c-2]);return c>1&&Lh(h)===d&&u[u.length-1].path!==d?u.findIndex(Is.bind(null,l[c-2])):f}),r=an(()=>s.value>-1&&U_(e.params,n.value.params)),o=an(()=>s.value>-1&&s.value===e.matched.length-1&&Vd(e.params,n.value.params));function a(l={}){return N_(l)?t[Ss(i.replace)?"replace":"push"](Ss(i.to)).catch(hr):Promise.resolve()}return{route:n,href:an(()=>n.value.href),isActive:r,isExactActive:o,navigate:a}}const z_=wd({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:Ph,setup(i,{slots:t}){const e=Fr(Ph(i)),{options:n}=Yn(_c),s=an(()=>({[Rh(i.activeClass,n.linkActiveClass,"router-link-active")]:e.isActive,[Rh(i.exactActiveClass,n.linkExactActiveClass,"router-link-exact-active")]:e.isExactActive}));return()=>{const r=t.default&&t.default(e);return i.custom?r:Bd("a",{"aria-current":e.isExactActive?i.ariaCurrentValue:null,href:e.href,onClick:e.navigate,class:s.value},r)}}}),O_=z_;function N_(i){if(!(i.metaKey||i.altKey||i.ctrlKey||i.shiftKey)&&!i.defaultPrevented&&!(i.button!==void 0&&i.button!==0)){if(i.currentTarget&&i.currentTarget.getAttribute){const t=i.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return i.preventDefault&&i.preventDefault(),!0}}function U_(i,t){for(const e in t){const n=t[e],s=i[e];if(typeof n=="string"){if(n!==s)return!1}else if(!Sn(s)||s.length!==n.length||n.some((r,o)=>r!==s[o]))return!1}return!0}function Lh(i){return i?i.aliasOf?i.aliasOf.path:i.path:""}const Rh=(i,t,e)=>i??t??e,k_=wd({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(i,{attrs:t,slots:e}){const n=Yn(Fl),s=an(()=>i.route||n.value),r=Yn(Ch,0),o=an(()=>{let c=Ss(r);const{matched:h}=s.value;let u;for(;(u=h[c])&&!u.components;)c++;return c}),a=an(()=>s.value.matched[o.value]);Eo(Ch,an(()=>o.value+1)),Eo(D_,a),Eo(Fl,s);const l=Qm();return Ao(()=>[l.value,a.value,i.name],([c,h,u],[f,d,g])=>{h&&(h.instances[u]=c,d&&d!==h&&c&&c===f&&(h.leaveGuards.size||(h.leaveGuards=d.leaveGuards),h.updateGuards.size||(h.updateGuards=d.updateGuards))),c&&h&&(!d||!Is(h,d)||!f)&&(h.enterCallbacks[u]||[]).forEach(p=>p(c))},{flush:"post"}),()=>{const c=s.value,h=i.name,u=a.value,f=u&&u.components[h];if(!f)return Ih(e.default,{Component:f,route:c});const d=u.props[h],g=d?d===!0?c.params:typeof d=="function"?d(c):d:null,m=Bd(f,se({},g,t,{onVnodeUnmounted:_=>{_.component.isUnmounted&&(u.instances[h]=null)},ref:l}));return Ih(e.default,{Component:m,route:c})||m}}});function Ih(i,t){if(!i)return null;const e=i(t);return e.length===1?e[0]:e}const B_=k_;function V_(i){const t=p_(i.routes,i),e=i.parseQuery||R_,n=i.stringifyQuery||Ah,s=i.history,r=js(),o=js(),a=js(),l=tg(ii);let c=ii;ps&&i.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const h=Ma.bind(null,N=>""+N),u=Ma.bind(null,L_),f=Ma.bind(null,No);function d(N,z){let tt,ct;return Gd(N)?(tt=t.getRecordMatcher(N),ct=z):ct=N,t.addRoute(ct,tt)}function g(N){const z=t.getRecordMatcher(N);z&&t.removeRoute(z)}function p(){return t.getRoutes().map(N=>N.record)}function m(N){return!!t.getRecordMatcher(N)}function _(N,z){if(z=se({},z||l.value),typeof N=="string"){const y=ba(e,N,z.path),T=t.resolve({path:y.path},z),F=s.createHref(y.fullPath);return se(y,T,{params:f(T.params),hash:No(y.hash),redirectedFrom:void 0,href:F})}let tt;if("path"in N)tt=se({},N,{path:ba(e,N.path,z.path).path});else{const y=se({},N.params);for(const T in y)y[T]==null&&delete y[T];tt=se({},N,{params:u(N.params)}),z.params=u(z.params)}const ct=t.resolve(tt,z),gt=N.hash||"";ct.params=h(f(ct.params));const pt=H0(n,se({},N,{hash:A_(gt),path:ct.path})),wt=s.createHref(pt);return se({fullPath:pt,hash:gt,query:n===Ah?I_(N.query):N.query||{}},ct,{redirectedFrom:void 0,href:wt})}function w(N){return typeof N=="string"?ba(e,N,l.value.path):se({},N)}function x(N,z){if(c!==N)return Ds(8,{from:z,to:N})}function b(N){return D(N)}function S(N){return b(se(w(N),{replace:!0}))}function P(N){const z=N.matched[N.matched.length-1];if(z&&z.redirect){const{redirect:tt}=z;let ct=typeof tt=="function"?tt(N):tt;return typeof ct=="string"&&(ct=ct.includes("?")||ct.includes("#")?ct=w(ct):{path:ct},ct.params={}),se({query:N.query,hash:N.hash,params:"path"in ct?{}:N.params},ct)}}function D(N,z){const tt=c=_(N),ct=l.value,gt=N.state,pt=N.force,wt=N.replace===!0,y=P(tt);if(y)return D(se(w(y),{state:typeof y=="object"?se({},gt,y.state):gt,force:pt,replace:wt}),z||tt);const T=tt;T.redirectedFrom=z;let F;return!pt&&G0(n,ct,tt)&&(F=Ds(16,{to:T,from:ct}),dt(ct,ct,!0,!1)),(F?Promise.resolve(F):A(T,ct)).catch(H=>Bn(H)?Bn(H,2)?H:ft(H):it(H,T,ct)).then(H=>{if(H){if(Bn(H,2))return D(se({replace:wt},w(H.to),{state:typeof H.to=="object"?se({},gt,H.to.state):gt,force:pt}),z||T)}else H=j(T,ct,!0,wt,gt);return R(T,ct,H),H})}function v(N,z){const tt=x(N,z);return tt?Promise.reject(tt):Promise.resolve()}function A(N,z){let tt;const[ct,gt,pt]=H_(N,z);tt=Sa(ct.reverse(),"beforeRouteLeave",N,z);for(const y of ct)y.leaveGuards.forEach(T=>{tt.push(ui(T,N,z))});const wt=v.bind(null,N,z);return tt.push(wt),$i(tt).then(()=>{tt=[];for(const y of r.list())tt.push(ui(y,N,z));return tt.push(wt),$i(tt)}).then(()=>{tt=Sa(gt,"beforeRouteUpdate",N,z);for(const y of gt)y.updateGuards.forEach(T=>{tt.push(ui(T,N,z))});return tt.push(wt),$i(tt)}).then(()=>{tt=[];for(const y of N.matched)if(y.beforeEnter&&!z.matched.includes(y))if(Sn(y.beforeEnter))for(const T of y.beforeEnter)tt.push(ui(T,N,z));else tt.push(ui(y.beforeEnter,N,z));return tt.push(wt),$i(tt)}).then(()=>(N.matched.forEach(y=>y.enterCallbacks={}),tt=Sa(pt,"beforeRouteEnter",N,z),tt.push(wt),$i(tt))).then(()=>{tt=[];for(const y of o.list())tt.push(ui(y,N,z));return tt.push(wt),$i(tt)}).catch(y=>Bn(y,8)?y:Promise.reject(y))}function R(N,z,tt){for(const ct of a.list())ct(N,z,tt)}function j(N,z,tt,ct,gt){const pt=x(N,z);if(pt)return pt;const wt=z===ii,y=ps?history.state:{};tt&&(ct||wt?s.replace(N.fullPath,se({scroll:wt&&y&&y.scroll},gt)):s.push(N.fullPath,gt)),l.value=N,dt(N,z,tt,wt),ft()}let Q;function k(){Q||(Q=s.listen((N,z,tt)=>{if(!vt.listening)return;const ct=_(N),gt=P(ct);if(gt){D(se(gt,{replace:!0}),ct).catch(hr);return}c=ct;const pt=l.value;ps&&K0(vh(pt.fullPath,tt.delta),ea()),A(ct,pt).catch(wt=>Bn(wt,12)?wt:Bn(wt,2)?(D(wt.to,ct).then(y=>{Bn(y,20)&&!tt.delta&&tt.type===Mr.pop&&s.go(-1,!1)}).catch(hr),Promise.reject()):(tt.delta&&s.go(-tt.delta,!1),it(wt,ct,pt))).then(wt=>{wt=wt||j(ct,pt,!1),wt&&(tt.delta&&!Bn(wt,8)?s.go(-tt.delta,!1):tt.type===Mr.pop&&Bn(wt,20)&&s.go(-1,!1)),R(ct,pt,wt)}).catch(hr)}))}let O=js(),J=js(),Z;function it(N,z,tt){ft(N);const ct=J.list();return ct.length?ct.forEach(gt=>gt(N,z,tt)):console.error(N),Promise.reject(N)}function Y(){return Z&&l.value!==ii?Promise.resolve():new Promise((N,z)=>{O.add([N,z])})}function ft(N){return Z||(Z=!N,k(),O.list().forEach(([z,tt])=>N?tt(N):z()),O.reset()),N}function dt(N,z,tt,ct){const{scrollBehavior:gt}=i;if(!ps||!gt)return Promise.resolve();const pt=!tt&&J0(vh(N.fullPath,0))||(ct||!tt)&&history.state&&history.state.scroll||null;return ud().then(()=>gt(N,z,pt)).then(wt=>wt&&Z0(wt)).catch(wt=>it(wt,N,z))}const yt=N=>s.go(N);let W;const ot=new Set,vt={currentRoute:l,listening:!0,addRoute:d,removeRoute:g,hasRoute:m,getRoutes:p,resolve:_,options:i,push:b,replace:S,go:yt,back:()=>yt(-1),forward:()=>yt(1),beforeEach:r.add,beforeResolve:o.add,afterEach:a.add,onError:J.add,isReady:Y,install(N){const z=this;N.component("RouterLink",O_),N.component("RouterView",B_),N.config.globalProperties.$router=z,Object.defineProperty(N.config.globalProperties,"$route",{enumerable:!0,get:()=>Ss(l)}),ps&&!W&&l.value===ii&&(W=!0,b(s.location).catch(gt=>{}));const tt={};for(const gt in ii)tt[gt]=an(()=>l.value[gt]);N.provide(_c,z),N.provide(Kd,Fr(tt)),N.provide(Fl,l);const ct=N.unmount;ot.add(N),N.unmount=function(){ot.delete(N),ot.size<1&&(c=ii,Q&&Q(),Q=null,l.value=ii,W=!1,Z=!1),ct()}}};return vt}function $i(i){return i.reduce((t,e)=>t.then(()=>e()),Promise.resolve())}function H_(i,t){const e=[],n=[],s=[],r=Math.max(t.matched.length,i.matched.length);for(let o=0;o<r;o++){const a=t.matched[o];a&&(i.matched.find(c=>Is(c,a))?n.push(a):e.push(a));const l=i.matched[o];l&&(t.matched.find(c=>Is(c,l))||s.push(l))}return[e,n,s]}/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const xc="149",Zi={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Ki={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},G_=0,Dh=1,W_=2,Jd=1,Qd=2,ir=3,pn=0,He=1,Be=2,gi=0,Es=1,Fh=2,zh=3,Oh=4,X_=5,ms=100,j_=101,q_=102,Nh=103,Uh=104,Y_=200,$_=201,Z_=202,K_=203,tp=204,ep=205,J_=206,Q_=207,tx=208,ex=209,nx=210,ix=0,sx=1,rx=2,zl=3,ox=4,ax=5,lx=6,cx=7,na=0,hx=1,ux=2,Zn=0,fx=1,dx=2,px=3,mx=4,gx=5,np=300,Fs=301,zs=302,Uo=303,Ol=304,ia=306,br=1e3,tn=1001,Nl=1002,Ee=1003,kh=1004,Ta=1005,on=1006,_x=1007,Sr=1008,Gi=1009,xx=1010,vx=1011,ip=1012,yx=1013,Ni=1014,fi=1015,Tr=1016,wx=1017,Mx=1018,As=1020,bx=1021,ln=1023,Sx=1024,Tx=1025,Bi=1026,Os=1027,Ex=1028,Ax=1029,Cx=1030,Px=1031,Lx=1033,Ea=33776,Aa=33777,Ca=33778,Pa=33779,Bh=35840,Vh=35841,Hh=35842,Gh=35843,Rx=36196,Wh=37492,Xh=37496,jh=37808,qh=37809,Yh=37810,$h=37811,Zh=37812,Kh=37813,Jh=37814,Qh=37815,tu=37816,eu=37817,nu=37818,iu=37819,su=37820,ru=37821,La=36492,Ix=36283,ou=36284,au=36285,lu=36286,ko=2300,Bo=2301,Ra=2302,cu=2400,hu=2401,uu=2402,Dx=2500,Wi=3e3,ie=3001,Fx=3200,zx=3201,sa=0,Ox=1,An="srgb",Er="srgb-linear",Ia=7680,Nx=519,fu=35044,du="300 es",Ul=1035;class qi{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const s=this._listeners[t];if(s!==void 0){const r=s.indexOf(e);r!==-1&&s.splice(r,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const s=n.slice(0);for(let r=0,o=s.length;r<o;r++)s[r].call(this,t);t.target=null}}}const Le=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let pu=1234567;const Cs=Math.PI/180,Ar=180/Math.PI;function ti(){const i=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Le[i&255]+Le[i>>8&255]+Le[i>>16&255]+Le[i>>24&255]+"-"+Le[t&255]+Le[t>>8&255]+"-"+Le[t>>16&15|64]+Le[t>>24&255]+"-"+Le[e&63|128]+Le[e>>8&255]+"-"+Le[e>>16&255]+Le[e>>24&255]+Le[n&255]+Le[n>>8&255]+Le[n>>16&255]+Le[n>>24&255]).toLowerCase()}function Ae(i,t,e){return Math.max(t,Math.min(e,i))}function vc(i,t){return(i%t+t)%t}function Ux(i,t,e,n,s){return n+(i-t)*(s-n)/(e-t)}function kx(i,t,e){return i!==t?(e-i)/(t-i):0}function fr(i,t,e){return(1-e)*i+e*t}function Bx(i,t,e,n){return fr(i,t,1-Math.exp(-e*n))}function Vx(i,t=1){return t-Math.abs(vc(i,t*2)-t)}function Hx(i,t,e){return i<=t?0:i>=e?1:(i=(i-t)/(e-t),i*i*(3-2*i))}function Gx(i,t,e){return i<=t?0:i>=e?1:(i=(i-t)/(e-t),i*i*i*(i*(i*6-15)+10))}function Wx(i,t){return i+Math.floor(Math.random()*(t-i+1))}function Xx(i,t){return i+Math.random()*(t-i)}function jx(i){return i*(.5-Math.random())}function qx(i){i!==void 0&&(pu=i);let t=pu+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function Yx(i){return i*Cs}function $x(i){return i*Ar}function kl(i){return(i&i-1)===0&&i!==0}function sp(i){return Math.pow(2,Math.ceil(Math.log(i)/Math.LN2))}function Vo(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function Zx(i,t,e,n,s){const r=Math.cos,o=Math.sin,a=r(e/2),l=o(e/2),c=r((t+n)/2),h=o((t+n)/2),u=r((t-n)/2),f=o((t-n)/2),d=r((n-t)/2),g=o((n-t)/2);switch(s){case"XYX":i.set(a*h,l*u,l*f,a*c);break;case"YZY":i.set(l*f,a*h,l*u,a*c);break;case"ZXZ":i.set(l*u,l*f,a*h,a*c);break;case"XZX":i.set(a*h,l*g,l*d,a*c);break;case"YXY":i.set(l*d,a*h,l*g,a*c);break;case"ZYZ":i.set(l*g,l*d,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}function sr(i,t){switch(t.constructor){case Float32Array:return i;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function Ge(i,t){switch(t.constructor){case Float32Array:return i;case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}var Rn=Object.freeze({__proto__:null,DEG2RAD:Cs,RAD2DEG:Ar,ceilPowerOfTwo:sp,clamp:Ae,damp:Bx,degToRad:Yx,denormalize:sr,euclideanModulo:vc,floorPowerOfTwo:Vo,generateUUID:ti,inverseLerp:kx,isPowerOfTwo:kl,lerp:fr,mapLinear:Ux,normalize:Ge,pingpong:Vx,radToDeg:$x,randFloat:Xx,randFloatSpread:jx,randInt:Wx,seededRandom:qx,setQuaternionFromProperEuler:Zx,smootherstep:Gx,smoothstep:Hx});class xt{constructor(t=0,e=0){xt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,s=t.elements;return this.x=s[0]*e+s[3]*n+s[6],this.y=s[1]*e+s[4]*n+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),s=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*n-o*s+t.x,this.y=r*s+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class qe{constructor(){qe.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,e,n,s,r,o,a,l,c){const h=this.elements;return h[0]=t,h[1]=s,h[2]=a,h[3]=e,h[4]=r,h[5]=l,h[6]=n,h[7]=o,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,s=e.elements,r=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],h=n[4],u=n[7],f=n[2],d=n[5],g=n[8],p=s[0],m=s[3],_=s[6],w=s[1],x=s[4],b=s[7],S=s[2],P=s[5],D=s[8];return r[0]=o*p+a*w+l*S,r[3]=o*m+a*x+l*P,r[6]=o*_+a*b+l*D,r[1]=c*p+h*w+u*S,r[4]=c*m+h*x+u*P,r[7]=c*_+h*b+u*D,r[2]=f*p+d*w+g*S,r[5]=f*m+d*x+g*P,r[8]=f*_+d*b+g*D,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],s=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],h=t[8];return e*o*h-e*a*c-n*r*h+n*a*l+s*r*c-s*o*l}invert(){const t=this.elements,e=t[0],n=t[1],s=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],h=t[8],u=h*o-a*c,f=a*l-h*r,d=c*r-o*l,g=e*u+n*f+s*d;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const p=1/g;return t[0]=u*p,t[1]=(s*c-h*n)*p,t[2]=(a*n-s*o)*p,t[3]=f*p,t[4]=(h*e-s*l)*p,t[5]=(s*r-a*e)*p,t[6]=d*p,t[7]=(n*l-c*e)*p,t[8]=(o*e-n*r)*p,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,s,r,o,a){const l=Math.cos(r),c=Math.sin(r);return this.set(n*l,n*c,-n*(l*o+c*a)+o+t,-s*c,s*l,-s*(-c*o+l*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(Da.makeScale(t,e)),this}rotate(t){return this.premultiply(Da.makeRotation(-t)),this}translate(t,e){return this.premultiply(Da.makeTranslation(t,e)),this}makeTranslation(t,e){return this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let s=0;s<9;s++)if(e[s]!==n[s])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Da=new qe;function rp(i){for(let t=i.length-1;t>=0;--t)if(i[t]>=65535)return!0;return!1}function Cr(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function Vi(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function Lo(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}const Fa={[An]:{[Er]:Vi},[Er]:{[An]:Lo}},Oe={legacyMode:!0,get workingColorSpace(){return Er},set workingColorSpace(i){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(i,t,e){if(this.legacyMode||t===e||!t||!e)return i;if(Fa[t]&&Fa[t][e]!==void 0){const n=Fa[t][e];return i.r=n(i.r),i.g=n(i.g),i.b=n(i.b),i}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(i,t){return this.convert(i,this.workingColorSpace,t)},toWorkingColorSpace:function(i,t){return this.convert(i,t,this.workingColorSpace)}},op={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ve={r:0,g:0,b:0},mn={h:0,s:0,l:0},$r={h:0,s:0,l:0};function za(i,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?i+(t-i)*6*e:e<1/2?t:e<2/3?i+(t-i)*6*(2/3-e):i}function Zr(i,t){return t.r=i.r,t.g=i.g,t.b=i.b,t}class Rt{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,e===void 0&&n===void 0?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=An){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Oe.toWorkingColorSpace(this,e),this}setRGB(t,e,n,s=Oe.workingColorSpace){return this.r=t,this.g=e,this.b=n,Oe.toWorkingColorSpace(this,s),this}setHSL(t,e,n,s=Oe.workingColorSpace){if(t=vc(t,1),e=Ae(e,0,1),n=Ae(n,0,1),e===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,o=2*n-r;this.r=za(o,r,t+1/3),this.g=za(o,r,t),this.b=za(o,r,t-1/3)}return Oe.toWorkingColorSpace(this,s),this}setStyle(t,e=An){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let r;const o=s[1],a=s[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,Oe.toWorkingColorSpace(this,e),n(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,Oe.toWorkingColorSpace(this,e),n(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(r[1])/360,c=parseFloat(r[2])/100,h=parseFloat(r[3])/100;return n(r[4]),this.setHSL(l,c,h,e)}break}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=s[1],o=r.length;if(o===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,Oe.toWorkingColorSpace(this,e),this;if(o===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,Oe.toWorkingColorSpace(this,e),this}return t&&t.length>0?this.setColorName(t,e):this}setColorName(t,e=An){const n=op[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Vi(t.r),this.g=Vi(t.g),this.b=Vi(t.b),this}copyLinearToSRGB(t){return this.r=Lo(t.r),this.g=Lo(t.g),this.b=Lo(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=An){return Oe.fromWorkingColorSpace(Zr(this,ve),t),Ae(ve.r*255,0,255)<<16^Ae(ve.g*255,0,255)<<8^Ae(ve.b*255,0,255)<<0}getHexString(t=An){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Oe.workingColorSpace){Oe.fromWorkingColorSpace(Zr(this,ve),e);const n=ve.r,s=ve.g,r=ve.b,o=Math.max(n,s,r),a=Math.min(n,s,r);let l,c;const h=(a+o)/2;if(a===o)l=0,c=0;else{const u=o-a;switch(c=h<=.5?u/(o+a):u/(2-o-a),o){case n:l=(s-r)/u+(s<r?6:0);break;case s:l=(r-n)/u+2;break;case r:l=(n-s)/u+4;break}l/=6}return t.h=l,t.s=c,t.l=h,t}getRGB(t,e=Oe.workingColorSpace){return Oe.fromWorkingColorSpace(Zr(this,ve),e),t.r=ve.r,t.g=ve.g,t.b=ve.b,t}getStyle(t=An){return Oe.fromWorkingColorSpace(Zr(this,ve),t),t!==An?`color(${t} ${ve.r} ${ve.g} ${ve.b})`:`rgb(${ve.r*255|0},${ve.g*255|0},${ve.b*255|0})`}offsetHSL(t,e,n){return this.getHSL(mn),mn.h+=t,mn.s+=e,mn.l+=n,this.setHSL(mn.h,mn.s,mn.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(mn),t.getHSL($r);const n=fr(mn.h,$r.h,e),s=fr(mn.s,$r.s,e),r=fr(mn.l,$r.l,e);return this.setHSL(n,s,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Rt.NAMES=op;let Ji;class ap{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Ji===void 0&&(Ji=Cr("canvas")),Ji.width=t.width,Ji.height=t.height;const n=Ji.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Ji}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Cr("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const s=n.getImageData(0,0,t.width,t.height),r=s.data;for(let o=0;o<r.length;o++)r[o]=Vi(r[o]/255)*255;return n.putImageData(s,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(Vi(e[n]/255)*255):e[n]=Vi(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class lp{constructor(t=null){this.isSource=!0,this.uuid=ti(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},s=this.data;if(s!==null){let r;if(Array.isArray(s)){r=[];for(let o=0,a=s.length;o<a;o++)s[o].isDataTexture?r.push(Oa(s[o].image)):r.push(Oa(s[o]))}else r=Oa(s);n.url=r}return e||(t.images[this.uuid]=n),n}}function Oa(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?ap.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Kx=0;class Ce extends qi{constructor(t=Ce.DEFAULT_IMAGE,e=Ce.DEFAULT_MAPPING,n=tn,s=tn,r=on,o=Sr,a=ln,l=Gi,c=Ce.DEFAULT_ANISOTROPY,h=Wi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Kx++}),this.uuid=ti(),this.name="",this.source=new lp(t),this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=s,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new xt(0,0),this.repeat=new xt(1,1),this.center=new xt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new qe,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==np)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case br:t.x=t.x-Math.floor(t.x);break;case tn:t.x=t.x<0?0:1;break;case Nl:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case br:t.y=t.y-Math.floor(t.y);break;case tn:t.y=t.y<0?0:1;break;case Nl:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}}Ce.DEFAULT_IMAGE=null;Ce.DEFAULT_MAPPING=np;Ce.DEFAULT_ANISOTROPY=1;class ee{constructor(t=0,e=0,n=0,s=1){ee.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=s}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,s){return this.x=t,this.y=e,this.z=n,this.w=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,s=this.z,r=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*s+o[12]*r,this.y=o[1]*e+o[5]*n+o[9]*s+o[13]*r,this.z=o[2]*e+o[6]*n+o[10]*s+o[14]*r,this.w=o[3]*e+o[7]*n+o[11]*s+o[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,s,r;const l=t.elements,c=l[0],h=l[4],u=l[8],f=l[1],d=l[5],g=l[9],p=l[2],m=l[6],_=l[10];if(Math.abs(h-f)<.01&&Math.abs(u-p)<.01&&Math.abs(g-m)<.01){if(Math.abs(h+f)<.1&&Math.abs(u+p)<.1&&Math.abs(g+m)<.1&&Math.abs(c+d+_-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const x=(c+1)/2,b=(d+1)/2,S=(_+1)/2,P=(h+f)/4,D=(u+p)/4,v=(g+m)/4;return x>b&&x>S?x<.01?(n=0,s=.707106781,r=.707106781):(n=Math.sqrt(x),s=P/n,r=D/n):b>S?b<.01?(n=.707106781,s=0,r=.707106781):(s=Math.sqrt(b),n=P/s,r=v/s):S<.01?(n=.707106781,s=.707106781,r=0):(r=Math.sqrt(S),n=D/r,s=v/r),this.set(n,s,r,e),this}let w=Math.sqrt((m-g)*(m-g)+(u-p)*(u-p)+(f-h)*(f-h));return Math.abs(w)<.001&&(w=1),this.x=(m-g)/w,this.y=(u-p)/w,this.z=(f-h)/w,this.w=Math.acos((c+d+_-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Xi extends qi{constructor(t=1,e=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new ee(0,0,t,e),this.scissorTest=!1,this.viewport=new ee(0,0,t,e);const s={width:t,height:e,depth:1};this.texture=new Ce(s,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:on,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(t,e,n=1){(this.width!==t||this.height!==e||this.depth!==n)&&(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new lp(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class cp extends Ce{constructor(t=null,e=1,n=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:s},this.magFilter=Ee,this.minFilter=Ee,this.wrapR=tn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Jx extends Ce{constructor(t=null,e=1,n=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:s},this.magFilter=Ee,this.minFilter=Ee,this.wrapR=tn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class un{constructor(t=0,e=0,n=0,s=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=s}static slerpFlat(t,e,n,s,r,o,a){let l=n[s+0],c=n[s+1],h=n[s+2],u=n[s+3];const f=r[o+0],d=r[o+1],g=r[o+2],p=r[o+3];if(a===0){t[e+0]=l,t[e+1]=c,t[e+2]=h,t[e+3]=u;return}if(a===1){t[e+0]=f,t[e+1]=d,t[e+2]=g,t[e+3]=p;return}if(u!==p||l!==f||c!==d||h!==g){let m=1-a;const _=l*f+c*d+h*g+u*p,w=_>=0?1:-1,x=1-_*_;if(x>Number.EPSILON){const S=Math.sqrt(x),P=Math.atan2(S,_*w);m=Math.sin(m*P)/S,a=Math.sin(a*P)/S}const b=a*w;if(l=l*m+f*b,c=c*m+d*b,h=h*m+g*b,u=u*m+p*b,m===1-a){const S=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=S,c*=S,h*=S,u*=S}}t[e]=l,t[e+1]=c,t[e+2]=h,t[e+3]=u}static multiplyQuaternionsFlat(t,e,n,s,r,o){const a=n[s],l=n[s+1],c=n[s+2],h=n[s+3],u=r[o],f=r[o+1],d=r[o+2],g=r[o+3];return t[e]=a*g+h*u+l*d-c*f,t[e+1]=l*g+h*f+c*u-a*d,t[e+2]=c*g+h*d+a*f-l*u,t[e+3]=h*g-a*u-l*f-c*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,s){return this._x=t,this._y=e,this._z=n,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){const n=t._x,s=t._y,r=t._z,o=t._order,a=Math.cos,l=Math.sin,c=a(n/2),h=a(s/2),u=a(r/2),f=l(n/2),d=l(s/2),g=l(r/2);switch(o){case"XYZ":this._x=f*h*u+c*d*g,this._y=c*d*u-f*h*g,this._z=c*h*g+f*d*u,this._w=c*h*u-f*d*g;break;case"YXZ":this._x=f*h*u+c*d*g,this._y=c*d*u-f*h*g,this._z=c*h*g-f*d*u,this._w=c*h*u+f*d*g;break;case"ZXY":this._x=f*h*u-c*d*g,this._y=c*d*u+f*h*g,this._z=c*h*g+f*d*u,this._w=c*h*u-f*d*g;break;case"ZYX":this._x=f*h*u-c*d*g,this._y=c*d*u+f*h*g,this._z=c*h*g-f*d*u,this._w=c*h*u+f*d*g;break;case"YZX":this._x=f*h*u+c*d*g,this._y=c*d*u+f*h*g,this._z=c*h*g-f*d*u,this._w=c*h*u-f*d*g;break;case"XZY":this._x=f*h*u-c*d*g,this._y=c*d*u-f*h*g,this._z=c*h*g+f*d*u,this._w=c*h*u+f*d*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,s=Math.sin(n);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],s=e[4],r=e[8],o=e[1],a=e[5],l=e[9],c=e[2],h=e[6],u=e[10],f=n+a+u;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(h-l)*d,this._y=(r-c)*d,this._z=(o-s)*d}else if(n>a&&n>u){const d=2*Math.sqrt(1+n-a-u);this._w=(h-l)/d,this._x=.25*d,this._y=(s+o)/d,this._z=(r+c)/d}else if(a>u){const d=2*Math.sqrt(1+a-n-u);this._w=(r-c)/d,this._x=(s+o)/d,this._y=.25*d,this._z=(l+h)/d}else{const d=2*Math.sqrt(1+u-n-a);this._w=(o-s)/d,this._x=(r+c)/d,this._y=(l+h)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Ae(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const s=Math.min(1,e/n);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,s=t._y,r=t._z,o=t._w,a=e._x,l=e._y,c=e._z,h=e._w;return this._x=n*h+o*a+s*c-r*l,this._y=s*h+o*l+r*a-n*c,this._z=r*h+o*c+n*l-s*a,this._w=o*h-n*a-s*l-r*c,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,s=this._y,r=this._z,o=this._w;let a=o*t._w+n*t._x+s*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=n,this._y=s,this._z=r,this;const l=1-a*a;if(l<=Number.EPSILON){const d=1-e;return this._w=d*o+e*this._w,this._x=d*n+e*this._x,this._y=d*s+e*this._y,this._z=d*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),h=Math.atan2(c,a),u=Math.sin((1-e)*h)/c,f=Math.sin(e*h)/c;return this._w=o*u+this._w*f,this._x=n*u+this._x*f,this._y=s*u+this._y*f,this._z=r*u+this._z*f,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),s=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(e*Math.cos(s),n*Math.sin(r),n*Math.cos(r),e*Math.sin(s))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class I{constructor(t=0,e=0,n=0){I.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(mu.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(mu.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,s=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*s,this.y=r[1]*e+r[4]*n+r[7]*s,this.z=r[2]*e+r[5]*n+r[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,s=this.z,r=t.elements,o=1/(r[3]*e+r[7]*n+r[11]*s+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*s+r[12])*o,this.y=(r[1]*e+r[5]*n+r[9]*s+r[13])*o,this.z=(r[2]*e+r[6]*n+r[10]*s+r[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,s=this.z,r=t.x,o=t.y,a=t.z,l=t.w,c=l*e+o*s-a*n,h=l*n+a*e-r*s,u=l*s+r*n-o*e,f=-r*e-o*n-a*s;return this.x=c*l+f*-r+h*-a-u*-o,this.y=h*l+f*-o+u*-r-c*-a,this.z=u*l+f*-a+c*-o-h*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,s=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*s,this.y=r[1]*e+r[5]*n+r[9]*s,this.z=r[2]*e+r[6]*n+r[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,s=t.y,r=t.z,o=e.x,a=e.y,l=e.z;return this.x=s*l-r*a,this.y=r*o-n*l,this.z=n*a-s*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Na.copy(this).projectOnVector(t),this.sub(Na)}reflect(t){return this.sub(Na.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Ae(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,s=this.z-t.z;return e*e+n*n+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const s=Math.sin(e)*t;return this.x=s*Math.sin(n),this.y=Math.cos(e)*t,this.z=s*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=s,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Na=new I,mu=new un;class zr{constructor(t=new I(1/0,1/0,1/0),e=new I(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,s=1/0,r=-1/0,o=-1/0,a=-1/0;for(let l=0,c=t.length;l<c;l+=3){const h=t[l],u=t[l+1],f=t[l+2];h<e&&(e=h),u<n&&(n=u),f<s&&(s=f),h>r&&(r=h),u>o&&(o=u),f>a&&(a=f)}return this.min.set(e,n,s),this.max.set(r,o,a),this}setFromBufferAttribute(t){let e=1/0,n=1/0,s=1/0,r=-1/0,o=-1/0,a=-1/0;for(let l=0,c=t.count;l<c;l++){const h=t.getX(l),u=t.getY(l),f=t.getZ(l);h<e&&(e=h),u<n&&(n=u),f<s&&(s=f),h>r&&(r=h),u>o&&(o=u),f>a&&(a=f)}return this.min.set(e,n,s),this.max.set(r,o,a),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Ei.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0)if(e&&n.attributes!=null&&n.attributes.position!==void 0){const r=n.attributes.position;for(let o=0,a=r.count;o<a;o++)Ei.fromBufferAttribute(r,o).applyMatrix4(t.matrixWorld),this.expandByPoint(Ei)}else n.boundingBox===null&&n.computeBoundingBox(),Ua.copy(n.boundingBox),Ua.applyMatrix4(t.matrixWorld),this.union(Ua);const s=t.children;for(let r=0,o=s.length;r<o;r++)this.expandByObject(s[r],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Ei),Ei.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(qs),Kr.subVectors(this.max,qs),Qi.subVectors(t.a,qs),ts.subVectors(t.b,qs),es.subVectors(t.c,qs),si.subVectors(ts,Qi),ri.subVectors(es,ts),Ai.subVectors(Qi,es);let e=[0,-si.z,si.y,0,-ri.z,ri.y,0,-Ai.z,Ai.y,si.z,0,-si.x,ri.z,0,-ri.x,Ai.z,0,-Ai.x,-si.y,si.x,0,-ri.y,ri.x,0,-Ai.y,Ai.x,0];return!ka(e,Qi,ts,es,Kr)||(e=[1,0,0,0,1,0,0,0,1],!ka(e,Qi,ts,es,Kr))?!1:(Jr.crossVectors(si,ri),e=[Jr.x,Jr.y,Jr.z],ka(e,Qi,ts,es,Kr))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Ei.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=this.getSize(Ei).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Vn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Vn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Vn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Vn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Vn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Vn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Vn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Vn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Vn),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Vn=[new I,new I,new I,new I,new I,new I,new I,new I],Ei=new I,Ua=new zr,Qi=new I,ts=new I,es=new I,si=new I,ri=new I,Ai=new I,qs=new I,Kr=new I,Jr=new I,Ci=new I;function ka(i,t,e,n,s){for(let r=0,o=i.length-3;r<=o;r+=3){Ci.fromArray(i,r);const a=s.x*Math.abs(Ci.x)+s.y*Math.abs(Ci.y)+s.z*Math.abs(Ci.z),l=t.dot(Ci),c=e.dot(Ci),h=n.dot(Ci);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const Qx=new zr,Ys=new I,Ba=new I;let Or=class{constructor(t=new I,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):Qx.setFromPoints(t).getCenter(n);let s=0;for(let r=0,o=t.length;r<o;r++)s=Math.max(s,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Ys.subVectors(t,this.center);const e=Ys.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),s=(n-this.radius)*.5;this.center.addScaledVector(Ys,s/n),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Ba.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Ys.copy(t.center).add(Ba)),this.expandByPoint(Ys.copy(t.center).sub(Ba))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}};const Hn=new I,Va=new I,Qr=new I,oi=new I,Ha=new I,to=new I,Ga=new I;class ra{constructor(t=new I,e=new I(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Hn)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Hn.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Hn.copy(this.direction).multiplyScalar(e).add(this.origin),Hn.distanceToSquared(t))}distanceSqToSegment(t,e,n,s){Va.copy(t).add(e).multiplyScalar(.5),Qr.copy(e).sub(t).normalize(),oi.copy(this.origin).sub(Va);const r=t.distanceTo(e)*.5,o=-this.direction.dot(Qr),a=oi.dot(this.direction),l=-oi.dot(Qr),c=oi.lengthSq(),h=Math.abs(1-o*o);let u,f,d,g;if(h>0)if(u=o*l-a,f=o*a-l,g=r*h,u>=0)if(f>=-g)if(f<=g){const p=1/h;u*=p,f*=p,d=u*(u+o*f+2*a)+f*(o*u+f+2*l)+c}else f=r,u=Math.max(0,-(o*f+a)),d=-u*u+f*(f+2*l)+c;else f=-r,u=Math.max(0,-(o*f+a)),d=-u*u+f*(f+2*l)+c;else f<=-g?(u=Math.max(0,-(-o*r+a)),f=u>0?-r:Math.min(Math.max(-r,-l),r),d=-u*u+f*(f+2*l)+c):f<=g?(u=0,f=Math.min(Math.max(-r,-l),r),d=f*(f+2*l)+c):(u=Math.max(0,-(o*r+a)),f=u>0?r:Math.min(Math.max(-r,-l),r),d=-u*u+f*(f+2*l)+c);else f=o>0?-r:r,u=Math.max(0,-(o*f+a)),d=-u*u+f*(f+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(u).add(this.origin),s&&s.copy(Qr).multiplyScalar(f).add(Va),d}intersectSphere(t,e){Hn.subVectors(t.center,this.origin);const n=Hn.dot(this.direction),s=Hn.dot(Hn)-n*n,r=t.radius*t.radius;if(s>r)return null;const o=Math.sqrt(r-s),a=n-o,l=n+o;return a<0&&l<0?null:a<0?this.at(l,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,s,r,o,a,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,f=this.origin;return c>=0?(n=(t.min.x-f.x)*c,s=(t.max.x-f.x)*c):(n=(t.max.x-f.x)*c,s=(t.min.x-f.x)*c),h>=0?(r=(t.min.y-f.y)*h,o=(t.max.y-f.y)*h):(r=(t.max.y-f.y)*h,o=(t.min.y-f.y)*h),n>o||r>s||((r>n||isNaN(n))&&(n=r),(o<s||isNaN(s))&&(s=o),u>=0?(a=(t.min.z-f.z)*u,l=(t.max.z-f.z)*u):(a=(t.max.z-f.z)*u,l=(t.min.z-f.z)*u),n>l||a>s)||((a>n||n!==n)&&(n=a),(l<s||s!==s)&&(s=l),s<0)?null:this.at(n>=0?n:s,e)}intersectsBox(t){return this.intersectBox(t,Hn)!==null}intersectTriangle(t,e,n,s,r){Ha.subVectors(e,t),to.subVectors(n,t),Ga.crossVectors(Ha,to);let o=this.direction.dot(Ga),a;if(o>0){if(s)return null;a=1}else if(o<0)a=-1,o=-o;else return null;oi.subVectors(this.origin,t);const l=a*this.direction.dot(to.crossVectors(oi,to));if(l<0)return null;const c=a*this.direction.dot(Ha.cross(oi));if(c<0||l+c>o)return null;const h=-a*oi.dot(Ga);return h<0?null:this.at(h/o,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Dt{constructor(){Dt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,e,n,s,r,o,a,l,c,h,u,f,d,g,p,m){const _=this.elements;return _[0]=t,_[4]=e,_[8]=n,_[12]=s,_[1]=r,_[5]=o,_[9]=a,_[13]=l,_[2]=c,_[6]=h,_[10]=u,_[14]=f,_[3]=d,_[7]=g,_[11]=p,_[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Dt().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,s=1/ns.setFromMatrixColumn(t,0).length(),r=1/ns.setFromMatrixColumn(t,1).length(),o=1/ns.setFromMatrixColumn(t,2).length();return e[0]=n[0]*s,e[1]=n[1]*s,e[2]=n[2]*s,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,s=t.y,r=t.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(s),c=Math.sin(s),h=Math.cos(r),u=Math.sin(r);if(t.order==="XYZ"){const f=o*h,d=o*u,g=a*h,p=a*u;e[0]=l*h,e[4]=-l*u,e[8]=c,e[1]=d+g*c,e[5]=f-p*c,e[9]=-a*l,e[2]=p-f*c,e[6]=g+d*c,e[10]=o*l}else if(t.order==="YXZ"){const f=l*h,d=l*u,g=c*h,p=c*u;e[0]=f+p*a,e[4]=g*a-d,e[8]=o*c,e[1]=o*u,e[5]=o*h,e[9]=-a,e[2]=d*a-g,e[6]=p+f*a,e[10]=o*l}else if(t.order==="ZXY"){const f=l*h,d=l*u,g=c*h,p=c*u;e[0]=f-p*a,e[4]=-o*u,e[8]=g+d*a,e[1]=d+g*a,e[5]=o*h,e[9]=p-f*a,e[2]=-o*c,e[6]=a,e[10]=o*l}else if(t.order==="ZYX"){const f=o*h,d=o*u,g=a*h,p=a*u;e[0]=l*h,e[4]=g*c-d,e[8]=f*c+p,e[1]=l*u,e[5]=p*c+f,e[9]=d*c-g,e[2]=-c,e[6]=a*l,e[10]=o*l}else if(t.order==="YZX"){const f=o*l,d=o*c,g=a*l,p=a*c;e[0]=l*h,e[4]=p-f*u,e[8]=g*u+d,e[1]=u,e[5]=o*h,e[9]=-a*h,e[2]=-c*h,e[6]=d*u+g,e[10]=f-p*u}else if(t.order==="XZY"){const f=o*l,d=o*c,g=a*l,p=a*c;e[0]=l*h,e[4]=-u,e[8]=c*h,e[1]=f*u+p,e[5]=o*h,e[9]=d*u-g,e[2]=g*u-d,e[6]=a*h,e[10]=p*u+f}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(tv,t,ev)}lookAt(t,e,n){const s=this.elements;return Ke.subVectors(t,e),Ke.lengthSq()===0&&(Ke.z=1),Ke.normalize(),ai.crossVectors(n,Ke),ai.lengthSq()===0&&(Math.abs(n.z)===1?Ke.x+=1e-4:Ke.z+=1e-4,Ke.normalize(),ai.crossVectors(n,Ke)),ai.normalize(),eo.crossVectors(Ke,ai),s[0]=ai.x,s[4]=eo.x,s[8]=Ke.x,s[1]=ai.y,s[5]=eo.y,s[9]=Ke.y,s[2]=ai.z,s[6]=eo.z,s[10]=Ke.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,s=e.elements,r=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],h=n[1],u=n[5],f=n[9],d=n[13],g=n[2],p=n[6],m=n[10],_=n[14],w=n[3],x=n[7],b=n[11],S=n[15],P=s[0],D=s[4],v=s[8],A=s[12],R=s[1],j=s[5],Q=s[9],k=s[13],O=s[2],J=s[6],Z=s[10],it=s[14],Y=s[3],ft=s[7],dt=s[11],yt=s[15];return r[0]=o*P+a*R+l*O+c*Y,r[4]=o*D+a*j+l*J+c*ft,r[8]=o*v+a*Q+l*Z+c*dt,r[12]=o*A+a*k+l*it+c*yt,r[1]=h*P+u*R+f*O+d*Y,r[5]=h*D+u*j+f*J+d*ft,r[9]=h*v+u*Q+f*Z+d*dt,r[13]=h*A+u*k+f*it+d*yt,r[2]=g*P+p*R+m*O+_*Y,r[6]=g*D+p*j+m*J+_*ft,r[10]=g*v+p*Q+m*Z+_*dt,r[14]=g*A+p*k+m*it+_*yt,r[3]=w*P+x*R+b*O+S*Y,r[7]=w*D+x*j+b*J+S*ft,r[11]=w*v+x*Q+b*Z+S*dt,r[15]=w*A+x*k+b*it+S*yt,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],s=t[8],r=t[12],o=t[1],a=t[5],l=t[9],c=t[13],h=t[2],u=t[6],f=t[10],d=t[14],g=t[3],p=t[7],m=t[11],_=t[15];return g*(+r*l*u-s*c*u-r*a*f+n*c*f+s*a*d-n*l*d)+p*(+e*l*d-e*c*f+r*o*f-s*o*d+s*c*h-r*l*h)+m*(+e*c*u-e*a*d-r*o*u+n*o*d+r*a*h-n*c*h)+_*(-s*a*h-e*l*u+e*a*f+s*o*u-n*o*f+n*l*h)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=e,s[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],s=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],h=t[8],u=t[9],f=t[10],d=t[11],g=t[12],p=t[13],m=t[14],_=t[15],w=u*m*c-p*f*c+p*l*d-a*m*d-u*l*_+a*f*_,x=g*f*c-h*m*c-g*l*d+o*m*d+h*l*_-o*f*_,b=h*p*c-g*u*c+g*a*d-o*p*d-h*a*_+o*u*_,S=g*u*l-h*p*l-g*a*f+o*p*f+h*a*m-o*u*m,P=e*w+n*x+s*b+r*S;if(P===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const D=1/P;return t[0]=w*D,t[1]=(p*f*r-u*m*r-p*s*d+n*m*d+u*s*_-n*f*_)*D,t[2]=(a*m*r-p*l*r+p*s*c-n*m*c-a*s*_+n*l*_)*D,t[3]=(u*l*r-a*f*r-u*s*c+n*f*c+a*s*d-n*l*d)*D,t[4]=x*D,t[5]=(h*m*r-g*f*r+g*s*d-e*m*d-h*s*_+e*f*_)*D,t[6]=(g*l*r-o*m*r-g*s*c+e*m*c+o*s*_-e*l*_)*D,t[7]=(o*f*r-h*l*r+h*s*c-e*f*c-o*s*d+e*l*d)*D,t[8]=b*D,t[9]=(g*u*r-h*p*r-g*n*d+e*p*d+h*n*_-e*u*_)*D,t[10]=(o*p*r-g*a*r+g*n*c-e*p*c-o*n*_+e*a*_)*D,t[11]=(h*a*r-o*u*r-h*n*c+e*u*c+o*n*d-e*a*d)*D,t[12]=S*D,t[13]=(h*p*s-g*u*s+g*n*f-e*p*f-h*n*m+e*u*m)*D,t[14]=(g*a*s-o*p*s-g*n*l+e*p*l+o*n*m-e*a*m)*D,t[15]=(o*u*s-h*a*s+h*n*l-e*u*l-o*n*f+e*a*f)*D,this}scale(t){const e=this.elements,n=t.x,s=t.y,r=t.z;return e[0]*=n,e[4]*=s,e[8]*=r,e[1]*=n,e[5]*=s,e[9]*=r,e[2]*=n,e[6]*=s,e[10]*=r,e[3]*=n,e[7]*=s,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,s))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),s=Math.sin(e),r=1-n,o=t.x,a=t.y,l=t.z,c=r*o,h=r*a;return this.set(c*o+n,c*a-s*l,c*l+s*a,0,c*a+s*l,h*a+n,h*l-s*o,0,c*l-s*a,h*l+s*o,r*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,s,r,o){return this.set(1,n,r,0,t,1,o,0,e,s,1,0,0,0,0,1),this}compose(t,e,n){const s=this.elements,r=e._x,o=e._y,a=e._z,l=e._w,c=r+r,h=o+o,u=a+a,f=r*c,d=r*h,g=r*u,p=o*h,m=o*u,_=a*u,w=l*c,x=l*h,b=l*u,S=n.x,P=n.y,D=n.z;return s[0]=(1-(p+_))*S,s[1]=(d+b)*S,s[2]=(g-x)*S,s[3]=0,s[4]=(d-b)*P,s[5]=(1-(f+_))*P,s[6]=(m+w)*P,s[7]=0,s[8]=(g+x)*D,s[9]=(m-w)*D,s[10]=(1-(f+p))*D,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,e,n){const s=this.elements;let r=ns.set(s[0],s[1],s[2]).length();const o=ns.set(s[4],s[5],s[6]).length(),a=ns.set(s[8],s[9],s[10]).length();this.determinant()<0&&(r=-r),t.x=s[12],t.y=s[13],t.z=s[14],gn.copy(this);const c=1/r,h=1/o,u=1/a;return gn.elements[0]*=c,gn.elements[1]*=c,gn.elements[2]*=c,gn.elements[4]*=h,gn.elements[5]*=h,gn.elements[6]*=h,gn.elements[8]*=u,gn.elements[9]*=u,gn.elements[10]*=u,e.setFromRotationMatrix(gn),n.x=r,n.y=o,n.z=a,this}makePerspective(t,e,n,s,r,o){const a=this.elements,l=2*r/(e-t),c=2*r/(n-s),h=(e+t)/(e-t),u=(n+s)/(n-s),f=-(o+r)/(o-r),d=-2*o*r/(o-r);return a[0]=l,a[4]=0,a[8]=h,a[12]=0,a[1]=0,a[5]=c,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=f,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,n,s,r,o){const a=this.elements,l=1/(e-t),c=1/(n-s),h=1/(o-r),u=(e+t)*l,f=(n+s)*c,d=(o+r)*h;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-f,a[2]=0,a[6]=0,a[10]=-2*h,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let s=0;s<16;s++)if(e[s]!==n[s])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const ns=new I,gn=new Dt,tv=new I(0,0,0),ev=new I(1,1,1),ai=new I,eo=new I,Ke=new I,gu=new Dt,_u=new un;class fn{constructor(t=0,e=0,n=0,s=fn.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,s=this._order){return this._x=t,this._y=e,this._z=n,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const s=t.elements,r=s[0],o=s[4],a=s[8],l=s[1],c=s[5],h=s[9],u=s[2],f=s[6],d=s[10];switch(e){case"XYZ":this._y=Math.asin(Ae(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Ae(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(Ae(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-Ae(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(Ae(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-Ae(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return gu.makeRotationFromQuaternion(t),this.setFromRotationMatrix(gu,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return _u.setFromEuler(this),this.setFromQuaternion(_u,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}fn.DEFAULT_ORDER="XYZ";class yc{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let nv=0;const xu=new I,is=new un,Gn=new Dt,no=new I,$s=new I,iv=new I,sv=new un,vu=new I(1,0,0),yu=new I(0,1,0),wu=new I(0,0,1),rv={type:"added"},Mu={type:"removed"};class oe extends qi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:nv++}),this.uuid=ti(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=oe.DEFAULT_UP.clone();const t=new I,e=new fn,n=new un,s=new I(1,1,1);function r(){n.setFromEuler(e,!1)}function o(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new Dt},normalMatrix:{value:new qe}}),this.matrix=new Dt,this.matrixWorld=new Dt,this.matrixAutoUpdate=oe.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=oe.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new yc,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return is.setFromAxisAngle(t,e),this.quaternion.multiply(is),this}rotateOnWorldAxis(t,e){return is.setFromAxisAngle(t,e),this.quaternion.premultiply(is),this}rotateX(t){return this.rotateOnAxis(vu,t)}rotateY(t){return this.rotateOnAxis(yu,t)}rotateZ(t){return this.rotateOnAxis(wu,t)}translateOnAxis(t,e){return xu.copy(t).applyQuaternion(this.quaternion),this.position.add(xu.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(vu,t)}translateY(t){return this.translateOnAxis(yu,t)}translateZ(t){return this.translateOnAxis(wu,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Gn.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?no.copy(t):no.set(t,e,n);const s=this.parent;this.updateWorldMatrix(!0,!1),$s.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Gn.lookAt($s,no,this.up):Gn.lookAt(no,$s,this.up),this.quaternion.setFromRotationMatrix(Gn),s&&(Gn.extractRotation(s.matrixWorld),is.setFromRotationMatrix(Gn),this.quaternion.premultiply(is.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(rv)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Mu)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(Mu)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),Gn.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Gn.multiply(t.parent.matrixWorld)),t.applyMatrix4(Gn),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,s=this.children.length;n<s;n++){const o=this.children[n].getObjectByProperty(t,e);if(o!==void 0)return o}}getObjectsByProperty(t,e){let n=[];this[t]===e&&n.push(this);for(let s=0,r=this.children.length;s<r;s++){const o=this.children[s].getObjectsByProperty(t,e);o.length>0&&(n=n.concat(o))}return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose($s,t,iv),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose($s,sv,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,s=e.length;n<s;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,s=e.length;n<s;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,s=e.length;n<s;n++){const r=e[n];(r.matrixWorldAutoUpdate===!0||t===!0)&&r.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const s=this.children;for(let r=0,o=s.length;r<o;r++){const a=s[r];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON()));function r(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=r(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];r(t.shapes,u)}else r(t.shapes,l)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(r(t.materials,this.material[l]));s.material=a}else s.material=r(t.materials,this.material);if(this.children.length>0){s.children=[];for(let a=0;a<this.children.length;a++)s.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];s.animations.push(r(t.animations,l))}}if(e){const a=o(t.geometries),l=o(t.materials),c=o(t.textures),h=o(t.images),u=o(t.shapes),f=o(t.skeletons),d=o(t.animations),g=o(t.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),f.length>0&&(n.skeletons=f),d.length>0&&(n.animations=d),g.length>0&&(n.nodes=g)}return n.object=s,n;function o(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const s=t.children[n];this.add(s.clone())}return this}}oe.DEFAULT_UP=new I(0,1,0);oe.DEFAULT_MATRIX_AUTO_UPDATE=!0;oe.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const _n=new I,Wn=new I,Wa=new I,Xn=new I,ss=new I,rs=new I,bu=new I,Xa=new I,ja=new I,qa=new I;class In{constructor(t=new I,e=new I,n=new I){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,s){s.subVectors(n,e),_n.subVectors(t,e),s.cross(_n);const r=s.lengthSq();return r>0?s.multiplyScalar(1/Math.sqrt(r)):s.set(0,0,0)}static getBarycoord(t,e,n,s,r){_n.subVectors(s,e),Wn.subVectors(n,e),Wa.subVectors(t,e);const o=_n.dot(_n),a=_n.dot(Wn),l=_n.dot(Wa),c=Wn.dot(Wn),h=Wn.dot(Wa),u=o*c-a*a;if(u===0)return r.set(-2,-1,-1);const f=1/u,d=(c*l-a*h)*f,g=(o*h-a*l)*f;return r.set(1-d-g,g,d)}static containsPoint(t,e,n,s){return this.getBarycoord(t,e,n,s,Xn),Xn.x>=0&&Xn.y>=0&&Xn.x+Xn.y<=1}static getUV(t,e,n,s,r,o,a,l){return this.getBarycoord(t,e,n,s,Xn),l.set(0,0),l.addScaledVector(r,Xn.x),l.addScaledVector(o,Xn.y),l.addScaledVector(a,Xn.z),l}static isFrontFacing(t,e,n,s){return _n.subVectors(n,e),Wn.subVectors(t,e),_n.cross(Wn).dot(s)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,s){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,e,n,s){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,s),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return _n.subVectors(this.c,this.b),Wn.subVectors(this.a,this.b),_n.cross(Wn).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return In.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return In.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,s,r){return In.getUV(t,this.a,this.b,this.c,e,n,s,r)}containsPoint(t){return In.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return In.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,s=this.b,r=this.c;let o,a;ss.subVectors(s,n),rs.subVectors(r,n),Xa.subVectors(t,n);const l=ss.dot(Xa),c=rs.dot(Xa);if(l<=0&&c<=0)return e.copy(n);ja.subVectors(t,s);const h=ss.dot(ja),u=rs.dot(ja);if(h>=0&&u<=h)return e.copy(s);const f=l*u-h*c;if(f<=0&&l>=0&&h<=0)return o=l/(l-h),e.copy(n).addScaledVector(ss,o);qa.subVectors(t,r);const d=ss.dot(qa),g=rs.dot(qa);if(g>=0&&d<=g)return e.copy(r);const p=d*c-l*g;if(p<=0&&c>=0&&g<=0)return a=c/(c-g),e.copy(n).addScaledVector(rs,a);const m=h*g-d*u;if(m<=0&&u-h>=0&&d-g>=0)return bu.subVectors(r,s),a=(u-h)/(u-h+(d-g)),e.copy(s).addScaledVector(bu,a);const _=1/(m+p+f);return o=p*_,a=f*_,e.copy(n).addScaledVector(ss,o).addScaledVector(rs,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let ov=0;class ei extends qi{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:ov++}),this.uuid=ti(),this.name="",this.type="Material",this.blending=Es,this.side=pn,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=tp,this.blendDst=ep,this.blendEquation=ms,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=zl,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Nx,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ia,this.stencilZFail=Ia,this.stencilZPass=Ia,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}const s=this[e];if(s===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}s&&s.isColor?s.set(n):s&&s.isVector3&&n&&n.isVector3?s.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Es&&(n.blending=this.blending),this.side!==pn&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function s(r){const o=[];for(const a in r){const l=r[a];delete l.metadata,o.push(l)}return o}if(e){const r=s(t.textures),o=s(t.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const s=e.length;n=new Array(s);for(let r=0;r!==s;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class vi extends ei{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Rt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=na,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const xe=new I,io=new xt;class Ve{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=fu,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let s=0,r=this.itemSize;s<r;s++)this.array[t+s]=e.array[n+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)io.fromBufferAttribute(this,e),io.applyMatrix3(t),this.setXY(e,io.x,io.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)xe.fromBufferAttribute(this,e),xe.applyMatrix3(t),this.setXYZ(e,xe.x,xe.y,xe.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)xe.fromBufferAttribute(this,e),xe.applyMatrix4(t),this.setXYZ(e,xe.x,xe.y,xe.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)xe.fromBufferAttribute(this,e),xe.applyNormalMatrix(t),this.setXYZ(e,xe.x,xe.y,xe.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)xe.fromBufferAttribute(this,e),xe.transformDirection(t),this.setXYZ(e,xe.x,xe.y,xe.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=sr(e,this.array)),e}setX(t,e){return this.normalized&&(e=Ge(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=sr(e,this.array)),e}setY(t,e){return this.normalized&&(e=Ge(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=sr(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Ge(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=sr(e,this.array)),e}setW(t,e){return this.normalized&&(e=Ge(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=Ge(e,this.array),n=Ge(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,s){return t*=this.itemSize,this.normalized&&(e=Ge(e,this.array),n=Ge(n,this.array),s=Ge(s,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=s,this}setXYZW(t,e,n,s,r){return t*=this.itemSize,this.normalized&&(e=Ge(e,this.array),n=Ge(n,this.array),s=Ge(s,this.array),r=Ge(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=s,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==fu&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class wc extends Ve{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class hp extends Ve{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class Xt extends Ve{constructor(t,e,n){super(new Float32Array(t),e,n)}}let av=0;const rn=new Dt,Ya=new oe,os=new I,Je=new zr,Zs=new zr,Te=new I;class fe extends qi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:av++}),this.uuid=ti(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(rp(t)?hp:wc)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new qe().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return rn.makeRotationFromQuaternion(t),this.applyMatrix4(rn),this}rotateX(t){return rn.makeRotationX(t),this.applyMatrix4(rn),this}rotateY(t){return rn.makeRotationY(t),this.applyMatrix4(rn),this}rotateZ(t){return rn.makeRotationZ(t),this.applyMatrix4(rn),this}translate(t,e,n){return rn.makeTranslation(t,e,n),this.applyMatrix4(rn),this}scale(t,e,n){return rn.makeScale(t,e,n),this.applyMatrix4(rn),this}lookAt(t){return Ya.lookAt(t),Ya.updateMatrix(),this.applyMatrix4(Ya.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(os).negate(),this.translate(os.x,os.y,os.z),this}setFromPoints(t){const e=[];for(let n=0,s=t.length;n<s;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Xt(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new zr);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new I(-1/0,-1/0,-1/0),new I(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,s=e.length;n<s;n++){const r=e[n];Je.setFromBufferAttribute(r),this.morphTargetsRelative?(Te.addVectors(this.boundingBox.min,Je.min),this.boundingBox.expandByPoint(Te),Te.addVectors(this.boundingBox.max,Je.max),this.boundingBox.expandByPoint(Te)):(this.boundingBox.expandByPoint(Je.min),this.boundingBox.expandByPoint(Je.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Or);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new I,1/0);return}if(t){const n=this.boundingSphere.center;if(Je.setFromBufferAttribute(t),e)for(let r=0,o=e.length;r<o;r++){const a=e[r];Zs.setFromBufferAttribute(a),this.morphTargetsRelative?(Te.addVectors(Je.min,Zs.min),Je.expandByPoint(Te),Te.addVectors(Je.max,Zs.max),Je.expandByPoint(Te)):(Je.expandByPoint(Zs.min),Je.expandByPoint(Zs.max))}Je.getCenter(n);let s=0;for(let r=0,o=t.count;r<o;r++)Te.fromBufferAttribute(t,r),s=Math.max(s,n.distanceToSquared(Te));if(e)for(let r=0,o=e.length;r<o;r++){const a=e[r],l=this.morphTargetsRelative;for(let c=0,h=a.count;c<h;c++)Te.fromBufferAttribute(a,c),l&&(os.fromBufferAttribute(t,c),Te.add(os)),s=Math.max(s,n.distanceToSquared(Te))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.array,s=e.position.array,r=e.normal.array,o=e.uv.array,a=s.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ve(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],h=[];for(let R=0;R<a;R++)c[R]=new I,h[R]=new I;const u=new I,f=new I,d=new I,g=new xt,p=new xt,m=new xt,_=new I,w=new I;function x(R,j,Q){u.fromArray(s,R*3),f.fromArray(s,j*3),d.fromArray(s,Q*3),g.fromArray(o,R*2),p.fromArray(o,j*2),m.fromArray(o,Q*2),f.sub(u),d.sub(u),p.sub(g),m.sub(g);const k=1/(p.x*m.y-m.x*p.y);isFinite(k)&&(_.copy(f).multiplyScalar(m.y).addScaledVector(d,-p.y).multiplyScalar(k),w.copy(d).multiplyScalar(p.x).addScaledVector(f,-m.x).multiplyScalar(k),c[R].add(_),c[j].add(_),c[Q].add(_),h[R].add(w),h[j].add(w),h[Q].add(w))}let b=this.groups;b.length===0&&(b=[{start:0,count:n.length}]);for(let R=0,j=b.length;R<j;++R){const Q=b[R],k=Q.start,O=Q.count;for(let J=k,Z=k+O;J<Z;J+=3)x(n[J+0],n[J+1],n[J+2])}const S=new I,P=new I,D=new I,v=new I;function A(R){D.fromArray(r,R*3),v.copy(D);const j=c[R];S.copy(j),S.sub(D.multiplyScalar(D.dot(j))).normalize(),P.crossVectors(v,j);const k=P.dot(h[R])<0?-1:1;l[R*4]=S.x,l[R*4+1]=S.y,l[R*4+2]=S.z,l[R*4+3]=k}for(let R=0,j=b.length;R<j;++R){const Q=b[R],k=Q.start,O=Q.count;for(let J=k,Z=k+O;J<Z;J+=3)A(n[J+0]),A(n[J+1]),A(n[J+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Ve(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let f=0,d=n.count;f<d;f++)n.setXYZ(f,0,0,0);const s=new I,r=new I,o=new I,a=new I,l=new I,c=new I,h=new I,u=new I;if(t)for(let f=0,d=t.count;f<d;f+=3){const g=t.getX(f+0),p=t.getX(f+1),m=t.getX(f+2);s.fromBufferAttribute(e,g),r.fromBufferAttribute(e,p),o.fromBufferAttribute(e,m),h.subVectors(o,r),u.subVectors(s,r),h.cross(u),a.fromBufferAttribute(n,g),l.fromBufferAttribute(n,p),c.fromBufferAttribute(n,m),a.add(h),l.add(h),c.add(h),n.setXYZ(g,a.x,a.y,a.z),n.setXYZ(p,l.x,l.y,l.z),n.setXYZ(m,c.x,c.y,c.z)}else for(let f=0,d=e.count;f<d;f+=3)s.fromBufferAttribute(e,f+0),r.fromBufferAttribute(e,f+1),o.fromBufferAttribute(e,f+2),h.subVectors(o,r),u.subVectors(s,r),h.cross(u),n.setXYZ(f+0,h.x,h.y,h.z),n.setXYZ(f+1,h.x,h.y,h.z),n.setXYZ(f+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Te.fromBufferAttribute(t,e),Te.normalize(),t.setXYZ(e,Te.x,Te.y,Te.z)}toNonIndexed(){function t(a,l){const c=a.array,h=a.itemSize,u=a.normalized,f=new c.constructor(l.length*h);let d=0,g=0;for(let p=0,m=l.length;p<m;p++){a.isInterleavedBufferAttribute?d=l[p]*a.data.stride+a.offset:d=l[p]*h;for(let _=0;_<h;_++)f[g++]=c[d++]}return new Ve(f,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new fe,n=this.index.array,s=this.attributes;for(const a in s){const l=s[a],c=t(l,n);e.setAttribute(a,c)}const r=this.morphAttributes;for(const a in r){const l=[],c=r[a];for(let h=0,u=c.length;h<u;h++){const f=c[h],d=t(f,n);l.push(d)}e.morphAttributes[a]=l}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];e.addGroup(c.start,c.count,c.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(t[c]=l[c]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const l in n){const c=n[l];t.data.attributes[l]=c.toJSON(t.data)}const s={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,f=c.length;u<f;u++){const d=c[u];h.push(d.toJSON(t.data))}h.length>0&&(s[l]=h,r=!0)}r&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const s=t.attributes;for(const c in s){const h=s[c];this.setAttribute(c,h.clone(e))}const r=t.morphAttributes;for(const c in r){const h=[],u=r[c];for(let f=0,d=u.length;f<d;f++)h.push(u[f].clone(e));this.morphAttributes[c]=h}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let c=0,h=o.length;c<h;c++){const u=o[c];this.addGroup(u.start,u.count,u.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,t.parameters!==void 0&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const Su=new Dt,as=new ra,$a=new Or,Ks=new I,Js=new I,Qs=new I,Za=new I,so=new I,ro=new xt,oo=new xt,ao=new xt,Ka=new I,lo=new I;class $t extends oe{constructor(t=new fe,e=new vi){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const s=e[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=s.length;r<o;r++){const a=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(t,e){const n=this.geometry,s=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;e.fromBufferAttribute(s,t);const a=this.morphTargetInfluences;if(r&&a){so.set(0,0,0);for(let l=0,c=r.length;l<c;l++){const h=a[l],u=r[l];h!==0&&(Za.fromBufferAttribute(u,t),o?so.addScaledVector(Za,h):so.addScaledVector(Za.sub(e),h))}e.add(so)}return this.isSkinnedMesh&&this.boneTransform(t,e),e}raycast(t,e){const n=this.geometry,s=this.material,r=this.matrixWorld;if(s===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),$a.copy(n.boundingSphere),$a.applyMatrix4(r),t.ray.intersectsSphere($a)===!1)||(Su.copy(r).invert(),as.copy(t.ray).applyMatrix4(Su),n.boundingBox!==null&&as.intersectsBox(n.boundingBox)===!1))return;let o;const a=n.index,l=n.attributes.position,c=n.attributes.uv,h=n.attributes.uv2,u=n.groups,f=n.drawRange;if(a!==null)if(Array.isArray(s))for(let d=0,g=u.length;d<g;d++){const p=u[d],m=s[p.materialIndex],_=Math.max(p.start,f.start),w=Math.min(a.count,Math.min(p.start+p.count,f.start+f.count));for(let x=_,b=w;x<b;x+=3){const S=a.getX(x),P=a.getX(x+1),D=a.getX(x+2);o=co(this,m,t,as,c,h,S,P,D),o&&(o.faceIndex=Math.floor(x/3),o.face.materialIndex=p.materialIndex,e.push(o))}}else{const d=Math.max(0,f.start),g=Math.min(a.count,f.start+f.count);for(let p=d,m=g;p<m;p+=3){const _=a.getX(p),w=a.getX(p+1),x=a.getX(p+2);o=co(this,s,t,as,c,h,_,w,x),o&&(o.faceIndex=Math.floor(p/3),e.push(o))}}else if(l!==void 0)if(Array.isArray(s))for(let d=0,g=u.length;d<g;d++){const p=u[d],m=s[p.materialIndex],_=Math.max(p.start,f.start),w=Math.min(l.count,Math.min(p.start+p.count,f.start+f.count));for(let x=_,b=w;x<b;x+=3){const S=x,P=x+1,D=x+2;o=co(this,m,t,as,c,h,S,P,D),o&&(o.faceIndex=Math.floor(x/3),o.face.materialIndex=p.materialIndex,e.push(o))}}else{const d=Math.max(0,f.start),g=Math.min(l.count,f.start+f.count);for(let p=d,m=g;p<m;p+=3){const _=p,w=p+1,x=p+2;o=co(this,s,t,as,c,h,_,w,x),o&&(o.faceIndex=Math.floor(p/3),e.push(o))}}}}function lv(i,t,e,n,s,r,o,a){let l;if(t.side===He?l=n.intersectTriangle(o,r,s,!0,a):l=n.intersectTriangle(s,r,o,t.side===pn,a),l===null)return null;lo.copy(a),lo.applyMatrix4(i.matrixWorld);const c=e.ray.origin.distanceTo(lo);return c<e.near||c>e.far?null:{distance:c,point:lo.clone(),object:i}}function co(i,t,e,n,s,r,o,a,l){i.getVertexPosition(o,Ks),i.getVertexPosition(a,Js),i.getVertexPosition(l,Qs);const c=lv(i,t,e,n,Ks,Js,Qs,Ka);if(c){s&&(ro.fromBufferAttribute(s,o),oo.fromBufferAttribute(s,a),ao.fromBufferAttribute(s,l),c.uv=In.getUV(Ka,Ks,Js,Qs,ro,oo,ao,new xt)),r&&(ro.fromBufferAttribute(r,o),oo.fromBufferAttribute(r,a),ao.fromBufferAttribute(r,l),c.uv2=In.getUV(Ka,Ks,Js,Qs,ro,oo,ao,new xt));const h={a:o,b:a,c:l,normal:new I,materialIndex:0};In.getNormal(Ks,Js,Qs,h.normal),c.face=h}return c}class Nr extends fe{constructor(t=1,e=1,n=1,s=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:s,heightSegments:r,depthSegments:o};const a=this;s=Math.floor(s),r=Math.floor(r),o=Math.floor(o);const l=[],c=[],h=[],u=[];let f=0,d=0;g("z","y","x",-1,-1,n,e,t,o,r,0),g("z","y","x",1,-1,n,e,-t,o,r,1),g("x","z","y",1,1,t,n,e,s,o,2),g("x","z","y",1,-1,t,n,-e,s,o,3),g("x","y","z",1,-1,t,e,n,s,r,4),g("x","y","z",-1,-1,t,e,-n,s,r,5),this.setIndex(l),this.setAttribute("position",new Xt(c,3)),this.setAttribute("normal",new Xt(h,3)),this.setAttribute("uv",new Xt(u,2));function g(p,m,_,w,x,b,S,P,D,v,A){const R=b/D,j=S/v,Q=b/2,k=S/2,O=P/2,J=D+1,Z=v+1;let it=0,Y=0;const ft=new I;for(let dt=0;dt<Z;dt++){const yt=dt*j-k;for(let W=0;W<J;W++){const ot=W*R-Q;ft[p]=ot*w,ft[m]=yt*x,ft[_]=O,c.push(ft.x,ft.y,ft.z),ft[p]=0,ft[m]=0,ft[_]=P>0?1:-1,h.push(ft.x,ft.y,ft.z),u.push(W/D),u.push(1-dt/v),it+=1}}for(let dt=0;dt<v;dt++)for(let yt=0;yt<D;yt++){const W=f+yt+J*dt,ot=f+yt+J*(dt+1),vt=f+(yt+1)+J*(dt+1),N=f+(yt+1)+J*dt;l.push(W,ot,N),l.push(ot,vt,N),Y+=6}a.addGroup(d,Y,A),d+=Y,f+=it}}static fromJSON(t){return new Nr(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Ns(i){const t={};for(const e in i){t[e]={};for(const n in i[e]){const s=i[e][n];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?t[e][n]=s.clone():Array.isArray(s)?t[e][n]=s.slice():t[e][n]=s}}return t}function Ue(i){const t={};for(let e=0;e<i.length;e++){const n=Ns(i[e]);for(const s in n)t[s]=n[s]}return t}function cv(i){const t=[];for(let e=0;e<i.length;e++)t.push(i[e].clone());return t}function up(i){return i.getRenderTarget()===null&&i.outputEncoding===ie?An:Er}const hv={clone:Ns,merge:Ue};var uv=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,fv=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Fe extends ei{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=uv,this.fragmentShader=fv,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Ns(t.uniforms),this.uniformsGroups=cv(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const s in this.uniforms){const o=this.uniforms[s].value;o&&o.isTexture?e.uniforms[s]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[s]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[s]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[s]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[s]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[s]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[s]={type:"m4",value:o.toArray()}:e.uniforms[s]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const s in this.extensions)this.extensions[s]===!0&&(n[s]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class fp extends oe{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Dt,this.projectionMatrix=new Dt,this.projectionMatrixInverse=new Dt}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class ke extends fp{constructor(t=50,e=1,n=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=s,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Ar*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(Cs*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Ar*2*Math.atan(Math.tan(Cs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,s,r,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(Cs*.5*this.fov)/this.zoom,n=2*e,s=this.aspect*n,r=-.5*s;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;r+=o.offsetX*s/l,e-=o.offsetY*n/c,s*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+s,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const ls=-90,cs=1;class dv extends oe{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n;const s=new ke(ls,cs,t,e);s.layers=this.layers,s.up.set(0,1,0),s.lookAt(1,0,0),this.add(s);const r=new ke(ls,cs,t,e);r.layers=this.layers,r.up.set(0,1,0),r.lookAt(-1,0,0),this.add(r);const o=new ke(ls,cs,t,e);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(0,1,0),this.add(o);const a=new ke(ls,cs,t,e);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(0,-1,0),this.add(a);const l=new ke(ls,cs,t,e);l.layers=this.layers,l.up.set(0,1,0),l.lookAt(0,0,1),this.add(l);const c=new ke(ls,cs,t,e);c.layers=this.layers,c.up.set(0,1,0),c.lookAt(0,0,-1),this.add(c)}update(t,e){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[s,r,o,a,l,c]=this.children,h=t.getRenderTarget(),u=t.toneMapping,f=t.xr.enabled;t.toneMapping=Zn,t.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,s),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,o),t.setRenderTarget(n,3),t.render(e,a),t.setRenderTarget(n,4),t.render(e,l),n.texture.generateMipmaps=d,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(h),t.toneMapping=u,t.xr.enabled=f,n.texture.needsPMREMUpdate=!0}}class dp extends Ce{constructor(t,e,n,s,r,o,a,l,c,h){t=t!==void 0?t:[],e=e!==void 0?e:Fs,super(t,e,n,s,r,o,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class pv extends Xi{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},s=[n,n,n,n,n,n];this.texture=new dp(s,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:on}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new Nr(5,5,5),r=new Fe({name:"CubemapFromEquirect",uniforms:Ns(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:He,blending:gi});r.uniforms.tEquirect.value=e;const o=new $t(s,r),a=e.minFilter;return e.minFilter===Sr&&(e.minFilter=on),new dv(1,10,this).update(t,o),e.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,s){const r=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(e,n,s);t.setRenderTarget(r)}}const Ja=new I,mv=new I,gv=new qe;let Li=class{constructor(t=new I(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,s){return this.normal.set(t,e,n),this.constant=s,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const s=Ja.subVectors(n,e).cross(mv.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(s,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const n=t.delta(Ja),s=this.normal.dot(n);if(s===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/s;return r<0||r>1?null:e.copy(n).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||gv.getNormalMatrix(t),s=this.coplanarPoint(Ja).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-s.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}};const hs=new Or,ho=new I;class Mc{constructor(t=new Li,e=new Li,n=new Li,s=new Li,r=new Li,o=new Li){this.planes=[t,e,n,s,r,o]}set(t,e,n,s,r,o){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(s),a[4].copy(r),a[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,s=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],h=n[6],u=n[7],f=n[8],d=n[9],g=n[10],p=n[11],m=n[12],_=n[13],w=n[14],x=n[15];return e[0].setComponents(a-s,u-l,p-f,x-m).normalize(),e[1].setComponents(a+s,u+l,p+f,x+m).normalize(),e[2].setComponents(a+r,u+c,p+d,x+_).normalize(),e[3].setComponents(a-r,u-c,p-d,x-_).normalize(),e[4].setComponents(a-o,u-h,p-g,x-w).normalize(),e[5].setComponents(a+o,u+h,p+g,x+w).normalize(),this}intersectsObject(t){const e=t.geometry;return e.boundingSphere===null&&e.computeBoundingSphere(),hs.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(hs)}intersectsSprite(t){return hs.center.set(0,0,0),hs.radius=.7071067811865476,hs.applyMatrix4(t.matrixWorld),this.intersectsSphere(hs)}intersectsSphere(t){const e=this.planes,n=t.center,s=-t.radius;for(let r=0;r<6;r++)if(e[r].distanceToPoint(n)<s)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const s=e[n];if(ho.x=s.normal.x>0?t.max.x:t.min.x,ho.y=s.normal.y>0?t.max.y:t.min.y,ho.z=s.normal.z>0?t.max.z:t.min.z,s.distanceToPoint(ho)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function pp(){let i=null,t=!1,e=null,n=null;function s(r,o){e(r,o),n=i.requestAnimationFrame(s)}return{start:function(){t!==!0&&e!==null&&(n=i.requestAnimationFrame(s),t=!0)},stop:function(){i.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(r){e=r},setContext:function(r){i=r}}}function _v(i,t){const e=t.isWebGL2,n=new WeakMap;function s(c,h){const u=c.array,f=c.usage,d=i.createBuffer();i.bindBuffer(h,d),i.bufferData(h,u,f),c.onUploadCallback();let g;if(u instanceof Float32Array)g=5126;else if(u instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(e)g=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else g=5123;else if(u instanceof Int16Array)g=5122;else if(u instanceof Uint32Array)g=5125;else if(u instanceof Int32Array)g=5124;else if(u instanceof Int8Array)g=5120;else if(u instanceof Uint8Array)g=5121;else if(u instanceof Uint8ClampedArray)g=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:d,type:g,bytesPerElement:u.BYTES_PER_ELEMENT,version:c.version}}function r(c,h,u){const f=h.array,d=h.updateRange;i.bindBuffer(u,c),d.count===-1?i.bufferSubData(u,0,f):(e?i.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):i.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1),h.onUploadCallback()}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h&&(i.deleteBuffer(h.buffer),n.delete(c))}function l(c,h){if(c.isGLBufferAttribute){const f=n.get(c);(!f||f.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u===void 0?n.set(c,s(c,h)):u.version<c.version&&(r(u.buffer,c,h),u.version=c.version)}return{get:o,remove:a,update:l}}class Ur extends fe{constructor(t=1,e=1,n=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:s};const r=t/2,o=e/2,a=Math.floor(n),l=Math.floor(s),c=a+1,h=l+1,u=t/a,f=e/l,d=[],g=[],p=[],m=[];for(let _=0;_<h;_++){const w=_*f-o;for(let x=0;x<c;x++){const b=x*u-r;g.push(b,-w,0),p.push(0,0,1),m.push(x/a),m.push(1-_/l)}}for(let _=0;_<l;_++)for(let w=0;w<a;w++){const x=w+c*_,b=w+c*(_+1),S=w+1+c*(_+1),P=w+1+c*_;d.push(x,b,P),d.push(b,S,P)}this.setIndex(d),this.setAttribute("position",new Xt(g,3)),this.setAttribute("normal",new Xt(p,3)),this.setAttribute("uv",new Xt(m,2))}static fromJSON(t){return new Ur(t.width,t.height,t.widthSegments,t.heightSegments)}}var xv=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,vv=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,yv=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,wv=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Mv=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,bv=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Sv="vec3 transformed = vec3( position );",Tv=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Ev=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,Av=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Cv=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Pv=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Lv=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Rv=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Iv=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Dv=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Fv=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,zv=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Ov=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Nv=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Uv=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,kv=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Bv=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Vv=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Hv=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Gv=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Wv="gl_FragColor = linearToOutputTexel( gl_FragColor );",Xv=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,jv=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,qv=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Yv=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,$v=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Zv=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Kv=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Jv=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Qv=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,ty=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,ey=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,ny=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,iy=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,sy=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,ry=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,oy=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,ay=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,ly=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,cy=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,hy=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,uy=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,fy=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,dy=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,py=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,my=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,gy=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,_y=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,xy=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,vy=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,yy=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,wy=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,My=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,by=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Sy=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Ty=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Ey=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Ay=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Cy=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Py=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Ly=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Ry=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Iy=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Dy=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Fy=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,zy=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Oy=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,Ny=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Uy=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,ky=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,By=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Vy=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Hy=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Gy=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Wy=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Xy=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,jy=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,qy=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Yy=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,$y=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Zy=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Ky=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,Jy=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Qy=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,tw=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,ew=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,nw=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,iw=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,sw=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,rw=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,ow=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,aw=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,lw=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,cw=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,hw=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,uw=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,fw=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,dw=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,pw=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,mw=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const gw=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,_w=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,xw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,vw=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,yw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,ww=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Mw=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,bw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Sw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Tw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Ew=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Aw=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Cw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Pw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Lw=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Rw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Iw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Dw=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Fw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,zw=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ow=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Nw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Uw=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,kw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Bw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Vw=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Hw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Gw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ww=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Xw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,jw=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,qw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Yw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,$w=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,kt={alphamap_fragment:xv,alphamap_pars_fragment:vv,alphatest_fragment:yv,alphatest_pars_fragment:wv,aomap_fragment:Mv,aomap_pars_fragment:bv,begin_vertex:Sv,beginnormal_vertex:Tv,bsdfs:Ev,iridescence_fragment:Av,bumpmap_pars_fragment:Cv,clipping_planes_fragment:Pv,clipping_planes_pars_fragment:Lv,clipping_planes_pars_vertex:Rv,clipping_planes_vertex:Iv,color_fragment:Dv,color_pars_fragment:Fv,color_pars_vertex:zv,color_vertex:Ov,common:Nv,cube_uv_reflection_fragment:Uv,defaultnormal_vertex:kv,displacementmap_pars_vertex:Bv,displacementmap_vertex:Vv,emissivemap_fragment:Hv,emissivemap_pars_fragment:Gv,encodings_fragment:Wv,encodings_pars_fragment:Xv,envmap_fragment:jv,envmap_common_pars_fragment:qv,envmap_pars_fragment:Yv,envmap_pars_vertex:$v,envmap_physical_pars_fragment:ay,envmap_vertex:Zv,fog_vertex:Kv,fog_pars_vertex:Jv,fog_fragment:Qv,fog_pars_fragment:ty,gradientmap_pars_fragment:ey,lightmap_fragment:ny,lightmap_pars_fragment:iy,lights_lambert_fragment:sy,lights_lambert_pars_fragment:ry,lights_pars_begin:oy,lights_toon_fragment:ly,lights_toon_pars_fragment:cy,lights_phong_fragment:hy,lights_phong_pars_fragment:uy,lights_physical_fragment:fy,lights_physical_pars_fragment:dy,lights_fragment_begin:py,lights_fragment_maps:my,lights_fragment_end:gy,logdepthbuf_fragment:_y,logdepthbuf_pars_fragment:xy,logdepthbuf_pars_vertex:vy,logdepthbuf_vertex:yy,map_fragment:wy,map_pars_fragment:My,map_particle_fragment:by,map_particle_pars_fragment:Sy,metalnessmap_fragment:Ty,metalnessmap_pars_fragment:Ey,morphcolor_vertex:Ay,morphnormal_vertex:Cy,morphtarget_pars_vertex:Py,morphtarget_vertex:Ly,normal_fragment_begin:Ry,normal_fragment_maps:Iy,normal_pars_fragment:Dy,normal_pars_vertex:Fy,normal_vertex:zy,normalmap_pars_fragment:Oy,clearcoat_normal_fragment_begin:Ny,clearcoat_normal_fragment_maps:Uy,clearcoat_pars_fragment:ky,iridescence_pars_fragment:By,output_fragment:Vy,packing:Hy,premultiplied_alpha_fragment:Gy,project_vertex:Wy,dithering_fragment:Xy,dithering_pars_fragment:jy,roughnessmap_fragment:qy,roughnessmap_pars_fragment:Yy,shadowmap_pars_fragment:$y,shadowmap_pars_vertex:Zy,shadowmap_vertex:Ky,shadowmask_pars_fragment:Jy,skinbase_vertex:Qy,skinning_pars_vertex:tw,skinning_vertex:ew,skinnormal_vertex:nw,specularmap_fragment:iw,specularmap_pars_fragment:sw,tonemapping_fragment:rw,tonemapping_pars_fragment:ow,transmission_fragment:aw,transmission_pars_fragment:lw,uv_pars_fragment:cw,uv_pars_vertex:hw,uv_vertex:uw,uv2_pars_fragment:fw,uv2_pars_vertex:dw,uv2_vertex:pw,worldpos_vertex:mw,background_vert:gw,background_frag:_w,backgroundCube_vert:xw,backgroundCube_frag:vw,cube_vert:yw,cube_frag:ww,depth_vert:Mw,depth_frag:bw,distanceRGBA_vert:Sw,distanceRGBA_frag:Tw,equirect_vert:Ew,equirect_frag:Aw,linedashed_vert:Cw,linedashed_frag:Pw,meshbasic_vert:Lw,meshbasic_frag:Rw,meshlambert_vert:Iw,meshlambert_frag:Dw,meshmatcap_vert:Fw,meshmatcap_frag:zw,meshnormal_vert:Ow,meshnormal_frag:Nw,meshphong_vert:Uw,meshphong_frag:kw,meshphysical_vert:Bw,meshphysical_frag:Vw,meshtoon_vert:Hw,meshtoon_frag:Gw,points_vert:Ww,points_frag:Xw,shadow_vert:jw,shadow_frag:qw,sprite_vert:Yw,sprite_frag:$w},St={common:{diffuse:{value:new Rt(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new qe},uv2Transform:{value:new qe},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new xt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Rt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Rt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new qe}},sprite:{diffuse:{value:new Rt(16777215)},opacity:{value:1},center:{value:new xt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new qe}}},Pn={basic:{uniforms:Ue([St.common,St.specularmap,St.envmap,St.aomap,St.lightmap,St.fog]),vertexShader:kt.meshbasic_vert,fragmentShader:kt.meshbasic_frag},lambert:{uniforms:Ue([St.common,St.specularmap,St.envmap,St.aomap,St.lightmap,St.emissivemap,St.bumpmap,St.normalmap,St.displacementmap,St.fog,St.lights,{emissive:{value:new Rt(0)}}]),vertexShader:kt.meshlambert_vert,fragmentShader:kt.meshlambert_frag},phong:{uniforms:Ue([St.common,St.specularmap,St.envmap,St.aomap,St.lightmap,St.emissivemap,St.bumpmap,St.normalmap,St.displacementmap,St.fog,St.lights,{emissive:{value:new Rt(0)},specular:{value:new Rt(1118481)},shininess:{value:30}}]),vertexShader:kt.meshphong_vert,fragmentShader:kt.meshphong_frag},standard:{uniforms:Ue([St.common,St.envmap,St.aomap,St.lightmap,St.emissivemap,St.bumpmap,St.normalmap,St.displacementmap,St.roughnessmap,St.metalnessmap,St.fog,St.lights,{emissive:{value:new Rt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:kt.meshphysical_vert,fragmentShader:kt.meshphysical_frag},toon:{uniforms:Ue([St.common,St.aomap,St.lightmap,St.emissivemap,St.bumpmap,St.normalmap,St.displacementmap,St.gradientmap,St.fog,St.lights,{emissive:{value:new Rt(0)}}]),vertexShader:kt.meshtoon_vert,fragmentShader:kt.meshtoon_frag},matcap:{uniforms:Ue([St.common,St.bumpmap,St.normalmap,St.displacementmap,St.fog,{matcap:{value:null}}]),vertexShader:kt.meshmatcap_vert,fragmentShader:kt.meshmatcap_frag},points:{uniforms:Ue([St.points,St.fog]),vertexShader:kt.points_vert,fragmentShader:kt.points_frag},dashed:{uniforms:Ue([St.common,St.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:kt.linedashed_vert,fragmentShader:kt.linedashed_frag},depth:{uniforms:Ue([St.common,St.displacementmap]),vertexShader:kt.depth_vert,fragmentShader:kt.depth_frag},normal:{uniforms:Ue([St.common,St.bumpmap,St.normalmap,St.displacementmap,{opacity:{value:1}}]),vertexShader:kt.meshnormal_vert,fragmentShader:kt.meshnormal_frag},sprite:{uniforms:Ue([St.sprite,St.fog]),vertexShader:kt.sprite_vert,fragmentShader:kt.sprite_frag},background:{uniforms:{uvTransform:{value:new qe},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:kt.background_vert,fragmentShader:kt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:kt.backgroundCube_vert,fragmentShader:kt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:kt.cube_vert,fragmentShader:kt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:kt.equirect_vert,fragmentShader:kt.equirect_frag},distanceRGBA:{uniforms:Ue([St.common,St.displacementmap,{referencePosition:{value:new I},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:kt.distanceRGBA_vert,fragmentShader:kt.distanceRGBA_frag},shadow:{uniforms:Ue([St.lights,St.fog,{color:{value:new Rt(0)},opacity:{value:1}}]),vertexShader:kt.shadow_vert,fragmentShader:kt.shadow_frag}};Pn.physical={uniforms:Ue([Pn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new xt(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Rt(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new xt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Rt(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Rt(1,1,1)},specularColorMap:{value:null}}]),vertexShader:kt.meshphysical_vert,fragmentShader:kt.meshphysical_frag};const uo={r:0,b:0,g:0};function Zw(i,t,e,n,s,r,o){const a=new Rt(0);let l=r===!0?0:1,c,h,u=null,f=0,d=null;function g(m,_){let w=!1,x=_.isScene===!0?_.background:null;x&&x.isTexture&&(x=(_.backgroundBlurriness>0?e:t).get(x));const b=i.xr,S=b.getSession&&b.getSession();S&&S.environmentBlendMode==="additive"&&(x=null),x===null?p(a,l):x&&x.isColor&&(p(x,1),w=!0),(i.autoClear||w)&&i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil),x&&(x.isCubeTexture||x.mapping===ia)?(h===void 0&&(h=new $t(new Nr(1,1,1),new Fe({name:"BackgroundCubeMaterial",uniforms:Ns(Pn.backgroundCube.uniforms),vertexShader:Pn.backgroundCube.vertexShader,fragmentShader:Pn.backgroundCube.fragmentShader,side:He,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(P,D,v){this.matrixWorld.copyPosition(v.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(h)),h.material.uniforms.envMap.value=x,h.material.uniforms.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.toneMapped=x.encoding!==ie,(u!==x||f!==x.version||d!==i.toneMapping)&&(h.material.needsUpdate=!0,u=x,f=x.version,d=i.toneMapping),h.layers.enableAll(),m.unshift(h,h.geometry,h.material,0,0,null)):x&&x.isTexture&&(c===void 0&&(c=new $t(new Ur(2,2),new Fe({name:"BackgroundMaterial",uniforms:Ns(Pn.background.uniforms),vertexShader:Pn.background.vertexShader,fragmentShader:Pn.background.fragmentShader,side:pn,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(c)),c.material.uniforms.t2D.value=x,c.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,c.material.toneMapped=x.encoding!==ie,x.matrixAutoUpdate===!0&&x.updateMatrix(),c.material.uniforms.uvTransform.value.copy(x.matrix),(u!==x||f!==x.version||d!==i.toneMapping)&&(c.material.needsUpdate=!0,u=x,f=x.version,d=i.toneMapping),c.layers.enableAll(),m.unshift(c,c.geometry,c.material,0,0,null))}function p(m,_){m.getRGB(uo,up(i)),n.buffers.color.setClear(uo.r,uo.g,uo.b,_,o)}return{getClearColor:function(){return a},setClearColor:function(m,_=1){a.set(m),l=_,p(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(m){l=m,p(a,l)},render:g}}function Kw(i,t,e,n){const s=i.getParameter(34921),r=n.isWebGL2?null:t.get("OES_vertex_array_object"),o=n.isWebGL2||r!==null,a={},l=m(null);let c=l,h=!1;function u(O,J,Z,it,Y){let ft=!1;if(o){const dt=p(it,Z,J);c!==dt&&(c=dt,d(c.object)),ft=_(O,it,Z,Y),ft&&w(O,it,Z,Y)}else{const dt=J.wireframe===!0;(c.geometry!==it.id||c.program!==Z.id||c.wireframe!==dt)&&(c.geometry=it.id,c.program=Z.id,c.wireframe=dt,ft=!0)}Y!==null&&e.update(Y,34963),(ft||h)&&(h=!1,v(O,J,Z,it),Y!==null&&i.bindBuffer(34963,e.get(Y).buffer))}function f(){return n.isWebGL2?i.createVertexArray():r.createVertexArrayOES()}function d(O){return n.isWebGL2?i.bindVertexArray(O):r.bindVertexArrayOES(O)}function g(O){return n.isWebGL2?i.deleteVertexArray(O):r.deleteVertexArrayOES(O)}function p(O,J,Z){const it=Z.wireframe===!0;let Y=a[O.id];Y===void 0&&(Y={},a[O.id]=Y);let ft=Y[J.id];ft===void 0&&(ft={},Y[J.id]=ft);let dt=ft[it];return dt===void 0&&(dt=m(f()),ft[it]=dt),dt}function m(O){const J=[],Z=[],it=[];for(let Y=0;Y<s;Y++)J[Y]=0,Z[Y]=0,it[Y]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:J,enabledAttributes:Z,attributeDivisors:it,object:O,attributes:{},index:null}}function _(O,J,Z,it){const Y=c.attributes,ft=J.attributes;let dt=0;const yt=Z.getAttributes();for(const W in yt)if(yt[W].location>=0){const vt=Y[W];let N=ft[W];if(N===void 0&&(W==="instanceMatrix"&&O.instanceMatrix&&(N=O.instanceMatrix),W==="instanceColor"&&O.instanceColor&&(N=O.instanceColor)),vt===void 0||vt.attribute!==N||N&&vt.data!==N.data)return!0;dt++}return c.attributesNum!==dt||c.index!==it}function w(O,J,Z,it){const Y={},ft=J.attributes;let dt=0;const yt=Z.getAttributes();for(const W in yt)if(yt[W].location>=0){let vt=ft[W];vt===void 0&&(W==="instanceMatrix"&&O.instanceMatrix&&(vt=O.instanceMatrix),W==="instanceColor"&&O.instanceColor&&(vt=O.instanceColor));const N={};N.attribute=vt,vt&&vt.data&&(N.data=vt.data),Y[W]=N,dt++}c.attributes=Y,c.attributesNum=dt,c.index=it}function x(){const O=c.newAttributes;for(let J=0,Z=O.length;J<Z;J++)O[J]=0}function b(O){S(O,0)}function S(O,J){const Z=c.newAttributes,it=c.enabledAttributes,Y=c.attributeDivisors;Z[O]=1,it[O]===0&&(i.enableVertexAttribArray(O),it[O]=1),Y[O]!==J&&((n.isWebGL2?i:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](O,J),Y[O]=J)}function P(){const O=c.newAttributes,J=c.enabledAttributes;for(let Z=0,it=J.length;Z<it;Z++)J[Z]!==O[Z]&&(i.disableVertexAttribArray(Z),J[Z]=0)}function D(O,J,Z,it,Y,ft){n.isWebGL2===!0&&(Z===5124||Z===5125)?i.vertexAttribIPointer(O,J,Z,Y,ft):i.vertexAttribPointer(O,J,Z,it,Y,ft)}function v(O,J,Z,it){if(n.isWebGL2===!1&&(O.isInstancedMesh||it.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;x();const Y=it.attributes,ft=Z.getAttributes(),dt=J.defaultAttributeValues;for(const yt in ft){const W=ft[yt];if(W.location>=0){let ot=Y[yt];if(ot===void 0&&(yt==="instanceMatrix"&&O.instanceMatrix&&(ot=O.instanceMatrix),yt==="instanceColor"&&O.instanceColor&&(ot=O.instanceColor)),ot!==void 0){const vt=ot.normalized,N=ot.itemSize,z=e.get(ot);if(z===void 0)continue;const tt=z.buffer,ct=z.type,gt=z.bytesPerElement;if(ot.isInterleavedBufferAttribute){const pt=ot.data,wt=pt.stride,y=ot.offset;if(pt.isInstancedInterleavedBuffer){for(let T=0;T<W.locationSize;T++)S(W.location+T,pt.meshPerAttribute);O.isInstancedMesh!==!0&&it._maxInstanceCount===void 0&&(it._maxInstanceCount=pt.meshPerAttribute*pt.count)}else for(let T=0;T<W.locationSize;T++)b(W.location+T);i.bindBuffer(34962,tt);for(let T=0;T<W.locationSize;T++)D(W.location+T,N/W.locationSize,ct,vt,wt*gt,(y+N/W.locationSize*T)*gt)}else{if(ot.isInstancedBufferAttribute){for(let pt=0;pt<W.locationSize;pt++)S(W.location+pt,ot.meshPerAttribute);O.isInstancedMesh!==!0&&it._maxInstanceCount===void 0&&(it._maxInstanceCount=ot.meshPerAttribute*ot.count)}else for(let pt=0;pt<W.locationSize;pt++)b(W.location+pt);i.bindBuffer(34962,tt);for(let pt=0;pt<W.locationSize;pt++)D(W.location+pt,N/W.locationSize,ct,vt,N*gt,N/W.locationSize*pt*gt)}}else if(dt!==void 0){const vt=dt[yt];if(vt!==void 0)switch(vt.length){case 2:i.vertexAttrib2fv(W.location,vt);break;case 3:i.vertexAttrib3fv(W.location,vt);break;case 4:i.vertexAttrib4fv(W.location,vt);break;default:i.vertexAttrib1fv(W.location,vt)}}}}P()}function A(){Q();for(const O in a){const J=a[O];for(const Z in J){const it=J[Z];for(const Y in it)g(it[Y].object),delete it[Y];delete J[Z]}delete a[O]}}function R(O){if(a[O.id]===void 0)return;const J=a[O.id];for(const Z in J){const it=J[Z];for(const Y in it)g(it[Y].object),delete it[Y];delete J[Z]}delete a[O.id]}function j(O){for(const J in a){const Z=a[J];if(Z[O.id]===void 0)continue;const it=Z[O.id];for(const Y in it)g(it[Y].object),delete it[Y];delete Z[O.id]}}function Q(){k(),h=!0,c!==l&&(c=l,d(c.object))}function k(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:u,reset:Q,resetDefaultState:k,dispose:A,releaseStatesOfGeometry:R,releaseStatesOfProgram:j,initAttributes:x,enableAttribute:b,disableUnusedAttributes:P}}function Jw(i,t,e,n){const s=n.isWebGL2;let r;function o(c){r=c}function a(c,h){i.drawArrays(r,c,h),e.update(h,r,1)}function l(c,h,u){if(u===0)return;let f,d;if(s)f=i,d="drawArraysInstanced";else if(f=t.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](r,c,h,u),e.update(h,r,u)}this.setMode=o,this.render=a,this.renderInstances=l}function Qw(i,t,e){let n;function s(){if(n!==void 0)return n;if(t.has("EXT_texture_filter_anisotropic")===!0){const D=t.get("EXT_texture_filter_anisotropic");n=i.getParameter(D.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(D){if(D==="highp"){if(i.getShaderPrecisionFormat(35633,36338).precision>0&&i.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";D="mediump"}return D==="mediump"&&i.getShaderPrecisionFormat(35633,36337).precision>0&&i.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&i instanceof WebGL2RenderingContext;let a=e.precision!==void 0?e.precision:"highp";const l=r(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||t.has("WEBGL_draw_buffers"),h=e.logarithmicDepthBuffer===!0,u=i.getParameter(34930),f=i.getParameter(35660),d=i.getParameter(3379),g=i.getParameter(34076),p=i.getParameter(34921),m=i.getParameter(36347),_=i.getParameter(36348),w=i.getParameter(36349),x=f>0,b=o||t.has("OES_texture_float"),S=x&&b,P=o?i.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:s,getMaxPrecision:r,precision:a,logarithmicDepthBuffer:h,maxTextures:u,maxVertexTextures:f,maxTextureSize:d,maxCubemapSize:g,maxAttributes:p,maxVertexUniforms:m,maxVaryings:_,maxFragmentUniforms:w,vertexTextures:x,floatFragmentTextures:b,floatVertexTextures:S,maxSamples:P}}function tM(i){const t=this;let e=null,n=0,s=!1,r=!1;const o=new Li,a=new qe,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,f){const d=u.length!==0||f||n!==0||s;return s=f,n=u.length,d},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(u,f){e=h(u,f,0)},this.setState=function(u,f,d){const g=u.clippingPlanes,p=u.clipIntersection,m=u.clipShadows,_=i.get(u);if(!s||g===null||g.length===0||r&&!m)r?h(null):c();else{const w=r?0:n,x=w*4;let b=_.clippingState||null;l.value=b,b=h(g,f,x,d);for(let S=0;S!==x;++S)b[S]=e[S];_.clippingState=b,this.numIntersection=p?this.numPlanes:0,this.numPlanes+=w}};function c(){l.value!==e&&(l.value=e,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function h(u,f,d,g){const p=u!==null?u.length:0;let m=null;if(p!==0){if(m=l.value,g!==!0||m===null){const _=d+p*4,w=f.matrixWorldInverse;a.getNormalMatrix(w),(m===null||m.length<_)&&(m=new Float32Array(_));for(let x=0,b=d;x!==p;++x,b+=4)o.copy(u[x]).applyMatrix4(w,a),o.normal.toArray(m,b),m[b+3]=o.constant}l.value=m,l.needsUpdate=!0}return t.numPlanes=p,t.numIntersection=0,m}}function eM(i){let t=new WeakMap;function e(o,a){return a===Uo?o.mapping=Fs:a===Ol&&(o.mapping=zs),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===Uo||a===Ol)if(t.has(o)){const l=t.get(o).texture;return e(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new pv(l.height/2);return c.fromEquirectangularTexture(i,o),t.set(o,c),o.addEventListener("dispose",s),e(c.texture,o.mapping)}else return null}}return o}function s(o){const a=o.target;a.removeEventListener("dispose",s);const l=t.get(a);l!==void 0&&(t.delete(a),l.dispose())}function r(){t=new WeakMap}return{get:n,dispose:r}}class bc extends fp{constructor(t=-1,e=1,n=1,s=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=s,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,s,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let r=n-t,o=n+t,a=s+e,l=s-e;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}const vs=4,Tu=[.125,.215,.35,.446,.526,.582],Oi=20,Qa=new bc,Eu=new Rt;let tl=null;const Ri=(1+Math.sqrt(5))/2,us=1/Ri,Au=[new I(1,1,1),new I(-1,1,1),new I(1,1,-1),new I(-1,1,-1),new I(0,Ri,us),new I(0,Ri,-us),new I(us,0,Ri),new I(-us,0,Ri),new I(Ri,us,0),new I(-Ri,us,0)];class Cu{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,s=100){tl=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,n,s,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Ru(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Lu(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(tl),t.scissorTest=!1,fo(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Fs||t.mapping===zs?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),tl=this._renderer.getRenderTarget();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:on,minFilter:on,generateMipmaps:!1,type:Tr,format:ln,encoding:Wi,depthBuffer:!1},s=Pu(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Pu(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=nM(r)),this._blurMaterial=iM(r,t,e)}return s}_compileMaterial(t){const e=new $t(this._lodPlanes[0],t);this._renderer.compile(e,Qa)}_sceneToCubeUV(t,e,n,s){const a=new ke(90,1,e,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],h=this._renderer,u=h.autoClear,f=h.toneMapping;h.getClearColor(Eu),h.toneMapping=Zn,h.autoClear=!1;const d=new vi({name:"PMREM.Background",side:He,depthWrite:!1,depthTest:!1}),g=new $t(new Nr,d);let p=!1;const m=t.background;m?m.isColor&&(d.color.copy(m),t.background=null,p=!0):(d.color.copy(Eu),p=!0);for(let _=0;_<6;_++){const w=_%3;w===0?(a.up.set(0,l[_],0),a.lookAt(c[_],0,0)):w===1?(a.up.set(0,0,l[_]),a.lookAt(0,c[_],0)):(a.up.set(0,l[_],0),a.lookAt(0,0,c[_]));const x=this._cubeSize;fo(s,w*x,_>2?x:0,x,x),h.setRenderTarget(s),p&&h.render(g,a),h.render(t,a)}g.geometry.dispose(),g.material.dispose(),h.toneMapping=f,h.autoClear=u,t.background=m}_textureToCubeUV(t,e){const n=this._renderer,s=t.mapping===Fs||t.mapping===zs;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=Ru()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Lu());const r=s?this._cubemapMaterial:this._equirectMaterial,o=new $t(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=t;const l=this._cubeSize;fo(e,0,0,3*l,2*l),n.setRenderTarget(e),n.render(o,Qa)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let s=1;s<this._lodPlanes.length;s++){const r=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),o=Au[(s-1)%Au.length];this._blur(t,s-1,s,r,o)}e.autoClear=n}_blur(t,e,n,s,r){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,s,"latitudinal",r),this._halfBlur(o,t,n,n,s,"longitudinal",r)}_halfBlur(t,e,n,s,r,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new $t(this._lodPlanes[s],c),f=c.uniforms,d=this._sizeLods[n]-1,g=isFinite(r)?Math.PI/(2*d):2*Math.PI/(2*Oi-1),p=r/g,m=isFinite(r)?1+Math.floor(h*p):Oi;m>Oi&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Oi}`);const _=[];let w=0;for(let D=0;D<Oi;++D){const v=D/p,A=Math.exp(-v*v/2);_.push(A),D===0?w+=A:D<m&&(w+=2*A)}for(let D=0;D<_.length;D++)_[D]=_[D]/w;f.envMap.value=t.texture,f.samples.value=m,f.weights.value=_,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a);const{_lodMax:x}=this;f.dTheta.value=g,f.mipInt.value=x-n;const b=this._sizeLods[s],S=3*b*(s>x-vs?s-x+vs:0),P=4*(this._cubeSize-b);fo(e,S,P,3*b,2*b),l.setRenderTarget(e),l.render(u,Qa)}}function nM(i){const t=[],e=[],n=[];let s=i;const r=i-vs+1+Tu.length;for(let o=0;o<r;o++){const a=Math.pow(2,s);e.push(a);let l=1/a;o>i-vs?l=Tu[o-i+vs-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),h=-c,u=1+c,f=[h,h,u,h,u,u,h,h,u,u,h,u],d=6,g=6,p=3,m=2,_=1,w=new Float32Array(p*g*d),x=new Float32Array(m*g*d),b=new Float32Array(_*g*d);for(let P=0;P<d;P++){const D=P%3*2/3-1,v=P>2?0:-1,A=[D,v,0,D+2/3,v,0,D+2/3,v+1,0,D,v,0,D+2/3,v+1,0,D,v+1,0];w.set(A,p*g*P),x.set(f,m*g*P);const R=[P,P,P,P,P,P];b.set(R,_*g*P)}const S=new fe;S.setAttribute("position",new Ve(w,p)),S.setAttribute("uv",new Ve(x,m)),S.setAttribute("faceIndex",new Ve(b,_)),t.push(S),s>vs&&s--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function Pu(i,t,e){const n=new Xi(i,t,e);return n.texture.mapping=ia,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function fo(i,t,e,n,s){i.viewport.set(t,e,n,s),i.scissor.set(t,e,n,s)}function iM(i,t,e){const n=new Float32Array(Oi),s=new I(0,1,0);return new Fe({name:"SphericalGaussianBlur",defines:{n:Oi,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:Sc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:gi,depthTest:!1,depthWrite:!1})}function Lu(){return new Fe({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Sc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:gi,depthTest:!1,depthWrite:!1})}function Ru(){return new Fe({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Sc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:gi,depthTest:!1,depthWrite:!1})}function Sc(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function sM(i){let t=new WeakMap,e=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===Uo||l===Ol,h=l===Fs||l===zs;if(c||h)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let u=t.get(a);return e===null&&(e=new Cu(i)),u=c?e.fromEquirectangular(a,u):e.fromCubemap(a,u),t.set(a,u),u.texture}else{if(t.has(a))return t.get(a).texture;{const u=a.image;if(c&&u&&u.height>0||h&&u&&s(u)){e===null&&(e=new Cu(i));const f=c?e.fromEquirectangular(a):e.fromCubemap(a);return t.set(a,f),a.addEventListener("dispose",r),f.texture}else return null}}}return a}function s(a){let l=0;const c=6;for(let h=0;h<c;h++)a[h]!==void 0&&l++;return l===c}function r(a){const l=a.target;l.removeEventListener("dispose",r);const c=t.get(l);c!==void 0&&(t.delete(l),c.dispose())}function o(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:o}}function rM(i){const t={};function e(n){if(t[n]!==void 0)return t[n];let s;switch(n){case"WEBGL_depth_texture":s=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=i.getExtension(n)}return t[n]=s,s}return{has:function(n){return e(n)!==null},init:function(n){n.isWebGL2?e("EXT_color_buffer_float"):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture")},get:function(n){const s=e(n);return s===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),s}}}function oM(i,t,e,n){const s={},r=new WeakMap;function o(u){const f=u.target;f.index!==null&&t.remove(f.index);for(const g in f.attributes)t.remove(f.attributes[g]);f.removeEventListener("dispose",o),delete s[f.id];const d=r.get(f);d&&(t.remove(d),r.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,e.memory.geometries--}function a(u,f){return s[f.id]===!0||(f.addEventListener("dispose",o),s[f.id]=!0,e.memory.geometries++),f}function l(u){const f=u.attributes;for(const g in f)t.update(f[g],34962);const d=u.morphAttributes;for(const g in d){const p=d[g];for(let m=0,_=p.length;m<_;m++)t.update(p[m],34962)}}function c(u){const f=[],d=u.index,g=u.attributes.position;let p=0;if(d!==null){const w=d.array;p=d.version;for(let x=0,b=w.length;x<b;x+=3){const S=w[x+0],P=w[x+1],D=w[x+2];f.push(S,P,P,D,D,S)}}else{const w=g.array;p=g.version;for(let x=0,b=w.length/3-1;x<b;x+=3){const S=x+0,P=x+1,D=x+2;f.push(S,P,P,D,D,S)}}const m=new(rp(f)?hp:wc)(f,1);m.version=p;const _=r.get(u);_&&t.remove(_),r.set(u,m)}function h(u){const f=r.get(u);if(f){const d=u.index;d!==null&&f.version<d.version&&c(u)}else c(u);return r.get(u)}return{get:a,update:l,getWireframeAttribute:h}}function aM(i,t,e,n){const s=n.isWebGL2;let r;function o(f){r=f}let a,l;function c(f){a=f.type,l=f.bytesPerElement}function h(f,d){i.drawElements(r,d,a,f*l),e.update(d,r,1)}function u(f,d,g){if(g===0)return;let p,m;if(s)p=i,m="drawElementsInstanced";else if(p=t.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",p===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}p[m](r,d,a,f*l,g),e.update(d,r,g)}this.setMode=o,this.setIndex=c,this.render=h,this.renderInstances=u}function lM(i){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(e.calls++,o){case 4:e.triangles+=a*(r/3);break;case 1:e.lines+=a*(r/2);break;case 3:e.lines+=a*(r-1);break;case 2:e.lines+=a*r;break;case 0:e.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function s(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:s,update:n}}function cM(i,t){return i[0]-t[0]}function hM(i,t){return Math.abs(t[1])-Math.abs(i[1])}function uM(i,t,e){const n={},s=new Float32Array(8),r=new WeakMap,o=new ee,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,h,u,f){const d=c.morphTargetInfluences;if(t.isWebGL2===!0){const p=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,m=p!==void 0?p.length:0;let _=r.get(h);if(_===void 0||_.count!==m){let Z=function(){O.dispose(),r.delete(h),h.removeEventListener("dispose",Z)};var g=Z;_!==void 0&&_.texture.dispose();const b=h.morphAttributes.position!==void 0,S=h.morphAttributes.normal!==void 0,P=h.morphAttributes.color!==void 0,D=h.morphAttributes.position||[],v=h.morphAttributes.normal||[],A=h.morphAttributes.color||[];let R=0;b===!0&&(R=1),S===!0&&(R=2),P===!0&&(R=3);let j=h.attributes.position.count*R,Q=1;j>t.maxTextureSize&&(Q=Math.ceil(j/t.maxTextureSize),j=t.maxTextureSize);const k=new Float32Array(j*Q*4*m),O=new cp(k,j,Q,m);O.type=fi,O.needsUpdate=!0;const J=R*4;for(let it=0;it<m;it++){const Y=D[it],ft=v[it],dt=A[it],yt=j*Q*4*it;for(let W=0;W<Y.count;W++){const ot=W*J;b===!0&&(o.fromBufferAttribute(Y,W),k[yt+ot+0]=o.x,k[yt+ot+1]=o.y,k[yt+ot+2]=o.z,k[yt+ot+3]=0),S===!0&&(o.fromBufferAttribute(ft,W),k[yt+ot+4]=o.x,k[yt+ot+5]=o.y,k[yt+ot+6]=o.z,k[yt+ot+7]=0),P===!0&&(o.fromBufferAttribute(dt,W),k[yt+ot+8]=o.x,k[yt+ot+9]=o.y,k[yt+ot+10]=o.z,k[yt+ot+11]=dt.itemSize===4?o.w:1)}}_={count:m,texture:O,size:new xt(j,Q)},r.set(h,_),h.addEventListener("dispose",Z)}let w=0;for(let b=0;b<d.length;b++)w+=d[b];const x=h.morphTargetsRelative?1:1-w;f.getUniforms().setValue(i,"morphTargetBaseInfluence",x),f.getUniforms().setValue(i,"morphTargetInfluences",d),f.getUniforms().setValue(i,"morphTargetsTexture",_.texture,e),f.getUniforms().setValue(i,"morphTargetsTextureSize",_.size)}else{const p=d===void 0?0:d.length;let m=n[h.id];if(m===void 0||m.length!==p){m=[];for(let S=0;S<p;S++)m[S]=[S,0];n[h.id]=m}for(let S=0;S<p;S++){const P=m[S];P[0]=S,P[1]=d[S]}m.sort(hM);for(let S=0;S<8;S++)S<p&&m[S][1]?(a[S][0]=m[S][0],a[S][1]=m[S][1]):(a[S][0]=Number.MAX_SAFE_INTEGER,a[S][1]=0);a.sort(cM);const _=h.morphAttributes.position,w=h.morphAttributes.normal;let x=0;for(let S=0;S<8;S++){const P=a[S],D=P[0],v=P[1];D!==Number.MAX_SAFE_INTEGER&&v?(_&&h.getAttribute("morphTarget"+S)!==_[D]&&h.setAttribute("morphTarget"+S,_[D]),w&&h.getAttribute("morphNormal"+S)!==w[D]&&h.setAttribute("morphNormal"+S,w[D]),s[S]=v,x+=v):(_&&h.hasAttribute("morphTarget"+S)===!0&&h.deleteAttribute("morphTarget"+S),w&&h.hasAttribute("morphNormal"+S)===!0&&h.deleteAttribute("morphNormal"+S),s[S]=0)}const b=h.morphTargetsRelative?1:1-x;f.getUniforms().setValue(i,"morphTargetBaseInfluence",b),f.getUniforms().setValue(i,"morphTargetInfluences",s)}}return{update:l}}function fM(i,t,e,n){let s=new WeakMap;function r(l){const c=n.render.frame,h=l.geometry,u=t.get(l,h);return s.get(u)!==c&&(t.update(u),s.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),e.update(l.instanceMatrix,34962),l.instanceColor!==null&&e.update(l.instanceColor,34962)),u}function o(){s=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),e.remove(c.instanceMatrix),c.instanceColor!==null&&e.remove(c.instanceColor)}return{update:r,dispose:o}}const mp=new Ce,gp=new cp,_p=new Jx,xp=new dp,Iu=[],Du=[],Fu=new Float32Array(16),zu=new Float32Array(9),Ou=new Float32Array(4);function Vs(i,t,e){const n=i[0];if(n<=0||n>0)return i;const s=t*e;let r=Iu[s];if(r===void 0&&(r=new Float32Array(s),Iu[s]=r),t!==0){n.toArray(r,0);for(let o=1,a=0;o!==t;++o)a+=e,i[o].toArray(r,a)}return r}function we(i,t){if(i.length!==t.length)return!1;for(let e=0,n=i.length;e<n;e++)if(i[e]!==t[e])return!1;return!0}function Me(i,t){for(let e=0,n=t.length;e<n;e++)i[e]=t[e]}function oa(i,t){let e=Du[t];e===void 0&&(e=new Int32Array(t),Du[t]=e);for(let n=0;n!==t;++n)e[n]=i.allocateTextureUnit();return e}function dM(i,t){const e=this.cache;e[0]!==t&&(i.uniform1f(this.addr,t),e[0]=t)}function pM(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(i.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(we(e,t))return;i.uniform2fv(this.addr,t),Me(e,t)}}function mM(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(i.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(i.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(we(e,t))return;i.uniform3fv(this.addr,t),Me(e,t)}}function gM(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(i.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(we(e,t))return;i.uniform4fv(this.addr,t),Me(e,t)}}function _M(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(we(e,t))return;i.uniformMatrix2fv(this.addr,!1,t),Me(e,t)}else{if(we(e,n))return;Ou.set(n),i.uniformMatrix2fv(this.addr,!1,Ou),Me(e,n)}}function xM(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(we(e,t))return;i.uniformMatrix3fv(this.addr,!1,t),Me(e,t)}else{if(we(e,n))return;zu.set(n),i.uniformMatrix3fv(this.addr,!1,zu),Me(e,n)}}function vM(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(we(e,t))return;i.uniformMatrix4fv(this.addr,!1,t),Me(e,t)}else{if(we(e,n))return;Fu.set(n),i.uniformMatrix4fv(this.addr,!1,Fu),Me(e,n)}}function yM(i,t){const e=this.cache;e[0]!==t&&(i.uniform1i(this.addr,t),e[0]=t)}function wM(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(i.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(we(e,t))return;i.uniform2iv(this.addr,t),Me(e,t)}}function MM(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(i.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(we(e,t))return;i.uniform3iv(this.addr,t),Me(e,t)}}function bM(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(i.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(we(e,t))return;i.uniform4iv(this.addr,t),Me(e,t)}}function SM(i,t){const e=this.cache;e[0]!==t&&(i.uniform1ui(this.addr,t),e[0]=t)}function TM(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(i.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(we(e,t))return;i.uniform2uiv(this.addr,t),Me(e,t)}}function EM(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(i.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(we(e,t))return;i.uniform3uiv(this.addr,t),Me(e,t)}}function AM(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(i.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(we(e,t))return;i.uniform4uiv(this.addr,t),Me(e,t)}}function CM(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTexture2D(t||mp,s)}function PM(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTexture3D(t||_p,s)}function LM(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTextureCube(t||xp,s)}function RM(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTexture2DArray(t||gp,s)}function IM(i){switch(i){case 5126:return dM;case 35664:return pM;case 35665:return mM;case 35666:return gM;case 35674:return _M;case 35675:return xM;case 35676:return vM;case 5124:case 35670:return yM;case 35667:case 35671:return wM;case 35668:case 35672:return MM;case 35669:case 35673:return bM;case 5125:return SM;case 36294:return TM;case 36295:return EM;case 36296:return AM;case 35678:case 36198:case 36298:case 36306:case 35682:return CM;case 35679:case 36299:case 36307:return PM;case 35680:case 36300:case 36308:case 36293:return LM;case 36289:case 36303:case 36311:case 36292:return RM}}function DM(i,t){i.uniform1fv(this.addr,t)}function FM(i,t){const e=Vs(t,this.size,2);i.uniform2fv(this.addr,e)}function zM(i,t){const e=Vs(t,this.size,3);i.uniform3fv(this.addr,e)}function OM(i,t){const e=Vs(t,this.size,4);i.uniform4fv(this.addr,e)}function NM(i,t){const e=Vs(t,this.size,4);i.uniformMatrix2fv(this.addr,!1,e)}function UM(i,t){const e=Vs(t,this.size,9);i.uniformMatrix3fv(this.addr,!1,e)}function kM(i,t){const e=Vs(t,this.size,16);i.uniformMatrix4fv(this.addr,!1,e)}function BM(i,t){i.uniform1iv(this.addr,t)}function VM(i,t){i.uniform2iv(this.addr,t)}function HM(i,t){i.uniform3iv(this.addr,t)}function GM(i,t){i.uniform4iv(this.addr,t)}function WM(i,t){i.uniform1uiv(this.addr,t)}function XM(i,t){i.uniform2uiv(this.addr,t)}function jM(i,t){i.uniform3uiv(this.addr,t)}function qM(i,t){i.uniform4uiv(this.addr,t)}function YM(i,t,e){const n=this.cache,s=t.length,r=oa(e,s);we(n,r)||(i.uniform1iv(this.addr,r),Me(n,r));for(let o=0;o!==s;++o)e.setTexture2D(t[o]||mp,r[o])}function $M(i,t,e){const n=this.cache,s=t.length,r=oa(e,s);we(n,r)||(i.uniform1iv(this.addr,r),Me(n,r));for(let o=0;o!==s;++o)e.setTexture3D(t[o]||_p,r[o])}function ZM(i,t,e){const n=this.cache,s=t.length,r=oa(e,s);we(n,r)||(i.uniform1iv(this.addr,r),Me(n,r));for(let o=0;o!==s;++o)e.setTextureCube(t[o]||xp,r[o])}function KM(i,t,e){const n=this.cache,s=t.length,r=oa(e,s);we(n,r)||(i.uniform1iv(this.addr,r),Me(n,r));for(let o=0;o!==s;++o)e.setTexture2DArray(t[o]||gp,r[o])}function JM(i){switch(i){case 5126:return DM;case 35664:return FM;case 35665:return zM;case 35666:return OM;case 35674:return NM;case 35675:return UM;case 35676:return kM;case 5124:case 35670:return BM;case 35667:case 35671:return VM;case 35668:case 35672:return HM;case 35669:case 35673:return GM;case 5125:return WM;case 36294:return XM;case 36295:return jM;case 36296:return qM;case 35678:case 36198:case 36298:case 36306:case 35682:return YM;case 35679:case 36299:case 36307:return $M;case 35680:case 36300:case 36308:case 36293:return ZM;case 36289:case 36303:case 36311:case 36292:return KM}}class QM{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=IM(e.type)}}class tb{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=JM(e.type)}}class eb{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const s=this.seq;for(let r=0,o=s.length;r!==o;++r){const a=s[r];a.setValue(t,e[a.id],n)}}}const el=/(\w+)(\])?(\[|\.)?/g;function Nu(i,t){i.seq.push(t),i.map[t.id]=t}function nb(i,t,e){const n=i.name,s=n.length;for(el.lastIndex=0;;){const r=el.exec(n),o=el.lastIndex;let a=r[1];const l=r[2]==="]",c=r[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===s){Nu(e,c===void 0?new QM(a,i,t):new tb(a,i,t));break}else{let u=e.map[a];u===void 0&&(u=new eb(a),Nu(e,u)),e=u}}}class Ro{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let s=0;s<n;++s){const r=t.getActiveUniform(e,s),o=t.getUniformLocation(e,r.name);nb(r,o,this)}}setValue(t,e,n,s){const r=this.map[e];r!==void 0&&r.setValue(t,n,s)}setOptional(t,e,n){const s=e[n];s!==void 0&&this.setValue(t,n,s)}static upload(t,e,n,s){for(let r=0,o=e.length;r!==o;++r){const a=e[r],l=n[a.id];l.needsUpdate!==!1&&a.setValue(t,l.value,s)}}static seqWithValue(t,e){const n=[];for(let s=0,r=t.length;s!==r;++s){const o=t[s];o.id in e&&n.push(o)}return n}}function Uu(i,t,e){const n=i.createShader(t);return i.shaderSource(n,e),i.compileShader(n),n}let ib=0;function sb(i,t){const e=i.split(`
`),n=[],s=Math.max(t-6,0),r=Math.min(t+6,e.length);for(let o=s;o<r;o++){const a=o+1;n.push(`${a===t?">":" "} ${a}: ${e[o]}`)}return n.join(`
`)}function rb(i){switch(i){case Wi:return["Linear","( value )"];case ie:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",i),["Linear","( value )"]}}function ku(i,t,e){const n=i.getShaderParameter(t,35713),s=i.getShaderInfoLog(t).trim();if(n&&s==="")return"";const r=/ERROR: 0:(\d+)/.exec(s);if(r){const o=parseInt(r[1]);return e.toUpperCase()+`

`+s+`

`+sb(i.getShaderSource(t),o)}else return s}function ob(i,t){const e=rb(t);return"vec4 "+i+"( vec4 value ) { return LinearTo"+e[0]+e[1]+"; }"}function ab(i,t){let e;switch(t){case fx:e="Linear";break;case dx:e="Reinhard";break;case px:e="OptimizedCineon";break;case mx:e="ACESFilmic";break;case gx:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+i+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function lb(i){return[i.extensionDerivatives||i.envMapCubeUVHeight||i.bumpMap||i.tangentSpaceNormalMap||i.clearcoatNormalMap||i.flatShading||i.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(i.extensionFragDepth||i.logarithmicDepthBuffer)&&i.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",i.extensionDrawBuffers&&i.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(i.extensionShaderTextureLOD||i.envMap||i.transmission)&&i.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(rr).join(`
`)}function cb(i){const t=[];for(const e in i){const n=i[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function hb(i,t){const e={},n=i.getProgramParameter(t,35721);for(let s=0;s<n;s++){const r=i.getActiveAttrib(t,s),o=r.name;let a=1;r.type===35674&&(a=2),r.type===35675&&(a=3),r.type===35676&&(a=4),e[o]={type:r.type,location:i.getAttribLocation(t,o),locationSize:a}}return e}function rr(i){return i!==""}function Bu(i,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Vu(i,t){return i.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const ub=/^[ \t]*#include +<([\w\d./]+)>/gm;function Bl(i){return i.replace(ub,fb)}function fb(i,t){const e=kt[t];if(e===void 0)throw new Error("Can not resolve #include <"+t+">");return Bl(e)}const db=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Hu(i){return i.replace(db,pb)}function pb(i,t,e,n){let s="";for(let r=parseInt(t);r<parseInt(e);r++)s+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return s}function Gu(i){let t="precision "+i.precision+` float;
precision `+i.precision+" int;";return i.precision==="highp"?t+=`
#define HIGH_PRECISION`:i.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function mb(i){let t="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===Jd?t="SHADOWMAP_TYPE_PCF":i.shadowMapType===Qd?t="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===ir&&(t="SHADOWMAP_TYPE_VSM"),t}function gb(i){let t="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case Fs:case zs:t="ENVMAP_TYPE_CUBE";break;case ia:t="ENVMAP_TYPE_CUBE_UV";break}return t}function _b(i){let t="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case zs:t="ENVMAP_MODE_REFRACTION";break}return t}function xb(i){let t="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case na:t="ENVMAP_BLENDING_MULTIPLY";break;case hx:t="ENVMAP_BLENDING_MIX";break;case ux:t="ENVMAP_BLENDING_ADD";break}return t}function vb(i){const t=i.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function yb(i,t,e,n){const s=i.getContext(),r=e.defines;let o=e.vertexShader,a=e.fragmentShader;const l=mb(e),c=gb(e),h=_b(e),u=xb(e),f=vb(e),d=e.isWebGL2?"":lb(e),g=cb(r),p=s.createProgram();let m,_,w=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(m=[g].filter(rr).join(`
`),m.length>0&&(m+=`
`),_=[d,g].filter(rr).join(`
`),_.length>0&&(_+=`
`)):(m=[Gu(e),"#define SHADER_NAME "+e.shaderName,g,e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.supportsVertexTextures?"#define VERTEX_TEXTURES":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+h:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.displacementMap&&e.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors&&e.isWebGL2?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(rr).join(`
`),_=[d,Gu(e),"#define SHADER_NAME "+e.shaderName,g,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+c:"",e.envMap?"#define "+h:"",e.envMap?"#define "+u:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==Zn?"#define TONE_MAPPING":"",e.toneMapping!==Zn?kt.tonemapping_pars_fragment:"",e.toneMapping!==Zn?ab("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",kt.encodings_pars_fragment,ob("linearToOutputTexel",e.outputEncoding),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(rr).join(`
`)),o=Bl(o),o=Bu(o,e),o=Vu(o,e),a=Bl(a),a=Bu(a,e),a=Vu(a,e),o=Hu(o),a=Hu(a),e.isWebGL2&&e.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,_=["#define varying in",e.glslVersion===du?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===du?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const x=w+m+o,b=w+_+a,S=Uu(s,35633,x),P=Uu(s,35632,b);if(s.attachShader(p,S),s.attachShader(p,P),e.index0AttributeName!==void 0?s.bindAttribLocation(p,0,e.index0AttributeName):e.morphTargets===!0&&s.bindAttribLocation(p,0,"position"),s.linkProgram(p),i.debug.checkShaderErrors){const A=s.getProgramInfoLog(p).trim(),R=s.getShaderInfoLog(S).trim(),j=s.getShaderInfoLog(P).trim();let Q=!0,k=!0;if(s.getProgramParameter(p,35714)===!1){Q=!1;const O=ku(s,S,"vertex"),J=ku(s,P,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(p,35715)+`

Program Info Log: `+A+`
`+O+`
`+J)}else A!==""?console.warn("THREE.WebGLProgram: Program Info Log:",A):(R===""||j==="")&&(k=!1);k&&(this.diagnostics={runnable:Q,programLog:A,vertexShader:{log:R,prefix:m},fragmentShader:{log:j,prefix:_}})}s.deleteShader(S),s.deleteShader(P);let D;this.getUniforms=function(){return D===void 0&&(D=new Ro(s,p)),D};let v;return this.getAttributes=function(){return v===void 0&&(v=hb(s,p)),v},this.destroy=function(){n.releaseStatesOfProgram(this),s.deleteProgram(p),this.program=void 0},this.name=e.shaderName,this.id=ib++,this.cacheKey=t,this.usedTimes=1,this.program=p,this.vertexShader=S,this.fragmentShader=P,this}let wb=0;class Mb{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,s=this._getShaderStage(e),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(t);return o.has(s)===!1&&(o.add(s),s.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new bb(t),e.set(t,n)),n}}class bb{constructor(t){this.id=wb++,this.code=t,this.usedTimes=0}}function Sb(i,t,e,n,s,r,o){const a=new yc,l=new Mb,c=[],h=s.isWebGL2,u=s.logarithmicDepthBuffer,f=s.vertexTextures;let d=s.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function p(v,A,R,j,Q){const k=j.fog,O=Q.geometry,J=v.isMeshStandardMaterial?j.environment:null,Z=(v.isMeshStandardMaterial?e:t).get(v.envMap||J),it=Z&&Z.mapping===ia?Z.image.height:null,Y=g[v.type];v.precision!==null&&(d=s.getMaxPrecision(v.precision),d!==v.precision&&console.warn("THREE.WebGLProgram.getParameters:",v.precision,"not supported, using",d,"instead."));const ft=O.morphAttributes.position||O.morphAttributes.normal||O.morphAttributes.color,dt=ft!==void 0?ft.length:0;let yt=0;O.morphAttributes.position!==void 0&&(yt=1),O.morphAttributes.normal!==void 0&&(yt=2),O.morphAttributes.color!==void 0&&(yt=3);let W,ot,vt,N;if(Y){const wt=Pn[Y];W=wt.vertexShader,ot=wt.fragmentShader}else W=v.vertexShader,ot=v.fragmentShader,l.update(v),vt=l.getVertexShaderID(v),N=l.getFragmentShaderID(v);const z=i.getRenderTarget(),tt=v.alphaTest>0,ct=v.clearcoat>0,gt=v.iridescence>0;return{isWebGL2:h,shaderID:Y,shaderName:v.type,vertexShader:W,fragmentShader:ot,defines:v.defines,customVertexShaderID:vt,customFragmentShaderID:N,isRawShaderMaterial:v.isRawShaderMaterial===!0,glslVersion:v.glslVersion,precision:d,instancing:Q.isInstancedMesh===!0,instancingColor:Q.isInstancedMesh===!0&&Q.instanceColor!==null,supportsVertexTextures:f,outputEncoding:z===null?i.outputEncoding:z.isXRRenderTarget===!0?z.texture.encoding:Wi,map:!!v.map,matcap:!!v.matcap,envMap:!!Z,envMapMode:Z&&Z.mapping,envMapCubeUVHeight:it,lightMap:!!v.lightMap,aoMap:!!v.aoMap,emissiveMap:!!v.emissiveMap,bumpMap:!!v.bumpMap,normalMap:!!v.normalMap,objectSpaceNormalMap:v.normalMapType===Ox,tangentSpaceNormalMap:v.normalMapType===sa,decodeVideoTexture:!!v.map&&v.map.isVideoTexture===!0&&v.map.encoding===ie,clearcoat:ct,clearcoatMap:ct&&!!v.clearcoatMap,clearcoatRoughnessMap:ct&&!!v.clearcoatRoughnessMap,clearcoatNormalMap:ct&&!!v.clearcoatNormalMap,iridescence:gt,iridescenceMap:gt&&!!v.iridescenceMap,iridescenceThicknessMap:gt&&!!v.iridescenceThicknessMap,displacementMap:!!v.displacementMap,roughnessMap:!!v.roughnessMap,metalnessMap:!!v.metalnessMap,specularMap:!!v.specularMap,specularIntensityMap:!!v.specularIntensityMap,specularColorMap:!!v.specularColorMap,opaque:v.transparent===!1&&v.blending===Es,alphaMap:!!v.alphaMap,alphaTest:tt,gradientMap:!!v.gradientMap,sheen:v.sheen>0,sheenColorMap:!!v.sheenColorMap,sheenRoughnessMap:!!v.sheenRoughnessMap,transmission:v.transmission>0,transmissionMap:!!v.transmissionMap,thicknessMap:!!v.thicknessMap,combine:v.combine,vertexTangents:!!v.normalMap&&!!O.attributes.tangent,vertexColors:v.vertexColors,vertexAlphas:v.vertexColors===!0&&!!O.attributes.color&&O.attributes.color.itemSize===4,vertexUvs:!!v.map||!!v.bumpMap||!!v.normalMap||!!v.specularMap||!!v.alphaMap||!!v.emissiveMap||!!v.roughnessMap||!!v.metalnessMap||!!v.clearcoatMap||!!v.clearcoatRoughnessMap||!!v.clearcoatNormalMap||!!v.iridescenceMap||!!v.iridescenceThicknessMap||!!v.displacementMap||!!v.transmissionMap||!!v.thicknessMap||!!v.specularIntensityMap||!!v.specularColorMap||!!v.sheenColorMap||!!v.sheenRoughnessMap,uvsVertexOnly:!(v.map||v.bumpMap||v.normalMap||v.specularMap||v.alphaMap||v.emissiveMap||v.roughnessMap||v.metalnessMap||v.clearcoatNormalMap||v.iridescenceMap||v.iridescenceThicknessMap||v.transmission>0||v.transmissionMap||v.thicknessMap||v.specularIntensityMap||v.specularColorMap||v.sheen>0||v.sheenColorMap||v.sheenRoughnessMap)&&!!v.displacementMap,fog:!!k,useFog:v.fog===!0,fogExp2:k&&k.isFogExp2,flatShading:!!v.flatShading,sizeAttenuation:v.sizeAttenuation,logarithmicDepthBuffer:u,skinning:Q.isSkinnedMesh===!0,morphTargets:O.morphAttributes.position!==void 0,morphNormals:O.morphAttributes.normal!==void 0,morphColors:O.morphAttributes.color!==void 0,morphTargetsCount:dt,morphTextureStride:yt,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numSpotLightMaps:A.spotLightMap.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numSpotLightShadowsWithMaps:A.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:v.dithering,shadowMapEnabled:i.shadowMap.enabled&&R.length>0,shadowMapType:i.shadowMap.type,toneMapping:v.toneMapped?i.toneMapping:Zn,physicallyCorrectLights:i.physicallyCorrectLights,premultipliedAlpha:v.premultipliedAlpha,doubleSided:v.side===Be,flipSided:v.side===He,useDepthPacking:!!v.depthPacking,depthPacking:v.depthPacking||0,index0AttributeName:v.index0AttributeName,extensionDerivatives:v.extensions&&v.extensions.derivatives,extensionFragDepth:v.extensions&&v.extensions.fragDepth,extensionDrawBuffers:v.extensions&&v.extensions.drawBuffers,extensionShaderTextureLOD:v.extensions&&v.extensions.shaderTextureLOD,rendererExtensionFragDepth:h||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||n.has("EXT_shader_texture_lod"),customProgramCacheKey:v.customProgramCacheKey()}}function m(v){const A=[];if(v.shaderID?A.push(v.shaderID):(A.push(v.customVertexShaderID),A.push(v.customFragmentShaderID)),v.defines!==void 0)for(const R in v.defines)A.push(R),A.push(v.defines[R]);return v.isRawShaderMaterial===!1&&(_(A,v),w(A,v),A.push(i.outputEncoding)),A.push(v.customProgramCacheKey),A.join()}function _(v,A){v.push(A.precision),v.push(A.outputEncoding),v.push(A.envMapMode),v.push(A.envMapCubeUVHeight),v.push(A.combine),v.push(A.vertexUvs),v.push(A.fogExp2),v.push(A.sizeAttenuation),v.push(A.morphTargetsCount),v.push(A.morphAttributeCount),v.push(A.numDirLights),v.push(A.numPointLights),v.push(A.numSpotLights),v.push(A.numSpotLightMaps),v.push(A.numHemiLights),v.push(A.numRectAreaLights),v.push(A.numDirLightShadows),v.push(A.numPointLightShadows),v.push(A.numSpotLightShadows),v.push(A.numSpotLightShadowsWithMaps),v.push(A.shadowMapType),v.push(A.toneMapping),v.push(A.numClippingPlanes),v.push(A.numClipIntersection),v.push(A.depthPacking)}function w(v,A){a.disableAll(),A.isWebGL2&&a.enable(0),A.supportsVertexTextures&&a.enable(1),A.instancing&&a.enable(2),A.instancingColor&&a.enable(3),A.map&&a.enable(4),A.matcap&&a.enable(5),A.envMap&&a.enable(6),A.lightMap&&a.enable(7),A.aoMap&&a.enable(8),A.emissiveMap&&a.enable(9),A.bumpMap&&a.enable(10),A.normalMap&&a.enable(11),A.objectSpaceNormalMap&&a.enable(12),A.tangentSpaceNormalMap&&a.enable(13),A.clearcoat&&a.enable(14),A.clearcoatMap&&a.enable(15),A.clearcoatRoughnessMap&&a.enable(16),A.clearcoatNormalMap&&a.enable(17),A.iridescence&&a.enable(18),A.iridescenceMap&&a.enable(19),A.iridescenceThicknessMap&&a.enable(20),A.displacementMap&&a.enable(21),A.specularMap&&a.enable(22),A.roughnessMap&&a.enable(23),A.metalnessMap&&a.enable(24),A.gradientMap&&a.enable(25),A.alphaMap&&a.enable(26),A.alphaTest&&a.enable(27),A.vertexColors&&a.enable(28),A.vertexAlphas&&a.enable(29),A.vertexUvs&&a.enable(30),A.vertexTangents&&a.enable(31),A.uvsVertexOnly&&a.enable(32),v.push(a.mask),a.disableAll(),A.fog&&a.enable(0),A.useFog&&a.enable(1),A.flatShading&&a.enable(2),A.logarithmicDepthBuffer&&a.enable(3),A.skinning&&a.enable(4),A.morphTargets&&a.enable(5),A.morphNormals&&a.enable(6),A.morphColors&&a.enable(7),A.premultipliedAlpha&&a.enable(8),A.shadowMapEnabled&&a.enable(9),A.physicallyCorrectLights&&a.enable(10),A.doubleSided&&a.enable(11),A.flipSided&&a.enable(12),A.useDepthPacking&&a.enable(13),A.dithering&&a.enable(14),A.specularIntensityMap&&a.enable(15),A.specularColorMap&&a.enable(16),A.transmission&&a.enable(17),A.transmissionMap&&a.enable(18),A.thicknessMap&&a.enable(19),A.sheen&&a.enable(20),A.sheenColorMap&&a.enable(21),A.sheenRoughnessMap&&a.enable(22),A.decodeVideoTexture&&a.enable(23),A.opaque&&a.enable(24),v.push(a.mask)}function x(v){const A=g[v.type];let R;if(A){const j=Pn[A];R=hv.clone(j.uniforms)}else R=v.uniforms;return R}function b(v,A){let R;for(let j=0,Q=c.length;j<Q;j++){const k=c[j];if(k.cacheKey===A){R=k,++R.usedTimes;break}}return R===void 0&&(R=new yb(i,A,v,r),c.push(R)),R}function S(v){if(--v.usedTimes===0){const A=c.indexOf(v);c[A]=c[c.length-1],c.pop(),v.destroy()}}function P(v){l.remove(v)}function D(){l.dispose()}return{getParameters:p,getProgramCacheKey:m,getUniforms:x,acquireProgram:b,releaseProgram:S,releaseShaderCache:P,programs:c,dispose:D}}function Tb(){let i=new WeakMap;function t(r){let o=i.get(r);return o===void 0&&(o={},i.set(r,o)),o}function e(r){i.delete(r)}function n(r,o,a){i.get(r)[o]=a}function s(){i=new WeakMap}return{get:t,remove:e,update:n,dispose:s}}function Eb(i,t){return i.groupOrder!==t.groupOrder?i.groupOrder-t.groupOrder:i.renderOrder!==t.renderOrder?i.renderOrder-t.renderOrder:i.material.id!==t.material.id?i.material.id-t.material.id:i.z!==t.z?i.z-t.z:i.id-t.id}function Wu(i,t){return i.groupOrder!==t.groupOrder?i.groupOrder-t.groupOrder:i.renderOrder!==t.renderOrder?i.renderOrder-t.renderOrder:i.z!==t.z?t.z-i.z:i.id-t.id}function Xu(){const i=[];let t=0;const e=[],n=[],s=[];function r(){t=0,e.length=0,n.length=0,s.length=0}function o(u,f,d,g,p,m){let _=i[t];return _===void 0?(_={id:u.id,object:u,geometry:f,material:d,groupOrder:g,renderOrder:u.renderOrder,z:p,group:m},i[t]=_):(_.id=u.id,_.object=u,_.geometry=f,_.material=d,_.groupOrder=g,_.renderOrder=u.renderOrder,_.z=p,_.group=m),t++,_}function a(u,f,d,g,p,m){const _=o(u,f,d,g,p,m);d.transmission>0?n.push(_):d.transparent===!0?s.push(_):e.push(_)}function l(u,f,d,g,p,m){const _=o(u,f,d,g,p,m);d.transmission>0?n.unshift(_):d.transparent===!0?s.unshift(_):e.unshift(_)}function c(u,f){e.length>1&&e.sort(u||Eb),n.length>1&&n.sort(f||Wu),s.length>1&&s.sort(f||Wu)}function h(){for(let u=t,f=i.length;u<f;u++){const d=i[u];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:e,transmissive:n,transparent:s,init:r,push:a,unshift:l,finish:h,sort:c}}function Ab(){let i=new WeakMap;function t(n,s){const r=i.get(n);let o;return r===void 0?(o=new Xu,i.set(n,[o])):s>=r.length?(o=new Xu,r.push(o)):o=r[s],o}function e(){i=new WeakMap}return{get:t,dispose:e}}function Cb(){const i={};return{get:function(t){if(i[t.id]!==void 0)return i[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new I,color:new Rt};break;case"SpotLight":e={position:new I,direction:new I,color:new Rt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new I,color:new Rt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new I,skyColor:new Rt,groundColor:new Rt};break;case"RectAreaLight":e={color:new Rt,position:new I,halfWidth:new I,halfHeight:new I};break}return i[t.id]=e,e}}}function Pb(){const i={};return{get:function(t){if(i[t.id]!==void 0)return i[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xt};break;case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xt};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xt,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[t.id]=e,e}}}let Lb=0;function Rb(i,t){return(t.castShadow?2:0)-(i.castShadow?2:0)+(t.map?1:0)-(i.map?1:0)}function Ib(i,t){const e=new Cb,n=Pb(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let h=0;h<9;h++)s.probe.push(new I);const r=new I,o=new Dt,a=new Dt;function l(h,u){let f=0,d=0,g=0;for(let j=0;j<9;j++)s.probe[j].set(0,0,0);let p=0,m=0,_=0,w=0,x=0,b=0,S=0,P=0,D=0,v=0;h.sort(Rb);const A=u!==!0?Math.PI:1;for(let j=0,Q=h.length;j<Q;j++){const k=h[j],O=k.color,J=k.intensity,Z=k.distance,it=k.shadow&&k.shadow.map?k.shadow.map.texture:null;if(k.isAmbientLight)f+=O.r*J*A,d+=O.g*J*A,g+=O.b*J*A;else if(k.isLightProbe)for(let Y=0;Y<9;Y++)s.probe[Y].addScaledVector(k.sh.coefficients[Y],J);else if(k.isDirectionalLight){const Y=e.get(k);if(Y.color.copy(k.color).multiplyScalar(k.intensity*A),k.castShadow){const ft=k.shadow,dt=n.get(k);dt.shadowBias=ft.bias,dt.shadowNormalBias=ft.normalBias,dt.shadowRadius=ft.radius,dt.shadowMapSize=ft.mapSize,s.directionalShadow[p]=dt,s.directionalShadowMap[p]=it,s.directionalShadowMatrix[p]=k.shadow.matrix,b++}s.directional[p]=Y,p++}else if(k.isSpotLight){const Y=e.get(k);Y.position.setFromMatrixPosition(k.matrixWorld),Y.color.copy(O).multiplyScalar(J*A),Y.distance=Z,Y.coneCos=Math.cos(k.angle),Y.penumbraCos=Math.cos(k.angle*(1-k.penumbra)),Y.decay=k.decay,s.spot[_]=Y;const ft=k.shadow;if(k.map&&(s.spotLightMap[D]=k.map,D++,ft.updateMatrices(k),k.castShadow&&v++),s.spotLightMatrix[_]=ft.matrix,k.castShadow){const dt=n.get(k);dt.shadowBias=ft.bias,dt.shadowNormalBias=ft.normalBias,dt.shadowRadius=ft.radius,dt.shadowMapSize=ft.mapSize,s.spotShadow[_]=dt,s.spotShadowMap[_]=it,P++}_++}else if(k.isRectAreaLight){const Y=e.get(k);Y.color.copy(O).multiplyScalar(J),Y.halfWidth.set(k.width*.5,0,0),Y.halfHeight.set(0,k.height*.5,0),s.rectArea[w]=Y,w++}else if(k.isPointLight){const Y=e.get(k);if(Y.color.copy(k.color).multiplyScalar(k.intensity*A),Y.distance=k.distance,Y.decay=k.decay,k.castShadow){const ft=k.shadow,dt=n.get(k);dt.shadowBias=ft.bias,dt.shadowNormalBias=ft.normalBias,dt.shadowRadius=ft.radius,dt.shadowMapSize=ft.mapSize,dt.shadowCameraNear=ft.camera.near,dt.shadowCameraFar=ft.camera.far,s.pointShadow[m]=dt,s.pointShadowMap[m]=it,s.pointShadowMatrix[m]=k.shadow.matrix,S++}s.point[m]=Y,m++}else if(k.isHemisphereLight){const Y=e.get(k);Y.skyColor.copy(k.color).multiplyScalar(J*A),Y.groundColor.copy(k.groundColor).multiplyScalar(J*A),s.hemi[x]=Y,x++}}w>0&&(t.isWebGL2||i.has("OES_texture_float_linear")===!0?(s.rectAreaLTC1=St.LTC_FLOAT_1,s.rectAreaLTC2=St.LTC_FLOAT_2):i.has("OES_texture_half_float_linear")===!0?(s.rectAreaLTC1=St.LTC_HALF_1,s.rectAreaLTC2=St.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),s.ambient[0]=f,s.ambient[1]=d,s.ambient[2]=g;const R=s.hash;(R.directionalLength!==p||R.pointLength!==m||R.spotLength!==_||R.rectAreaLength!==w||R.hemiLength!==x||R.numDirectionalShadows!==b||R.numPointShadows!==S||R.numSpotShadows!==P||R.numSpotMaps!==D)&&(s.directional.length=p,s.spot.length=_,s.rectArea.length=w,s.point.length=m,s.hemi.length=x,s.directionalShadow.length=b,s.directionalShadowMap.length=b,s.pointShadow.length=S,s.pointShadowMap.length=S,s.spotShadow.length=P,s.spotShadowMap.length=P,s.directionalShadowMatrix.length=b,s.pointShadowMatrix.length=S,s.spotLightMatrix.length=P+D-v,s.spotLightMap.length=D,s.numSpotLightShadowsWithMaps=v,R.directionalLength=p,R.pointLength=m,R.spotLength=_,R.rectAreaLength=w,R.hemiLength=x,R.numDirectionalShadows=b,R.numPointShadows=S,R.numSpotShadows=P,R.numSpotMaps=D,s.version=Lb++)}function c(h,u){let f=0,d=0,g=0,p=0,m=0;const _=u.matrixWorldInverse;for(let w=0,x=h.length;w<x;w++){const b=h[w];if(b.isDirectionalLight){const S=s.directional[f];S.direction.setFromMatrixPosition(b.matrixWorld),r.setFromMatrixPosition(b.target.matrixWorld),S.direction.sub(r),S.direction.transformDirection(_),f++}else if(b.isSpotLight){const S=s.spot[g];S.position.setFromMatrixPosition(b.matrixWorld),S.position.applyMatrix4(_),S.direction.setFromMatrixPosition(b.matrixWorld),r.setFromMatrixPosition(b.target.matrixWorld),S.direction.sub(r),S.direction.transformDirection(_),g++}else if(b.isRectAreaLight){const S=s.rectArea[p];S.position.setFromMatrixPosition(b.matrixWorld),S.position.applyMatrix4(_),a.identity(),o.copy(b.matrixWorld),o.premultiply(_),a.extractRotation(o),S.halfWidth.set(b.width*.5,0,0),S.halfHeight.set(0,b.height*.5,0),S.halfWidth.applyMatrix4(a),S.halfHeight.applyMatrix4(a),p++}else if(b.isPointLight){const S=s.point[d];S.position.setFromMatrixPosition(b.matrixWorld),S.position.applyMatrix4(_),d++}else if(b.isHemisphereLight){const S=s.hemi[m];S.direction.setFromMatrixPosition(b.matrixWorld),S.direction.transformDirection(_),m++}}}return{setup:l,setupView:c,state:s}}function ju(i,t){const e=new Ib(i,t),n=[],s=[];function r(){n.length=0,s.length=0}function o(u){n.push(u)}function a(u){s.push(u)}function l(u){e.setup(n,u)}function c(u){e.setupView(n,u)}return{init:r,state:{lightsArray:n,shadowsArray:s,lights:e},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function Db(i,t){let e=new WeakMap;function n(r,o=0){const a=e.get(r);let l;return a===void 0?(l=new ju(i,t),e.set(r,[l])):o>=a.length?(l=new ju(i,t),a.push(l)):l=a[o],l}function s(){e=new WeakMap}return{get:n,dispose:s}}class Fb extends ei{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Fx,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class zb extends ei{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new I,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const Ob=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Nb=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Ub(i,t,e){let n=new Mc;const s=new xt,r=new xt,o=new ee,a=new Fb({depthPacking:zx}),l=new zb,c={},h=e.maxTextureSize,u={[pn]:He,[He]:pn,[Be]:Be},f=new Fe({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new xt},radius:{value:4}},vertexShader:Ob,fragmentShader:Nb}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const g=new fe;g.setAttribute("position",new Ve(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const p=new $t(g,f),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Jd,this.render=function(b,S,P){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||b.length===0)return;const D=i.getRenderTarget(),v=i.getActiveCubeFace(),A=i.getActiveMipmapLevel(),R=i.state;R.setBlending(gi),R.buffers.color.setClear(1,1,1,1),R.buffers.depth.setTest(!0),R.setScissorTest(!1);for(let j=0,Q=b.length;j<Q;j++){const k=b[j],O=k.shadow;if(O===void 0){console.warn("THREE.WebGLShadowMap:",k,"has no shadow.");continue}if(O.autoUpdate===!1&&O.needsUpdate===!1)continue;s.copy(O.mapSize);const J=O.getFrameExtents();if(s.multiply(J),r.copy(O.mapSize),(s.x>h||s.y>h)&&(s.x>h&&(r.x=Math.floor(h/J.x),s.x=r.x*J.x,O.mapSize.x=r.x),s.y>h&&(r.y=Math.floor(h/J.y),s.y=r.y*J.y,O.mapSize.y=r.y)),O.map===null){const it=this.type!==ir?{minFilter:Ee,magFilter:Ee}:{};O.map=new Xi(s.x,s.y,it),O.map.texture.name=k.name+".shadowMap",O.camera.updateProjectionMatrix()}i.setRenderTarget(O.map),i.clear();const Z=O.getViewportCount();for(let it=0;it<Z;it++){const Y=O.getViewport(it);o.set(r.x*Y.x,r.y*Y.y,r.x*Y.z,r.y*Y.w),R.viewport(o),O.updateMatrices(k,it),n=O.getFrustum(),x(S,P,O.camera,k,this.type)}O.isPointLightShadow!==!0&&this.type===ir&&_(O,P),O.needsUpdate=!1}m.needsUpdate=!1,i.setRenderTarget(D,v,A)};function _(b,S){const P=t.update(p);f.defines.VSM_SAMPLES!==b.blurSamples&&(f.defines.VSM_SAMPLES=b.blurSamples,d.defines.VSM_SAMPLES=b.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),b.mapPass===null&&(b.mapPass=new Xi(s.x,s.y)),f.uniforms.shadow_pass.value=b.map.texture,f.uniforms.resolution.value=b.mapSize,f.uniforms.radius.value=b.radius,i.setRenderTarget(b.mapPass),i.clear(),i.renderBufferDirect(S,null,P,f,p,null),d.uniforms.shadow_pass.value=b.mapPass.texture,d.uniforms.resolution.value=b.mapSize,d.uniforms.radius.value=b.radius,i.setRenderTarget(b.map),i.clear(),i.renderBufferDirect(S,null,P,d,p,null)}function w(b,S,P,D,v,A){let R=null;const j=P.isPointLight===!0?b.customDistanceMaterial:b.customDepthMaterial;if(j!==void 0)R=j;else if(R=P.isPointLight===!0?l:a,i.localClippingEnabled&&S.clipShadows===!0&&Array.isArray(S.clippingPlanes)&&S.clippingPlanes.length!==0||S.displacementMap&&S.displacementScale!==0||S.alphaMap&&S.alphaTest>0||S.map&&S.alphaTest>0){const Q=R.uuid,k=S.uuid;let O=c[Q];O===void 0&&(O={},c[Q]=O);let J=O[k];J===void 0&&(J=R.clone(),O[k]=J),R=J}return R.visible=S.visible,R.wireframe=S.wireframe,A===ir?R.side=S.shadowSide!==null?S.shadowSide:S.side:R.side=S.shadowSide!==null?S.shadowSide:u[S.side],R.alphaMap=S.alphaMap,R.alphaTest=S.alphaTest,R.map=S.map,R.clipShadows=S.clipShadows,R.clippingPlanes=S.clippingPlanes,R.clipIntersection=S.clipIntersection,R.displacementMap=S.displacementMap,R.displacementScale=S.displacementScale,R.displacementBias=S.displacementBias,R.wireframeLinewidth=S.wireframeLinewidth,R.linewidth=S.linewidth,P.isPointLight===!0&&R.isMeshDistanceMaterial===!0&&(R.referencePosition.setFromMatrixPosition(P.matrixWorld),R.nearDistance=D,R.farDistance=v),R}function x(b,S,P,D,v){if(b.visible===!1)return;if(b.layers.test(S.layers)&&(b.isMesh||b.isLine||b.isPoints)&&(b.castShadow||b.receiveShadow&&v===ir)&&(!b.frustumCulled||n.intersectsObject(b))){b.modelViewMatrix.multiplyMatrices(P.matrixWorldInverse,b.matrixWorld);const j=t.update(b),Q=b.material;if(Array.isArray(Q)){const k=j.groups;for(let O=0,J=k.length;O<J;O++){const Z=k[O],it=Q[Z.materialIndex];if(it&&it.visible){const Y=w(b,it,D,P.near,P.far,v);i.renderBufferDirect(P,null,j,Y,b,Z)}}}else if(Q.visible){const k=w(b,Q,D,P.near,P.far,v);i.renderBufferDirect(P,null,j,k,b,null)}}const R=b.children;for(let j=0,Q=R.length;j<Q;j++)x(R[j],S,P,D,v)}}function kb(i,t,e){const n=e.isWebGL2;function s(){let V=!1;const at=new ee;let _t=null;const Ct=new ee(0,0,0,0);return{setMask:function(Lt){_t!==Lt&&!V&&(i.colorMask(Lt,Lt,Lt,Lt),_t=Lt)},setLocked:function(Lt){V=Lt},setClear:function(Lt,ne,be,Pe,yi){yi===!0&&(Lt*=Pe,ne*=Pe,be*=Pe),at.set(Lt,ne,be,Pe),Ct.equals(at)===!1&&(i.clearColor(Lt,ne,be,Pe),Ct.copy(at))},reset:function(){V=!1,_t=null,Ct.set(-1,0,0,0)}}}function r(){let V=!1,at=null,_t=null,Ct=null;return{setTest:function(Lt){Lt?tt(2929):ct(2929)},setMask:function(Lt){at!==Lt&&!V&&(i.depthMask(Lt),at=Lt)},setFunc:function(Lt){if(_t!==Lt){switch(Lt){case ix:i.depthFunc(512);break;case sx:i.depthFunc(519);break;case rx:i.depthFunc(513);break;case zl:i.depthFunc(515);break;case ox:i.depthFunc(514);break;case ax:i.depthFunc(518);break;case lx:i.depthFunc(516);break;case cx:i.depthFunc(517);break;default:i.depthFunc(515)}_t=Lt}},setLocked:function(Lt){V=Lt},setClear:function(Lt){Ct!==Lt&&(i.clearDepth(Lt),Ct=Lt)},reset:function(){V=!1,at=null,_t=null,Ct=null}}}function o(){let V=!1,at=null,_t=null,Ct=null,Lt=null,ne=null,be=null,Pe=null,yi=null;return{setTest:function(le){V||(le?tt(2960):ct(2960))},setMask:function(le){at!==le&&!V&&(i.stencilMask(le),at=le)},setFunc:function(le,Un,nn){(_t!==le||Ct!==Un||Lt!==nn)&&(i.stencilFunc(le,Un,nn),_t=le,Ct=Un,Lt=nn)},setOp:function(le,Un,nn){(ne!==le||be!==Un||Pe!==nn)&&(i.stencilOp(le,Un,nn),ne=le,be=Un,Pe=nn)},setLocked:function(le){V=le},setClear:function(le){yi!==le&&(i.clearStencil(le),yi=le)},reset:function(){V=!1,at=null,_t=null,Ct=null,Lt=null,ne=null,be=null,Pe=null,yi=null}}}const a=new s,l=new r,c=new o,h=new WeakMap,u=new WeakMap;let f={},d={},g=new WeakMap,p=[],m=null,_=!1,w=null,x=null,b=null,S=null,P=null,D=null,v=null,A=!1,R=null,j=null,Q=null,k=null,O=null;const J=i.getParameter(35661);let Z=!1,it=0;const Y=i.getParameter(7938);Y.indexOf("WebGL")!==-1?(it=parseFloat(/^WebGL (\d)/.exec(Y)[1]),Z=it>=1):Y.indexOf("OpenGL ES")!==-1&&(it=parseFloat(/^OpenGL ES (\d)/.exec(Y)[1]),Z=it>=2);let ft=null,dt={};const yt=i.getParameter(3088),W=i.getParameter(2978),ot=new ee().fromArray(yt),vt=new ee().fromArray(W);function N(V,at,_t){const Ct=new Uint8Array(4),Lt=i.createTexture();i.bindTexture(V,Lt),i.texParameteri(V,10241,9728),i.texParameteri(V,10240,9728);for(let ne=0;ne<_t;ne++)i.texImage2D(at+ne,0,6408,1,1,0,6408,5121,Ct);return Lt}const z={};z[3553]=N(3553,3553,1),z[34067]=N(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),tt(2929),l.setFunc(zl),B(!1),et(Dh),tt(2884),F(gi);function tt(V){f[V]!==!0&&(i.enable(V),f[V]=!0)}function ct(V){f[V]!==!1&&(i.disable(V),f[V]=!1)}function gt(V,at){return d[V]!==at?(i.bindFramebuffer(V,at),d[V]=at,n&&(V===36009&&(d[36160]=at),V===36160&&(d[36009]=at)),!0):!1}function pt(V,at){let _t=p,Ct=!1;if(V)if(_t=g.get(at),_t===void 0&&(_t=[],g.set(at,_t)),V.isWebGLMultipleRenderTargets){const Lt=V.texture;if(_t.length!==Lt.length||_t[0]!==36064){for(let ne=0,be=Lt.length;ne<be;ne++)_t[ne]=36064+ne;_t.length=Lt.length,Ct=!0}}else _t[0]!==36064&&(_t[0]=36064,Ct=!0);else _t[0]!==1029&&(_t[0]=1029,Ct=!0);Ct&&(e.isWebGL2?i.drawBuffers(_t):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(_t))}function wt(V){return m!==V?(i.useProgram(V),m=V,!0):!1}const y={[ms]:32774,[j_]:32778,[q_]:32779};if(n)y[Nh]=32775,y[Uh]=32776;else{const V=t.get("EXT_blend_minmax");V!==null&&(y[Nh]=V.MIN_EXT,y[Uh]=V.MAX_EXT)}const T={[Y_]:0,[$_]:1,[Z_]:768,[tp]:770,[nx]:776,[tx]:774,[J_]:772,[K_]:769,[ep]:771,[ex]:775,[Q_]:773};function F(V,at,_t,Ct,Lt,ne,be,Pe){if(V===gi){_===!0&&(ct(3042),_=!1);return}if(_===!1&&(tt(3042),_=!0),V!==X_){if(V!==w||Pe!==A){if((x!==ms||P!==ms)&&(i.blendEquation(32774),x=ms,P=ms),Pe)switch(V){case Es:i.blendFuncSeparate(1,771,1,771);break;case Fh:i.blendFunc(1,1);break;case zh:i.blendFuncSeparate(0,769,0,1);break;case Oh:i.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}else switch(V){case Es:i.blendFuncSeparate(770,771,1,771);break;case Fh:i.blendFunc(770,1);break;case zh:i.blendFuncSeparate(0,769,0,1);break;case Oh:i.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}b=null,S=null,D=null,v=null,w=V,A=Pe}return}Lt=Lt||at,ne=ne||_t,be=be||Ct,(at!==x||Lt!==P)&&(i.blendEquationSeparate(y[at],y[Lt]),x=at,P=Lt),(_t!==b||Ct!==S||ne!==D||be!==v)&&(i.blendFuncSeparate(T[_t],T[Ct],T[ne],T[be]),b=_t,S=Ct,D=ne,v=be),w=V,A=!1}function H(V,at){V.side===Be?ct(2884):tt(2884);let _t=V.side===He;at&&(_t=!_t),B(_t),V.blending===Es&&V.transparent===!1?F(gi):F(V.blending,V.blendEquation,V.blendSrc,V.blendDst,V.blendEquationAlpha,V.blendSrcAlpha,V.blendDstAlpha,V.premultipliedAlpha),l.setFunc(V.depthFunc),l.setTest(V.depthTest),l.setMask(V.depthWrite),a.setMask(V.colorWrite);const Ct=V.stencilWrite;c.setTest(Ct),Ct&&(c.setMask(V.stencilWriteMask),c.setFunc(V.stencilFunc,V.stencilRef,V.stencilFuncMask),c.setOp(V.stencilFail,V.stencilZFail,V.stencilZPass)),$(V.polygonOffset,V.polygonOffsetFactor,V.polygonOffsetUnits),V.alphaToCoverage===!0?tt(32926):ct(32926)}function B(V){R!==V&&(V?i.frontFace(2304):i.frontFace(2305),R=V)}function et(V){V!==G_?(tt(2884),V!==j&&(V===Dh?i.cullFace(1029):V===W_?i.cullFace(1028):i.cullFace(1032))):ct(2884),j=V}function st(V){V!==Q&&(Z&&i.lineWidth(V),Q=V)}function $(V,at,_t){V?(tt(32823),(k!==at||O!==_t)&&(i.polygonOffset(at,_t),k=at,O=_t)):ct(32823)}function ut(V){V?tt(3089):ct(3089)}function nt(V){V===void 0&&(V=33984+J-1),ft!==V&&(i.activeTexture(V),ft=V)}function E(V,at,_t){_t===void 0&&(ft===null?_t=33984+J-1:_t=ft);let Ct=dt[_t];Ct===void 0&&(Ct={type:void 0,texture:void 0},dt[_t]=Ct),(Ct.type!==V||Ct.texture!==at)&&(ft!==_t&&(i.activeTexture(_t),ft=_t),i.bindTexture(V,at||z[V]),Ct.type=V,Ct.texture=at)}function M(){const V=dt[ft];V!==void 0&&V.type!==void 0&&(i.bindTexture(V.type,null),V.type=void 0,V.texture=void 0)}function U(){try{i.compressedTexImage2D.apply(i,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function K(){try{i.compressedTexImage3D.apply(i,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function rt(){try{i.texSubImage2D.apply(i,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function mt(){try{i.texSubImage3D.apply(i,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Mt(){try{i.compressedTexSubImage2D.apply(i,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function L(){try{i.compressedTexSubImage3D.apply(i,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function G(){try{i.texStorage2D.apply(i,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function bt(){try{i.texStorage3D.apply(i,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function At(){try{i.texImage2D.apply(i,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Tt(){try{i.texImage3D.apply(i,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Pt(V){ot.equals(V)===!1&&(i.scissor(V.x,V.y,V.z,V.w),ot.copy(V))}function Et(V){vt.equals(V)===!1&&(i.viewport(V.x,V.y,V.z,V.w),vt.copy(V))}function zt(V,at){let _t=u.get(at);_t===void 0&&(_t=new WeakMap,u.set(at,_t));let Ct=_t.get(V);Ct===void 0&&(Ct=i.getUniformBlockIndex(at,V.name),_t.set(V,Ct))}function Vt(V,at){const Ct=u.get(at).get(V);h.get(at)!==Ct&&(i.uniformBlockBinding(at,Ct,V.__bindingPointIndex),h.set(at,Ct))}function re(){i.disable(3042),i.disable(2884),i.disable(2929),i.disable(32823),i.disable(3089),i.disable(2960),i.disable(32926),i.blendEquation(32774),i.blendFunc(1,0),i.blendFuncSeparate(1,0,1,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(513),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(519,0,4294967295),i.stencilOp(7680,7680,7680),i.clearStencil(0),i.cullFace(1029),i.frontFace(2305),i.polygonOffset(0,0),i.activeTexture(33984),i.bindFramebuffer(36160,null),n===!0&&(i.bindFramebuffer(36009,null),i.bindFramebuffer(36008,null)),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),f={},ft=null,dt={},d={},g=new WeakMap,p=[],m=null,_=!1,w=null,x=null,b=null,S=null,P=null,D=null,v=null,A=!1,R=null,j=null,Q=null,k=null,O=null,ot.set(0,0,i.canvas.width,i.canvas.height),vt.set(0,0,i.canvas.width,i.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:tt,disable:ct,bindFramebuffer:gt,drawBuffers:pt,useProgram:wt,setBlending:F,setMaterial:H,setFlipSided:B,setCullFace:et,setLineWidth:st,setPolygonOffset:$,setScissorTest:ut,activeTexture:nt,bindTexture:E,unbindTexture:M,compressedTexImage2D:U,compressedTexImage3D:K,texImage2D:At,texImage3D:Tt,updateUBOMapping:zt,uniformBlockBinding:Vt,texStorage2D:G,texStorage3D:bt,texSubImage2D:rt,texSubImage3D:mt,compressedTexSubImage2D:Mt,compressedTexSubImage3D:L,scissor:Pt,viewport:Et,reset:re}}function Bb(i,t,e,n,s,r,o){const a=s.isWebGL2,l=s.maxTextures,c=s.maxCubemapSize,h=s.maxTextureSize,u=s.maxSamples,f=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,d=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap;let p;const m=new WeakMap;let _=!1;try{_=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function w(E,M){return _?new OffscreenCanvas(E,M):Cr("canvas")}function x(E,M,U,K){let rt=1;if((E.width>K||E.height>K)&&(rt=K/Math.max(E.width,E.height)),rt<1||M===!0)if(typeof HTMLImageElement<"u"&&E instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&E instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&E instanceof ImageBitmap){const mt=M?Vo:Math.floor,Mt=mt(rt*E.width),L=mt(rt*E.height);p===void 0&&(p=w(Mt,L));const G=U?w(Mt,L):p;return G.width=Mt,G.height=L,G.getContext("2d").drawImage(E,0,0,Mt,L),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+E.width+"x"+E.height+") to ("+Mt+"x"+L+")."),G}else return"data"in E&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+E.width+"x"+E.height+")."),E;return E}function b(E){return kl(E.width)&&kl(E.height)}function S(E){return a?!1:E.wrapS!==tn||E.wrapT!==tn||E.minFilter!==Ee&&E.minFilter!==on}function P(E,M){return E.generateMipmaps&&M&&E.minFilter!==Ee&&E.minFilter!==on}function D(E){i.generateMipmap(E)}function v(E,M,U,K,rt=!1){if(a===!1)return M;if(E!==null){if(i[E]!==void 0)return i[E];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+E+"'")}let mt=M;return M===6403&&(U===5126&&(mt=33326),U===5131&&(mt=33325),U===5121&&(mt=33321)),M===33319&&(U===5126&&(mt=33328),U===5131&&(mt=33327),U===5121&&(mt=33323)),M===6408&&(U===5126&&(mt=34836),U===5131&&(mt=34842),U===5121&&(mt=K===ie&&rt===!1?35907:32856),U===32819&&(mt=32854),U===32820&&(mt=32855)),(mt===33325||mt===33326||mt===33327||mt===33328||mt===34842||mt===34836)&&t.get("EXT_color_buffer_float"),mt}function A(E,M,U){return P(E,U)===!0||E.isFramebufferTexture&&E.minFilter!==Ee&&E.minFilter!==on?Math.log2(Math.max(M.width,M.height))+1:E.mipmaps!==void 0&&E.mipmaps.length>0?E.mipmaps.length:E.isCompressedTexture&&Array.isArray(E.image)?M.mipmaps.length:1}function R(E){return E===Ee||E===kh||E===Ta?9728:9729}function j(E){const M=E.target;M.removeEventListener("dispose",j),k(M),M.isVideoTexture&&g.delete(M)}function Q(E){const M=E.target;M.removeEventListener("dispose",Q),J(M)}function k(E){const M=n.get(E);if(M.__webglInit===void 0)return;const U=E.source,K=m.get(U);if(K){const rt=K[M.__cacheKey];rt.usedTimes--,rt.usedTimes===0&&O(E),Object.keys(K).length===0&&m.delete(U)}n.remove(E)}function O(E){const M=n.get(E);i.deleteTexture(M.__webglTexture);const U=E.source,K=m.get(U);delete K[M.__cacheKey],o.memory.textures--}function J(E){const M=E.texture,U=n.get(E),K=n.get(M);if(K.__webglTexture!==void 0&&(i.deleteTexture(K.__webglTexture),o.memory.textures--),E.depthTexture&&E.depthTexture.dispose(),E.isWebGLCubeRenderTarget)for(let rt=0;rt<6;rt++)i.deleteFramebuffer(U.__webglFramebuffer[rt]),U.__webglDepthbuffer&&i.deleteRenderbuffer(U.__webglDepthbuffer[rt]);else{if(i.deleteFramebuffer(U.__webglFramebuffer),U.__webglDepthbuffer&&i.deleteRenderbuffer(U.__webglDepthbuffer),U.__webglMultisampledFramebuffer&&i.deleteFramebuffer(U.__webglMultisampledFramebuffer),U.__webglColorRenderbuffer)for(let rt=0;rt<U.__webglColorRenderbuffer.length;rt++)U.__webglColorRenderbuffer[rt]&&i.deleteRenderbuffer(U.__webglColorRenderbuffer[rt]);U.__webglDepthRenderbuffer&&i.deleteRenderbuffer(U.__webglDepthRenderbuffer)}if(E.isWebGLMultipleRenderTargets)for(let rt=0,mt=M.length;rt<mt;rt++){const Mt=n.get(M[rt]);Mt.__webglTexture&&(i.deleteTexture(Mt.__webglTexture),o.memory.textures--),n.remove(M[rt])}n.remove(M),n.remove(E)}let Z=0;function it(){Z=0}function Y(){const E=Z;return E>=l&&console.warn("THREE.WebGLTextures: Trying to use "+E+" texture units while this GPU supports only "+l),Z+=1,E}function ft(E){const M=[];return M.push(E.wrapS),M.push(E.wrapT),M.push(E.wrapR||0),M.push(E.magFilter),M.push(E.minFilter),M.push(E.anisotropy),M.push(E.internalFormat),M.push(E.format),M.push(E.type),M.push(E.generateMipmaps),M.push(E.premultiplyAlpha),M.push(E.flipY),M.push(E.unpackAlignment),M.push(E.encoding),M.join()}function dt(E,M){const U=n.get(E);if(E.isVideoTexture&&ut(E),E.isRenderTargetTexture===!1&&E.version>0&&U.__version!==E.version){const K=E.image;if(K===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(K.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ct(U,E,M);return}}e.bindTexture(3553,U.__webglTexture,33984+M)}function yt(E,M){const U=n.get(E);if(E.version>0&&U.__version!==E.version){ct(U,E,M);return}e.bindTexture(35866,U.__webglTexture,33984+M)}function W(E,M){const U=n.get(E);if(E.version>0&&U.__version!==E.version){ct(U,E,M);return}e.bindTexture(32879,U.__webglTexture,33984+M)}function ot(E,M){const U=n.get(E);if(E.version>0&&U.__version!==E.version){gt(U,E,M);return}e.bindTexture(34067,U.__webglTexture,33984+M)}const vt={[br]:10497,[tn]:33071,[Nl]:33648},N={[Ee]:9728,[kh]:9984,[Ta]:9986,[on]:9729,[_x]:9985,[Sr]:9987};function z(E,M,U){if(U?(i.texParameteri(E,10242,vt[M.wrapS]),i.texParameteri(E,10243,vt[M.wrapT]),(E===32879||E===35866)&&i.texParameteri(E,32882,vt[M.wrapR]),i.texParameteri(E,10240,N[M.magFilter]),i.texParameteri(E,10241,N[M.minFilter])):(i.texParameteri(E,10242,33071),i.texParameteri(E,10243,33071),(E===32879||E===35866)&&i.texParameteri(E,32882,33071),(M.wrapS!==tn||M.wrapT!==tn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),i.texParameteri(E,10240,R(M.magFilter)),i.texParameteri(E,10241,R(M.minFilter)),M.minFilter!==Ee&&M.minFilter!==on&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),t.has("EXT_texture_filter_anisotropic")===!0){const K=t.get("EXT_texture_filter_anisotropic");if(M.magFilter===Ee||M.minFilter!==Ta&&M.minFilter!==Sr||M.type===fi&&t.has("OES_texture_float_linear")===!1||a===!1&&M.type===Tr&&t.has("OES_texture_half_float_linear")===!1)return;(M.anisotropy>1||n.get(M).__currentAnisotropy)&&(i.texParameterf(E,K.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(M.anisotropy,s.getMaxAnisotropy())),n.get(M).__currentAnisotropy=M.anisotropy)}}function tt(E,M){let U=!1;E.__webglInit===void 0&&(E.__webglInit=!0,M.addEventListener("dispose",j));const K=M.source;let rt=m.get(K);rt===void 0&&(rt={},m.set(K,rt));const mt=ft(M);if(mt!==E.__cacheKey){rt[mt]===void 0&&(rt[mt]={texture:i.createTexture(),usedTimes:0},o.memory.textures++,U=!0),rt[mt].usedTimes++;const Mt=rt[E.__cacheKey];Mt!==void 0&&(rt[E.__cacheKey].usedTimes--,Mt.usedTimes===0&&O(M)),E.__cacheKey=mt,E.__webglTexture=rt[mt].texture}return U}function ct(E,M,U){let K=3553;(M.isDataArrayTexture||M.isCompressedArrayTexture)&&(K=35866),M.isData3DTexture&&(K=32879);const rt=tt(E,M),mt=M.source;e.bindTexture(K,E.__webglTexture,33984+U);const Mt=n.get(mt);if(mt.version!==Mt.__version||rt===!0){e.activeTexture(33984+U),i.pixelStorei(37440,M.flipY),i.pixelStorei(37441,M.premultiplyAlpha),i.pixelStorei(3317,M.unpackAlignment),i.pixelStorei(37443,0);const L=S(M)&&b(M.image)===!1;let G=x(M.image,L,!1,h);G=nt(M,G);const bt=b(G)||a,At=r.convert(M.format,M.encoding);let Tt=r.convert(M.type),Pt=v(M.internalFormat,At,Tt,M.encoding,M.isVideoTexture);z(K,M,bt);let Et;const zt=M.mipmaps,Vt=a&&M.isVideoTexture!==!0,re=Mt.__version===void 0||rt===!0,V=A(M,G,bt);if(M.isDepthTexture)Pt=6402,a?M.type===fi?Pt=36012:M.type===Ni?Pt=33190:M.type===As?Pt=35056:Pt=33189:M.type===fi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),M.format===Bi&&Pt===6402&&M.type!==ip&&M.type!==Ni&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),M.type=Ni,Tt=r.convert(M.type)),M.format===Os&&Pt===6402&&(Pt=34041,M.type!==As&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),M.type=As,Tt=r.convert(M.type))),re&&(Vt?e.texStorage2D(3553,1,Pt,G.width,G.height):e.texImage2D(3553,0,Pt,G.width,G.height,0,At,Tt,null));else if(M.isDataTexture)if(zt.length>0&&bt){Vt&&re&&e.texStorage2D(3553,V,Pt,zt[0].width,zt[0].height);for(let at=0,_t=zt.length;at<_t;at++)Et=zt[at],Vt?e.texSubImage2D(3553,at,0,0,Et.width,Et.height,At,Tt,Et.data):e.texImage2D(3553,at,Pt,Et.width,Et.height,0,At,Tt,Et.data);M.generateMipmaps=!1}else Vt?(re&&e.texStorage2D(3553,V,Pt,G.width,G.height),e.texSubImage2D(3553,0,0,0,G.width,G.height,At,Tt,G.data)):e.texImage2D(3553,0,Pt,G.width,G.height,0,At,Tt,G.data);else if(M.isCompressedTexture)if(M.isCompressedArrayTexture){Vt&&re&&e.texStorage3D(35866,V,Pt,zt[0].width,zt[0].height,G.depth);for(let at=0,_t=zt.length;at<_t;at++)Et=zt[at],M.format!==ln?At!==null?Vt?e.compressedTexSubImage3D(35866,at,0,0,0,Et.width,Et.height,G.depth,At,Et.data,0,0):e.compressedTexImage3D(35866,at,Pt,Et.width,Et.height,G.depth,0,Et.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Vt?e.texSubImage3D(35866,at,0,0,0,Et.width,Et.height,G.depth,At,Tt,Et.data):e.texImage3D(35866,at,Pt,Et.width,Et.height,G.depth,0,At,Tt,Et.data)}else{Vt&&re&&e.texStorage2D(3553,V,Pt,zt[0].width,zt[0].height);for(let at=0,_t=zt.length;at<_t;at++)Et=zt[at],M.format!==ln?At!==null?Vt?e.compressedTexSubImage2D(3553,at,0,0,Et.width,Et.height,At,Et.data):e.compressedTexImage2D(3553,at,Pt,Et.width,Et.height,0,Et.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Vt?e.texSubImage2D(3553,at,0,0,Et.width,Et.height,At,Tt,Et.data):e.texImage2D(3553,at,Pt,Et.width,Et.height,0,At,Tt,Et.data)}else if(M.isDataArrayTexture)Vt?(re&&e.texStorage3D(35866,V,Pt,G.width,G.height,G.depth),e.texSubImage3D(35866,0,0,0,0,G.width,G.height,G.depth,At,Tt,G.data)):e.texImage3D(35866,0,Pt,G.width,G.height,G.depth,0,At,Tt,G.data);else if(M.isData3DTexture)Vt?(re&&e.texStorage3D(32879,V,Pt,G.width,G.height,G.depth),e.texSubImage3D(32879,0,0,0,0,G.width,G.height,G.depth,At,Tt,G.data)):e.texImage3D(32879,0,Pt,G.width,G.height,G.depth,0,At,Tt,G.data);else if(M.isFramebufferTexture){if(re)if(Vt)e.texStorage2D(3553,V,Pt,G.width,G.height);else{let at=G.width,_t=G.height;for(let Ct=0;Ct<V;Ct++)e.texImage2D(3553,Ct,Pt,at,_t,0,At,Tt,null),at>>=1,_t>>=1}}else if(zt.length>0&&bt){Vt&&re&&e.texStorage2D(3553,V,Pt,zt[0].width,zt[0].height);for(let at=0,_t=zt.length;at<_t;at++)Et=zt[at],Vt?e.texSubImage2D(3553,at,0,0,At,Tt,Et):e.texImage2D(3553,at,Pt,At,Tt,Et);M.generateMipmaps=!1}else Vt?(re&&e.texStorage2D(3553,V,Pt,G.width,G.height),e.texSubImage2D(3553,0,0,0,At,Tt,G)):e.texImage2D(3553,0,Pt,At,Tt,G);P(M,bt)&&D(K),Mt.__version=mt.version,M.onUpdate&&M.onUpdate(M)}E.__version=M.version}function gt(E,M,U){if(M.image.length!==6)return;const K=tt(E,M),rt=M.source;e.bindTexture(34067,E.__webglTexture,33984+U);const mt=n.get(rt);if(rt.version!==mt.__version||K===!0){e.activeTexture(33984+U),i.pixelStorei(37440,M.flipY),i.pixelStorei(37441,M.premultiplyAlpha),i.pixelStorei(3317,M.unpackAlignment),i.pixelStorei(37443,0);const Mt=M.isCompressedTexture||M.image[0].isCompressedTexture,L=M.image[0]&&M.image[0].isDataTexture,G=[];for(let at=0;at<6;at++)!Mt&&!L?G[at]=x(M.image[at],!1,!0,c):G[at]=L?M.image[at].image:M.image[at],G[at]=nt(M,G[at]);const bt=G[0],At=b(bt)||a,Tt=r.convert(M.format,M.encoding),Pt=r.convert(M.type),Et=v(M.internalFormat,Tt,Pt,M.encoding),zt=a&&M.isVideoTexture!==!0,Vt=mt.__version===void 0||K===!0;let re=A(M,bt,At);z(34067,M,At);let V;if(Mt){zt&&Vt&&e.texStorage2D(34067,re,Et,bt.width,bt.height);for(let at=0;at<6;at++){V=G[at].mipmaps;for(let _t=0;_t<V.length;_t++){const Ct=V[_t];M.format!==ln?Tt!==null?zt?e.compressedTexSubImage2D(34069+at,_t,0,0,Ct.width,Ct.height,Tt,Ct.data):e.compressedTexImage2D(34069+at,_t,Et,Ct.width,Ct.height,0,Ct.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):zt?e.texSubImage2D(34069+at,_t,0,0,Ct.width,Ct.height,Tt,Pt,Ct.data):e.texImage2D(34069+at,_t,Et,Ct.width,Ct.height,0,Tt,Pt,Ct.data)}}}else{V=M.mipmaps,zt&&Vt&&(V.length>0&&re++,e.texStorage2D(34067,re,Et,G[0].width,G[0].height));for(let at=0;at<6;at++)if(L){zt?e.texSubImage2D(34069+at,0,0,0,G[at].width,G[at].height,Tt,Pt,G[at].data):e.texImage2D(34069+at,0,Et,G[at].width,G[at].height,0,Tt,Pt,G[at].data);for(let _t=0;_t<V.length;_t++){const Lt=V[_t].image[at].image;zt?e.texSubImage2D(34069+at,_t+1,0,0,Lt.width,Lt.height,Tt,Pt,Lt.data):e.texImage2D(34069+at,_t+1,Et,Lt.width,Lt.height,0,Tt,Pt,Lt.data)}}else{zt?e.texSubImage2D(34069+at,0,0,0,Tt,Pt,G[at]):e.texImage2D(34069+at,0,Et,Tt,Pt,G[at]);for(let _t=0;_t<V.length;_t++){const Ct=V[_t];zt?e.texSubImage2D(34069+at,_t+1,0,0,Tt,Pt,Ct.image[at]):e.texImage2D(34069+at,_t+1,Et,Tt,Pt,Ct.image[at])}}}P(M,At)&&D(34067),mt.__version=rt.version,M.onUpdate&&M.onUpdate(M)}E.__version=M.version}function pt(E,M,U,K,rt){const mt=r.convert(U.format,U.encoding),Mt=r.convert(U.type),L=v(U.internalFormat,mt,Mt,U.encoding);n.get(M).__hasExternalTextures||(rt===32879||rt===35866?e.texImage3D(rt,0,L,M.width,M.height,M.depth,0,mt,Mt,null):e.texImage2D(rt,0,L,M.width,M.height,0,mt,Mt,null)),e.bindFramebuffer(36160,E),$(M)?f.framebufferTexture2DMultisampleEXT(36160,K,rt,n.get(U).__webglTexture,0,st(M)):(rt===3553||rt>=34069&&rt<=34074)&&i.framebufferTexture2D(36160,K,rt,n.get(U).__webglTexture,0),e.bindFramebuffer(36160,null)}function wt(E,M,U){if(i.bindRenderbuffer(36161,E),M.depthBuffer&&!M.stencilBuffer){let K=33189;if(U||$(M)){const rt=M.depthTexture;rt&&rt.isDepthTexture&&(rt.type===fi?K=36012:rt.type===Ni&&(K=33190));const mt=st(M);$(M)?f.renderbufferStorageMultisampleEXT(36161,mt,K,M.width,M.height):i.renderbufferStorageMultisample(36161,mt,K,M.width,M.height)}else i.renderbufferStorage(36161,K,M.width,M.height);i.framebufferRenderbuffer(36160,36096,36161,E)}else if(M.depthBuffer&&M.stencilBuffer){const K=st(M);U&&$(M)===!1?i.renderbufferStorageMultisample(36161,K,35056,M.width,M.height):$(M)?f.renderbufferStorageMultisampleEXT(36161,K,35056,M.width,M.height):i.renderbufferStorage(36161,34041,M.width,M.height),i.framebufferRenderbuffer(36160,33306,36161,E)}else{const K=M.isWebGLMultipleRenderTargets===!0?M.texture:[M.texture];for(let rt=0;rt<K.length;rt++){const mt=K[rt],Mt=r.convert(mt.format,mt.encoding),L=r.convert(mt.type),G=v(mt.internalFormat,Mt,L,mt.encoding),bt=st(M);U&&$(M)===!1?i.renderbufferStorageMultisample(36161,bt,G,M.width,M.height):$(M)?f.renderbufferStorageMultisampleEXT(36161,bt,G,M.width,M.height):i.renderbufferStorage(36161,G,M.width,M.height)}}i.bindRenderbuffer(36161,null)}function y(E,M){if(M&&M.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,E),!(M.depthTexture&&M.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(M.depthTexture).__webglTexture||M.depthTexture.image.width!==M.width||M.depthTexture.image.height!==M.height)&&(M.depthTexture.image.width=M.width,M.depthTexture.image.height=M.height,M.depthTexture.needsUpdate=!0),dt(M.depthTexture,0);const K=n.get(M.depthTexture).__webglTexture,rt=st(M);if(M.depthTexture.format===Bi)$(M)?f.framebufferTexture2DMultisampleEXT(36160,36096,3553,K,0,rt):i.framebufferTexture2D(36160,36096,3553,K,0);else if(M.depthTexture.format===Os)$(M)?f.framebufferTexture2DMultisampleEXT(36160,33306,3553,K,0,rt):i.framebufferTexture2D(36160,33306,3553,K,0);else throw new Error("Unknown depthTexture format")}function T(E){const M=n.get(E),U=E.isWebGLCubeRenderTarget===!0;if(E.depthTexture&&!M.__autoAllocateDepthBuffer){if(U)throw new Error("target.depthTexture not supported in Cube render targets");y(M.__webglFramebuffer,E)}else if(U){M.__webglDepthbuffer=[];for(let K=0;K<6;K++)e.bindFramebuffer(36160,M.__webglFramebuffer[K]),M.__webglDepthbuffer[K]=i.createRenderbuffer(),wt(M.__webglDepthbuffer[K],E,!1)}else e.bindFramebuffer(36160,M.__webglFramebuffer),M.__webglDepthbuffer=i.createRenderbuffer(),wt(M.__webglDepthbuffer,E,!1);e.bindFramebuffer(36160,null)}function F(E,M,U){const K=n.get(E);M!==void 0&&pt(K.__webglFramebuffer,E,E.texture,36064,3553),U!==void 0&&T(E)}function H(E){const M=E.texture,U=n.get(E),K=n.get(M);E.addEventListener("dispose",Q),E.isWebGLMultipleRenderTargets!==!0&&(K.__webglTexture===void 0&&(K.__webglTexture=i.createTexture()),K.__version=M.version,o.memory.textures++);const rt=E.isWebGLCubeRenderTarget===!0,mt=E.isWebGLMultipleRenderTargets===!0,Mt=b(E)||a;if(rt){U.__webglFramebuffer=[];for(let L=0;L<6;L++)U.__webglFramebuffer[L]=i.createFramebuffer()}else{if(U.__webglFramebuffer=i.createFramebuffer(),mt)if(s.drawBuffers){const L=E.texture;for(let G=0,bt=L.length;G<bt;G++){const At=n.get(L[G]);At.__webglTexture===void 0&&(At.__webglTexture=i.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&E.samples>0&&$(E)===!1){const L=mt?M:[M];U.__webglMultisampledFramebuffer=i.createFramebuffer(),U.__webglColorRenderbuffer=[],e.bindFramebuffer(36160,U.__webglMultisampledFramebuffer);for(let G=0;G<L.length;G++){const bt=L[G];U.__webglColorRenderbuffer[G]=i.createRenderbuffer(),i.bindRenderbuffer(36161,U.__webglColorRenderbuffer[G]);const At=r.convert(bt.format,bt.encoding),Tt=r.convert(bt.type),Pt=v(bt.internalFormat,At,Tt,bt.encoding,E.isXRRenderTarget===!0),Et=st(E);i.renderbufferStorageMultisample(36161,Et,Pt,E.width,E.height),i.framebufferRenderbuffer(36160,36064+G,36161,U.__webglColorRenderbuffer[G])}i.bindRenderbuffer(36161,null),E.depthBuffer&&(U.__webglDepthRenderbuffer=i.createRenderbuffer(),wt(U.__webglDepthRenderbuffer,E,!0)),e.bindFramebuffer(36160,null)}}if(rt){e.bindTexture(34067,K.__webglTexture),z(34067,M,Mt);for(let L=0;L<6;L++)pt(U.__webglFramebuffer[L],E,M,36064,34069+L);P(M,Mt)&&D(34067),e.unbindTexture()}else if(mt){const L=E.texture;for(let G=0,bt=L.length;G<bt;G++){const At=L[G],Tt=n.get(At);e.bindTexture(3553,Tt.__webglTexture),z(3553,At,Mt),pt(U.__webglFramebuffer,E,At,36064+G,3553),P(At,Mt)&&D(3553)}e.unbindTexture()}else{let L=3553;(E.isWebGL3DRenderTarget||E.isWebGLArrayRenderTarget)&&(a?L=E.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),e.bindTexture(L,K.__webglTexture),z(L,M,Mt),pt(U.__webglFramebuffer,E,M,36064,L),P(M,Mt)&&D(L),e.unbindTexture()}E.depthBuffer&&T(E)}function B(E){const M=b(E)||a,U=E.isWebGLMultipleRenderTargets===!0?E.texture:[E.texture];for(let K=0,rt=U.length;K<rt;K++){const mt=U[K];if(P(mt,M)){const Mt=E.isWebGLCubeRenderTarget?34067:3553,L=n.get(mt).__webglTexture;e.bindTexture(Mt,L),D(Mt),e.unbindTexture()}}}function et(E){if(a&&E.samples>0&&$(E)===!1){const M=E.isWebGLMultipleRenderTargets?E.texture:[E.texture],U=E.width,K=E.height;let rt=16384;const mt=[],Mt=E.stencilBuffer?33306:36096,L=n.get(E),G=E.isWebGLMultipleRenderTargets===!0;if(G)for(let bt=0;bt<M.length;bt++)e.bindFramebuffer(36160,L.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(36160,36064+bt,36161,null),e.bindFramebuffer(36160,L.__webglFramebuffer),i.framebufferTexture2D(36009,36064+bt,3553,null,0);e.bindFramebuffer(36008,L.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,L.__webglFramebuffer);for(let bt=0;bt<M.length;bt++){mt.push(36064+bt),E.depthBuffer&&mt.push(Mt);const At=L.__ignoreDepthValues!==void 0?L.__ignoreDepthValues:!1;if(At===!1&&(E.depthBuffer&&(rt|=256),E.stencilBuffer&&(rt|=1024)),G&&i.framebufferRenderbuffer(36008,36064,36161,L.__webglColorRenderbuffer[bt]),At===!0&&(i.invalidateFramebuffer(36008,[Mt]),i.invalidateFramebuffer(36009,[Mt])),G){const Tt=n.get(M[bt]).__webglTexture;i.framebufferTexture2D(36009,36064,3553,Tt,0)}i.blitFramebuffer(0,0,U,K,0,0,U,K,rt,9728),d&&i.invalidateFramebuffer(36008,mt)}if(e.bindFramebuffer(36008,null),e.bindFramebuffer(36009,null),G)for(let bt=0;bt<M.length;bt++){e.bindFramebuffer(36160,L.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(36160,36064+bt,36161,L.__webglColorRenderbuffer[bt]);const At=n.get(M[bt]).__webglTexture;e.bindFramebuffer(36160,L.__webglFramebuffer),i.framebufferTexture2D(36009,36064+bt,3553,At,0)}e.bindFramebuffer(36009,L.__webglMultisampledFramebuffer)}}function st(E){return Math.min(u,E.samples)}function $(E){const M=n.get(E);return a&&E.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&M.__useRenderToTexture!==!1}function ut(E){const M=o.render.frame;g.get(E)!==M&&(g.set(E,M),E.update())}function nt(E,M){const U=E.encoding,K=E.format,rt=E.type;return E.isCompressedTexture===!0||E.isVideoTexture===!0||E.format===Ul||U!==Wi&&(U===ie?a===!1?t.has("EXT_sRGB")===!0&&K===ln?(E.format=Ul,E.minFilter=on,E.generateMipmaps=!1):M=ap.sRGBToLinear(M):(K!==ln||rt!==Gi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",U)),M}this.allocateTextureUnit=Y,this.resetTextureUnits=it,this.setTexture2D=dt,this.setTexture2DArray=yt,this.setTexture3D=W,this.setTextureCube=ot,this.rebindTextures=F,this.setupRenderTarget=H,this.updateRenderTargetMipmap=B,this.updateMultisampleRenderTarget=et,this.setupDepthRenderbuffer=T,this.setupFrameBufferTexture=pt,this.useMultisampledRTT=$}function Vb(i,t,e){const n=e.isWebGL2;function s(r,o=null){let a;if(r===Gi)return 5121;if(r===wx)return 32819;if(r===Mx)return 32820;if(r===xx)return 5120;if(r===vx)return 5122;if(r===ip)return 5123;if(r===yx)return 5124;if(r===Ni)return 5125;if(r===fi)return 5126;if(r===Tr)return n?5131:(a=t.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(r===bx)return 6406;if(r===ln)return 6408;if(r===Sx)return 6409;if(r===Tx)return 6410;if(r===Bi)return 6402;if(r===Os)return 34041;if(r===Ul)return a=t.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(r===Ex)return 6403;if(r===Ax)return 36244;if(r===Cx)return 33319;if(r===Px)return 33320;if(r===Lx)return 36249;if(r===Ea||r===Aa||r===Ca||r===Pa)if(o===ie)if(a=t.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(r===Ea)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===Aa)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===Ca)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===Pa)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=t.get("WEBGL_compressed_texture_s3tc"),a!==null){if(r===Ea)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Aa)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===Ca)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===Pa)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===Bh||r===Vh||r===Hh||r===Gh)if(a=t.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(r===Bh)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===Vh)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===Hh)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===Gh)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===Rx)return a=t.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===Wh||r===Xh)if(a=t.get("WEBGL_compressed_texture_etc"),a!==null){if(r===Wh)return o===ie?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(r===Xh)return o===ie?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===jh||r===qh||r===Yh||r===$h||r===Zh||r===Kh||r===Jh||r===Qh||r===tu||r===eu||r===nu||r===iu||r===su||r===ru)if(a=t.get("WEBGL_compressed_texture_astc"),a!==null){if(r===jh)return o===ie?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===qh)return o===ie?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===Yh)return o===ie?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===$h)return o===ie?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===Zh)return o===ie?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===Kh)return o===ie?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===Jh)return o===ie?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===Qh)return o===ie?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===tu)return o===ie?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===eu)return o===ie?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===nu)return o===ie?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===iu)return o===ie?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===su)return o===ie?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===ru)return o===ie?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===La)if(a=t.get("EXT_texture_compression_bptc"),a!==null){if(r===La)return o===ie?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(r===Ix||r===ou||r===au||r===lu)if(a=t.get("EXT_texture_compression_rgtc"),a!==null){if(r===La)return a.COMPRESSED_RED_RGTC1_EXT;if(r===ou)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===au)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===lu)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===As?n?34042:(a=t.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):i[r]!==void 0?i[r]:null}return{convert:s}}class Hb extends ke{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}let de=class extends oe{constructor(){super(),this.isGroup=!0,this.type="Group"}};const Gb={type:"move"};class nl{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new de,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new de,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new I,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new I),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new de,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new I,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new I),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let s=null,r=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(c&&t.hand){o=!0;for(const p of t.hand.values()){const m=e.getJointPose(p,n),_=this._getHandJoint(c,p);m!==null&&(_.matrix.fromArray(m.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.jointRadius=m.radius),_.visible=m!==null}const h=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],f=h.position.distanceTo(u.position),d=.02,g=.005;c.inputState.pinching&&f>d+g?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&f<=d-g&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else l!==null&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(s=e.getPose(t.targetRaySpace,n),s===null&&r!==null&&(s=r),s!==null&&(a.matrix.fromArray(s.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),s.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(s.linearVelocity)):a.hasLinearVelocity=!1,s.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(s.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(Gb)))}return a!==null&&(a.visible=s!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new de;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class Wb extends Ce{constructor(t,e,n,s,r,o,a,l,c,h){if(h=h!==void 0?h:Bi,h!==Bi&&h!==Os)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&h===Bi&&(n=Ni),n===void 0&&h===Os&&(n=As),super(null,s,r,o,a,l,h,n,c),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=a!==void 0?a:Ee,this.minFilter=l!==void 0?l:Ee,this.flipY=!1,this.generateMipmaps=!1}}class Xb extends qi{constructor(t,e){super();const n=this;let s=null,r=1,o=null,a="local-floor",l=1,c=null,h=null,u=null,f=null,d=null,g=null;const p=e.getContextAttributes();let m=null,_=null;const w=[],x=[],b=new Set,S=new Map,P=new ke;P.layers.enable(1),P.viewport=new ee;const D=new ke;D.layers.enable(2),D.viewport=new ee;const v=[P,D],A=new Hb;A.layers.enable(1),A.layers.enable(2);let R=null,j=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(W){let ot=w[W];return ot===void 0&&(ot=new nl,w[W]=ot),ot.getTargetRaySpace()},this.getControllerGrip=function(W){let ot=w[W];return ot===void 0&&(ot=new nl,w[W]=ot),ot.getGripSpace()},this.getHand=function(W){let ot=w[W];return ot===void 0&&(ot=new nl,w[W]=ot),ot.getHandSpace()};function Q(W){const ot=x.indexOf(W.inputSource);if(ot===-1)return;const vt=w[ot];vt!==void 0&&vt.dispatchEvent({type:W.type,data:W.inputSource})}function k(){s.removeEventListener("select",Q),s.removeEventListener("selectstart",Q),s.removeEventListener("selectend",Q),s.removeEventListener("squeeze",Q),s.removeEventListener("squeezestart",Q),s.removeEventListener("squeezeend",Q),s.removeEventListener("end",k),s.removeEventListener("inputsourceschange",O);for(let W=0;W<w.length;W++){const ot=x[W];ot!==null&&(x[W]=null,w[W].disconnect(ot))}R=null,j=null,t.setRenderTarget(m),d=null,f=null,u=null,s=null,_=null,yt.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(W){r=W,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(W){a=W,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(W){c=W},this.getBaseLayer=function(){return f!==null?f:d},this.getBinding=function(){return u},this.getFrame=function(){return g},this.getSession=function(){return s},this.setSession=async function(W){if(s=W,s!==null){if(m=t.getRenderTarget(),s.addEventListener("select",Q),s.addEventListener("selectstart",Q),s.addEventListener("selectend",Q),s.addEventListener("squeeze",Q),s.addEventListener("squeezestart",Q),s.addEventListener("squeezeend",Q),s.addEventListener("end",k),s.addEventListener("inputsourceschange",O),p.xrCompatible!==!0&&await e.makeXRCompatible(),s.renderState.layers===void 0||t.capabilities.isWebGL2===!1){const ot={antialias:s.renderState.layers===void 0?p.antialias:!0,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(s,e,ot),s.updateRenderState({baseLayer:d}),_=new Xi(d.framebufferWidth,d.framebufferHeight,{format:ln,type:Gi,encoding:t.outputEncoding,stencilBuffer:p.stencil})}else{let ot=null,vt=null,N=null;p.depth&&(N=p.stencil?35056:33190,ot=p.stencil?Os:Bi,vt=p.stencil?As:Ni);const z={colorFormat:32856,depthFormat:N,scaleFactor:r};u=new XRWebGLBinding(s,e),f=u.createProjectionLayer(z),s.updateRenderState({layers:[f]}),_=new Xi(f.textureWidth,f.textureHeight,{format:ln,type:Gi,depthTexture:new Wb(f.textureWidth,f.textureHeight,vt,void 0,void 0,void 0,void 0,void 0,void 0,ot),stencilBuffer:p.stencil,encoding:t.outputEncoding,samples:p.antialias?4:0});const tt=t.properties.get(_);tt.__ignoreDepthValues=f.ignoreDepthValues}_.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await s.requestReferenceSpace(a),yt.setContext(s),yt.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function O(W){for(let ot=0;ot<W.removed.length;ot++){const vt=W.removed[ot],N=x.indexOf(vt);N>=0&&(x[N]=null,w[N].disconnect(vt))}for(let ot=0;ot<W.added.length;ot++){const vt=W.added[ot];let N=x.indexOf(vt);if(N===-1){for(let tt=0;tt<w.length;tt++)if(tt>=x.length){x.push(vt),N=tt;break}else if(x[tt]===null){x[tt]=vt,N=tt;break}if(N===-1)break}const z=w[N];z&&z.connect(vt)}}const J=new I,Z=new I;function it(W,ot,vt){J.setFromMatrixPosition(ot.matrixWorld),Z.setFromMatrixPosition(vt.matrixWorld);const N=J.distanceTo(Z),z=ot.projectionMatrix.elements,tt=vt.projectionMatrix.elements,ct=z[14]/(z[10]-1),gt=z[14]/(z[10]+1),pt=(z[9]+1)/z[5],wt=(z[9]-1)/z[5],y=(z[8]-1)/z[0],T=(tt[8]+1)/tt[0],F=ct*y,H=ct*T,B=N/(-y+T),et=B*-y;ot.matrixWorld.decompose(W.position,W.quaternion,W.scale),W.translateX(et),W.translateZ(B),W.matrixWorld.compose(W.position,W.quaternion,W.scale),W.matrixWorldInverse.copy(W.matrixWorld).invert();const st=ct+B,$=gt+B,ut=F-et,nt=H+(N-et),E=pt*gt/$*st,M=wt*gt/$*st;W.projectionMatrix.makePerspective(ut,nt,E,M,st,$)}function Y(W,ot){ot===null?W.matrixWorld.copy(W.matrix):W.matrixWorld.multiplyMatrices(ot.matrixWorld,W.matrix),W.matrixWorldInverse.copy(W.matrixWorld).invert()}this.updateCamera=function(W){if(s===null)return;A.near=D.near=P.near=W.near,A.far=D.far=P.far=W.far,(R!==A.near||j!==A.far)&&(s.updateRenderState({depthNear:A.near,depthFar:A.far}),R=A.near,j=A.far);const ot=W.parent,vt=A.cameras;Y(A,ot);for(let z=0;z<vt.length;z++)Y(vt[z],ot);A.matrixWorld.decompose(A.position,A.quaternion,A.scale),W.matrix.copy(A.matrix),W.matrix.decompose(W.position,W.quaternion,W.scale);const N=W.children;for(let z=0,tt=N.length;z<tt;z++)N[z].updateMatrixWorld(!0);vt.length===2?it(A,P,D):A.projectionMatrix.copy(P.projectionMatrix)},this.getCamera=function(){return A},this.getFoveation=function(){if(!(f===null&&d===null))return l},this.setFoveation=function(W){l=W,f!==null&&(f.fixedFoveation=W),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=W)},this.getPlanes=function(){return b};let ft=null;function dt(W,ot){if(h=ot.getViewerPose(c||o),g=ot,h!==null){const vt=h.views;d!==null&&(t.setRenderTargetFramebuffer(_,d.framebuffer),t.setRenderTarget(_));let N=!1;vt.length!==A.cameras.length&&(A.cameras.length=0,N=!0);for(let z=0;z<vt.length;z++){const tt=vt[z];let ct=null;if(d!==null)ct=d.getViewport(tt);else{const pt=u.getViewSubImage(f,tt);ct=pt.viewport,z===0&&(t.setRenderTargetTextures(_,pt.colorTexture,f.ignoreDepthValues?void 0:pt.depthStencilTexture),t.setRenderTarget(_))}let gt=v[z];gt===void 0&&(gt=new ke,gt.layers.enable(z),gt.viewport=new ee,v[z]=gt),gt.matrix.fromArray(tt.transform.matrix),gt.projectionMatrix.fromArray(tt.projectionMatrix),gt.viewport.set(ct.x,ct.y,ct.width,ct.height),z===0&&A.matrix.copy(gt.matrix),N===!0&&A.cameras.push(gt)}}for(let vt=0;vt<w.length;vt++){const N=x[vt],z=w[vt];N!==null&&z!==void 0&&z.update(N,ot,c||o)}if(ft&&ft(W,ot),ot.detectedPlanes){n.dispatchEvent({type:"planesdetected",data:ot.detectedPlanes});let vt=null;for(const N of b)ot.detectedPlanes.has(N)||(vt===null&&(vt=[]),vt.push(N));if(vt!==null)for(const N of vt)b.delete(N),S.delete(N),n.dispatchEvent({type:"planeremoved",data:N});for(const N of ot.detectedPlanes)if(!b.has(N))b.add(N),S.set(N,ot.lastChangedTime),n.dispatchEvent({type:"planeadded",data:N});else{const z=S.get(N);N.lastChangedTime>z&&(S.set(N,N.lastChangedTime),n.dispatchEvent({type:"planechanged",data:N}))}}g=null}const yt=new pp;yt.setAnimationLoop(dt),this.setAnimationLoop=function(W){ft=W},this.dispose=function(){}}}function jb(i,t){function e(p,m){m.color.getRGB(p.fogColor.value,up(i)),m.isFog?(p.fogNear.value=m.near,p.fogFar.value=m.far):m.isFogExp2&&(p.fogDensity.value=m.density)}function n(p,m,_,w,x){m.isMeshBasicMaterial||m.isMeshLambertMaterial?s(p,m):m.isMeshToonMaterial?(s(p,m),h(p,m)):m.isMeshPhongMaterial?(s(p,m),c(p,m)):m.isMeshStandardMaterial?(s(p,m),u(p,m),m.isMeshPhysicalMaterial&&f(p,m,x)):m.isMeshMatcapMaterial?(s(p,m),d(p,m)):m.isMeshDepthMaterial?s(p,m):m.isMeshDistanceMaterial?(s(p,m),g(p,m)):m.isMeshNormalMaterial?s(p,m):m.isLineBasicMaterial?(r(p,m),m.isLineDashedMaterial&&o(p,m)):m.isPointsMaterial?a(p,m,_,w):m.isSpriteMaterial?l(p,m):m.isShadowMaterial?(p.color.value.copy(m.color),p.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function s(p,m){p.opacity.value=m.opacity,m.color&&p.diffuse.value.copy(m.color),m.emissive&&p.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(p.map.value=m.map),m.alphaMap&&(p.alphaMap.value=m.alphaMap),m.bumpMap&&(p.bumpMap.value=m.bumpMap,p.bumpScale.value=m.bumpScale,m.side===He&&(p.bumpScale.value*=-1)),m.displacementMap&&(p.displacementMap.value=m.displacementMap,p.displacementScale.value=m.displacementScale,p.displacementBias.value=m.displacementBias),m.emissiveMap&&(p.emissiveMap.value=m.emissiveMap),m.normalMap&&(p.normalMap.value=m.normalMap,p.normalScale.value.copy(m.normalScale),m.side===He&&p.normalScale.value.negate()),m.specularMap&&(p.specularMap.value=m.specularMap),m.alphaTest>0&&(p.alphaTest.value=m.alphaTest);const _=t.get(m).envMap;if(_&&(p.envMap.value=_,p.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,p.reflectivity.value=m.reflectivity,p.ior.value=m.ior,p.refractionRatio.value=m.refractionRatio),m.lightMap){p.lightMap.value=m.lightMap;const b=i.physicallyCorrectLights!==!0?Math.PI:1;p.lightMapIntensity.value=m.lightMapIntensity*b}m.aoMap&&(p.aoMap.value=m.aoMap,p.aoMapIntensity.value=m.aoMapIntensity);let w;m.map?w=m.map:m.specularMap?w=m.specularMap:m.displacementMap?w=m.displacementMap:m.normalMap?w=m.normalMap:m.bumpMap?w=m.bumpMap:m.roughnessMap?w=m.roughnessMap:m.metalnessMap?w=m.metalnessMap:m.alphaMap?w=m.alphaMap:m.emissiveMap?w=m.emissiveMap:m.clearcoatMap?w=m.clearcoatMap:m.clearcoatNormalMap?w=m.clearcoatNormalMap:m.clearcoatRoughnessMap?w=m.clearcoatRoughnessMap:m.iridescenceMap?w=m.iridescenceMap:m.iridescenceThicknessMap?w=m.iridescenceThicknessMap:m.specularIntensityMap?w=m.specularIntensityMap:m.specularColorMap?w=m.specularColorMap:m.transmissionMap?w=m.transmissionMap:m.thicknessMap?w=m.thicknessMap:m.sheenColorMap?w=m.sheenColorMap:m.sheenRoughnessMap&&(w=m.sheenRoughnessMap),w!==void 0&&(w.isWebGLRenderTarget&&(w=w.texture),w.matrixAutoUpdate===!0&&w.updateMatrix(),p.uvTransform.value.copy(w.matrix));let x;m.aoMap?x=m.aoMap:m.lightMap&&(x=m.lightMap),x!==void 0&&(x.isWebGLRenderTarget&&(x=x.texture),x.matrixAutoUpdate===!0&&x.updateMatrix(),p.uv2Transform.value.copy(x.matrix))}function r(p,m){p.diffuse.value.copy(m.color),p.opacity.value=m.opacity}function o(p,m){p.dashSize.value=m.dashSize,p.totalSize.value=m.dashSize+m.gapSize,p.scale.value=m.scale}function a(p,m,_,w){p.diffuse.value.copy(m.color),p.opacity.value=m.opacity,p.size.value=m.size*_,p.scale.value=w*.5,m.map&&(p.map.value=m.map),m.alphaMap&&(p.alphaMap.value=m.alphaMap),m.alphaTest>0&&(p.alphaTest.value=m.alphaTest);let x;m.map?x=m.map:m.alphaMap&&(x=m.alphaMap),x!==void 0&&(x.matrixAutoUpdate===!0&&x.updateMatrix(),p.uvTransform.value.copy(x.matrix))}function l(p,m){p.diffuse.value.copy(m.color),p.opacity.value=m.opacity,p.rotation.value=m.rotation,m.map&&(p.map.value=m.map),m.alphaMap&&(p.alphaMap.value=m.alphaMap),m.alphaTest>0&&(p.alphaTest.value=m.alphaTest);let _;m.map?_=m.map:m.alphaMap&&(_=m.alphaMap),_!==void 0&&(_.matrixAutoUpdate===!0&&_.updateMatrix(),p.uvTransform.value.copy(_.matrix))}function c(p,m){p.specular.value.copy(m.specular),p.shininess.value=Math.max(m.shininess,1e-4)}function h(p,m){m.gradientMap&&(p.gradientMap.value=m.gradientMap)}function u(p,m){p.roughness.value=m.roughness,p.metalness.value=m.metalness,m.roughnessMap&&(p.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(p.metalnessMap.value=m.metalnessMap),t.get(m).envMap&&(p.envMapIntensity.value=m.envMapIntensity)}function f(p,m,_){p.ior.value=m.ior,m.sheen>0&&(p.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),p.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(p.sheenColorMap.value=m.sheenColorMap),m.sheenRoughnessMap&&(p.sheenRoughnessMap.value=m.sheenRoughnessMap)),m.clearcoat>0&&(p.clearcoat.value=m.clearcoat,p.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(p.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(p.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(p.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),p.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===He&&p.clearcoatNormalScale.value.negate())),m.iridescence>0&&(p.iridescence.value=m.iridescence,p.iridescenceIOR.value=m.iridescenceIOR,p.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],p.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(p.iridescenceMap.value=m.iridescenceMap),m.iridescenceThicknessMap&&(p.iridescenceThicknessMap.value=m.iridescenceThicknessMap)),m.transmission>0&&(p.transmission.value=m.transmission,p.transmissionSamplerMap.value=_.texture,p.transmissionSamplerSize.value.set(_.width,_.height),m.transmissionMap&&(p.transmissionMap.value=m.transmissionMap),p.thickness.value=m.thickness,m.thicknessMap&&(p.thicknessMap.value=m.thicknessMap),p.attenuationDistance.value=m.attenuationDistance,p.attenuationColor.value.copy(m.attenuationColor)),p.specularIntensity.value=m.specularIntensity,p.specularColor.value.copy(m.specularColor),m.specularIntensityMap&&(p.specularIntensityMap.value=m.specularIntensityMap),m.specularColorMap&&(p.specularColorMap.value=m.specularColorMap)}function d(p,m){m.matcap&&(p.matcap.value=m.matcap)}function g(p,m){p.referencePosition.value.copy(m.referencePosition),p.nearDistance.value=m.nearDistance,p.farDistance.value=m.farDistance}return{refreshFogUniforms:e,refreshMaterialUniforms:n}}function qb(i,t,e,n){let s={},r={},o=[];const a=e.isWebGL2?i.getParameter(35375):0;function l(w,x){const b=x.program;n.uniformBlockBinding(w,b)}function c(w,x){let b=s[w.id];b===void 0&&(g(w),b=h(w),s[w.id]=b,w.addEventListener("dispose",m));const S=x.program;n.updateUBOMapping(w,S);const P=t.render.frame;r[w.id]!==P&&(f(w),r[w.id]=P)}function h(w){const x=u();w.__bindingPointIndex=x;const b=i.createBuffer(),S=w.__size,P=w.usage;return i.bindBuffer(35345,b),i.bufferData(35345,S,P),i.bindBuffer(35345,null),i.bindBufferBase(35345,x,b),b}function u(){for(let w=0;w<a;w++)if(o.indexOf(w)===-1)return o.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(w){const x=s[w.id],b=w.uniforms,S=w.__cache;i.bindBuffer(35345,x);for(let P=0,D=b.length;P<D;P++){const v=b[P];if(d(v,P,S)===!0){const A=v.__offset,R=Array.isArray(v.value)?v.value:[v.value];let j=0;for(let Q=0;Q<R.length;Q++){const k=R[Q],O=p(k);typeof k=="number"?(v.__data[0]=k,i.bufferSubData(35345,A+j,v.__data)):k.isMatrix3?(v.__data[0]=k.elements[0],v.__data[1]=k.elements[1],v.__data[2]=k.elements[2],v.__data[3]=k.elements[0],v.__data[4]=k.elements[3],v.__data[5]=k.elements[4],v.__data[6]=k.elements[5],v.__data[7]=k.elements[0],v.__data[8]=k.elements[6],v.__data[9]=k.elements[7],v.__data[10]=k.elements[8],v.__data[11]=k.elements[0]):(k.toArray(v.__data,j),j+=O.storage/Float32Array.BYTES_PER_ELEMENT)}i.bufferSubData(35345,A,v.__data)}}i.bindBuffer(35345,null)}function d(w,x,b){const S=w.value;if(b[x]===void 0){if(typeof S=="number")b[x]=S;else{const P=Array.isArray(S)?S:[S],D=[];for(let v=0;v<P.length;v++)D.push(P[v].clone());b[x]=D}return!0}else if(typeof S=="number"){if(b[x]!==S)return b[x]=S,!0}else{const P=Array.isArray(b[x])?b[x]:[b[x]],D=Array.isArray(S)?S:[S];for(let v=0;v<P.length;v++){const A=P[v];if(A.equals(D[v])===!1)return A.copy(D[v]),!0}}return!1}function g(w){const x=w.uniforms;let b=0;const S=16;let P=0;for(let D=0,v=x.length;D<v;D++){const A=x[D],R={boundary:0,storage:0},j=Array.isArray(A.value)?A.value:[A.value];for(let Q=0,k=j.length;Q<k;Q++){const O=j[Q],J=p(O);R.boundary+=J.boundary,R.storage+=J.storage}if(A.__data=new Float32Array(R.storage/Float32Array.BYTES_PER_ELEMENT),A.__offset=b,D>0){P=b%S;const Q=S-P;P!==0&&Q-R.boundary<0&&(b+=S-P,A.__offset=b)}b+=R.storage}return P=b%S,P>0&&(b+=S-P),w.__size=b,w.__cache={},this}function p(w){const x={boundary:0,storage:0};return typeof w=="number"?(x.boundary=4,x.storage=4):w.isVector2?(x.boundary=8,x.storage=8):w.isVector3||w.isColor?(x.boundary=16,x.storage=12):w.isVector4?(x.boundary=16,x.storage=16):w.isMatrix3?(x.boundary=48,x.storage=48):w.isMatrix4?(x.boundary=64,x.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),x}function m(w){const x=w.target;x.removeEventListener("dispose",m);const b=o.indexOf(x.__bindingPointIndex);o.splice(b,1),i.deleteBuffer(s[x.id]),delete s[x.id],delete r[x.id]}function _(){for(const w in s)i.deleteBuffer(s[w]);o=[],s={},r={}}return{bind:l,update:c,dispose:_}}function Yb(){const i=Cr("canvas");return i.style.display="block",i}function vp(i={}){this.isWebGLRenderer=!0;const t=i.canvas!==void 0?i.canvas:Yb(),e=i.context!==void 0?i.context:null,n=i.depth!==void 0?i.depth:!0,s=i.stencil!==void 0?i.stencil:!0,r=i.antialias!==void 0?i.antialias:!1,o=i.premultipliedAlpha!==void 0?i.premultipliedAlpha:!0,a=i.preserveDrawingBuffer!==void 0?i.preserveDrawingBuffer:!1,l=i.powerPreference!==void 0?i.powerPreference:"default",c=i.failIfMajorPerformanceCaveat!==void 0?i.failIfMajorPerformanceCaveat:!1;let h;e!==null?h=e.getContextAttributes().alpha:h=i.alpha!==void 0?i.alpha:!1;let u=null,f=null;const d=[],g=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Wi,this.physicallyCorrectLights=!1,this.toneMapping=Zn,this.toneMappingExposure=1;const p=this;let m=!1,_=0,w=0,x=null,b=-1,S=null;const P=new ee,D=new ee;let v=null,A=t.width,R=t.height,j=1,Q=null,k=null;const O=new ee(0,0,A,R),J=new ee(0,0,A,R);let Z=!1;const it=new Mc;let Y=!1,ft=!1,dt=null;const yt=new Dt,W=new xt,ot=new I,vt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function N(){return x===null?j:1}let z=e;function tt(C,q){for(let lt=0;lt<C.length;lt++){const X=C[lt],ht=t.getContext(X,q);if(ht!==null)return ht}return null}try{const C={alpha:!0,depth:n,stencil:s,antialias:r,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${xc}`),t.addEventListener("webglcontextlost",Pt,!1),t.addEventListener("webglcontextrestored",Et,!1),t.addEventListener("webglcontextcreationerror",zt,!1),z===null){const q=["webgl2","webgl","experimental-webgl"];if(p.isWebGL1Renderer===!0&&q.shift(),z=tt(q,C),z===null)throw tt(q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}z.getShaderPrecisionFormat===void 0&&(z.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let ct,gt,pt,wt,y,T,F,H,B,et,st,$,ut,nt,E,M,U,K,rt,mt,Mt,L,G,bt;function At(){ct=new rM(z),gt=new Qw(z,ct,i),ct.init(gt),L=new Vb(z,ct,gt),pt=new kb(z,ct,gt),wt=new lM,y=new Tb,T=new Bb(z,ct,pt,y,gt,L,wt),F=new eM(p),H=new sM(p),B=new _v(z,gt),G=new Kw(z,ct,B,gt),et=new oM(z,B,wt,G),st=new fM(z,et,B,wt),rt=new uM(z,gt,T),M=new tM(y),$=new Sb(p,F,H,ct,gt,G,M),ut=new jb(p,y),nt=new Ab,E=new Db(ct,gt),K=new Zw(p,F,H,pt,st,h,o),U=new Ub(p,st,gt),bt=new qb(z,wt,gt,pt),mt=new Jw(z,ct,wt,gt),Mt=new aM(z,ct,wt,gt),wt.programs=$.programs,p.capabilities=gt,p.extensions=ct,p.properties=y,p.renderLists=nt,p.shadowMap=U,p.state=pt,p.info=wt}At();const Tt=new Xb(p,z);this.xr=Tt,this.getContext=function(){return z},this.getContextAttributes=function(){return z.getContextAttributes()},this.forceContextLoss=function(){const C=ct.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=ct.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return j},this.setPixelRatio=function(C){C!==void 0&&(j=C,this.setSize(A,R,!1))},this.getSize=function(C){return C.set(A,R)},this.setSize=function(C,q,lt){if(Tt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}A=C,R=q,t.width=Math.floor(C*j),t.height=Math.floor(q*j),lt!==!1&&(t.style.width=C+"px",t.style.height=q+"px"),this.setViewport(0,0,C,q)},this.getDrawingBufferSize=function(C){return C.set(A*j,R*j).floor()},this.setDrawingBufferSize=function(C,q,lt){A=C,R=q,j=lt,t.width=Math.floor(C*lt),t.height=Math.floor(q*lt),this.setViewport(0,0,C,q)},this.getCurrentViewport=function(C){return C.copy(P)},this.getViewport=function(C){return C.copy(O)},this.setViewport=function(C,q,lt,X){C.isVector4?O.set(C.x,C.y,C.z,C.w):O.set(C,q,lt,X),pt.viewport(P.copy(O).multiplyScalar(j).floor())},this.getScissor=function(C){return C.copy(J)},this.setScissor=function(C,q,lt,X){C.isVector4?J.set(C.x,C.y,C.z,C.w):J.set(C,q,lt,X),pt.scissor(D.copy(J).multiplyScalar(j).floor())},this.getScissorTest=function(){return Z},this.setScissorTest=function(C){pt.setScissorTest(Z=C)},this.setOpaqueSort=function(C){Q=C},this.setTransparentSort=function(C){k=C},this.getClearColor=function(C){return C.copy(K.getClearColor())},this.setClearColor=function(){K.setClearColor.apply(K,arguments)},this.getClearAlpha=function(){return K.getClearAlpha()},this.setClearAlpha=function(){K.setClearAlpha.apply(K,arguments)},this.clear=function(C=!0,q=!0,lt=!0){let X=0;C&&(X|=16384),q&&(X|=256),lt&&(X|=1024),z.clear(X)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Pt,!1),t.removeEventListener("webglcontextrestored",Et,!1),t.removeEventListener("webglcontextcreationerror",zt,!1),nt.dispose(),E.dispose(),y.dispose(),F.dispose(),H.dispose(),st.dispose(),G.dispose(),bt.dispose(),$.dispose(),Tt.dispose(),Tt.removeEventListener("sessionstart",Ct),Tt.removeEventListener("sessionend",Lt),dt&&(dt.dispose(),dt=null),ne.stop()};function Pt(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function Et(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1;const C=wt.autoReset,q=U.enabled,lt=U.autoUpdate,X=U.needsUpdate,ht=U.type;At(),wt.autoReset=C,U.enabled=q,U.autoUpdate=lt,U.needsUpdate=X,U.type=ht}function zt(C){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",C.statusMessage)}function Vt(C){const q=C.target;q.removeEventListener("dispose",Vt),re(q)}function re(C){V(C),y.remove(C)}function V(C){const q=y.get(C).programs;q!==void 0&&(q.forEach(function(lt){$.releaseProgram(lt)}),C.isShaderMaterial&&$.releaseShaderCache(C))}this.renderBufferDirect=function(C,q,lt,X,ht,Ft){q===null&&(q=vt);const Ot=ht.isMesh&&ht.matrixWorld.determinant()<0,Bt=sm(C,q,lt,X,ht);pt.setMaterial(X,Ot);let Ht=lt.index,Jt=1;X.wireframe===!0&&(Ht=et.getWireframeAttribute(lt),Jt=2);const jt=lt.drawRange,qt=lt.attributes.position;let ge=jt.start*Jt,$e=(jt.start+jt.count)*Jt;Ft!==null&&(ge=Math.max(ge,Ft.start*Jt),$e=Math.min($e,(Ft.start+Ft.count)*Jt)),Ht!==null?(ge=Math.max(ge,0),$e=Math.min($e,Ht.count)):qt!=null&&(ge=Math.max(ge,0),$e=Math.min($e,qt.count));const kn=$e-ge;if(kn<0||kn===1/0)return;G.setup(ht,X,Bt,lt,Ht);let wi,_e=mt;if(Ht!==null&&(wi=B.get(Ht),_e=Mt,_e.setIndex(wi)),ht.isMesh)X.wireframe===!0?(pt.setLineWidth(X.wireframeLinewidth*N()),_e.setMode(1)):_e.setMode(4);else if(ht.isLine){let Yt=X.linewidth;Yt===void 0&&(Yt=1),pt.setLineWidth(Yt*N()),ht.isLineSegments?_e.setMode(1):ht.isLineLoop?_e.setMode(2):_e.setMode(3)}else ht.isPoints?_e.setMode(0):ht.isSprite&&_e.setMode(4);if(ht.isInstancedMesh)_e.renderInstances(ge,kn,ht.count);else if(lt.isInstancedBufferGeometry){const Yt=lt._maxInstanceCount!==void 0?lt._maxInstanceCount:1/0,ha=Math.min(lt.instanceCount,Yt);_e.renderInstances(ge,kn,ha)}else _e.render(ge,kn)},this.compile=function(C,q){function lt(X,ht,Ft){X.transparent===!0&&X.side===Be&&X.forceSinglePass===!1?(X.side=He,X.needsUpdate=!0,nn(X,ht,Ft),X.side=pn,X.needsUpdate=!0,nn(X,ht,Ft),X.side=Be):nn(X,ht,Ft)}f=E.get(C),f.init(),g.push(f),C.traverseVisible(function(X){X.isLight&&X.layers.test(q.layers)&&(f.pushLight(X),X.castShadow&&f.pushShadow(X))}),f.setupLights(p.physicallyCorrectLights),C.traverse(function(X){const ht=X.material;if(ht)if(Array.isArray(ht))for(let Ft=0;Ft<ht.length;Ft++){const Ot=ht[Ft];lt(Ot,C,X)}else lt(ht,C,X)}),g.pop(),f=null};let at=null;function _t(C){at&&at(C)}function Ct(){ne.stop()}function Lt(){ne.start()}const ne=new pp;ne.setAnimationLoop(_t),typeof self<"u"&&ne.setContext(self),this.setAnimationLoop=function(C){at=C,Tt.setAnimationLoop(C),C===null?ne.stop():ne.start()},Tt.addEventListener("sessionstart",Ct),Tt.addEventListener("sessionend",Lt),this.render=function(C,q){if(q!==void 0&&q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(m===!0)return;C.matrixWorldAutoUpdate===!0&&C.updateMatrixWorld(),q.parent===null&&q.matrixWorldAutoUpdate===!0&&q.updateMatrixWorld(),Tt.enabled===!0&&Tt.isPresenting===!0&&(Tt.cameraAutoUpdate===!0&&Tt.updateCamera(q),q=Tt.getCamera()),C.isScene===!0&&C.onBeforeRender(p,C,q,x),f=E.get(C,g.length),f.init(),g.push(f),yt.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),it.setFromProjectionMatrix(yt),ft=this.localClippingEnabled,Y=M.init(this.clippingPlanes,ft),u=nt.get(C,d.length),u.init(),d.push(u),be(C,q,0,p.sortObjects),u.finish(),p.sortObjects===!0&&u.sort(Q,k),Y===!0&&M.beginShadows();const lt=f.state.shadowsArray;if(U.render(lt,C,q),Y===!0&&M.endShadows(),this.info.autoReset===!0&&this.info.reset(),K.render(u,C),f.setupLights(p.physicallyCorrectLights),q.isArrayCamera){const X=q.cameras;for(let ht=0,Ft=X.length;ht<Ft;ht++){const Ot=X[ht];Pe(u,C,Ot,Ot.viewport)}}else Pe(u,C,q);x!==null&&(T.updateMultisampleRenderTarget(x),T.updateRenderTargetMipmap(x)),C.isScene===!0&&C.onAfterRender(p,C,q),G.resetDefaultState(),b=-1,S=null,g.pop(),g.length>0?f=g[g.length-1]:f=null,d.pop(),d.length>0?u=d[d.length-1]:u=null};function be(C,q,lt,X){if(C.visible===!1)return;if(C.layers.test(q.layers)){if(C.isGroup)lt=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update(q);else if(C.isLight)f.pushLight(C),C.castShadow&&f.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||it.intersectsSprite(C)){X&&ot.setFromMatrixPosition(C.matrixWorld).applyMatrix4(yt);const Ot=st.update(C),Bt=C.material;Bt.visible&&u.push(C,Ot,Bt,lt,ot.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(C.isSkinnedMesh&&C.skeleton.frame!==wt.render.frame&&(C.skeleton.update(),C.skeleton.frame=wt.render.frame),!C.frustumCulled||it.intersectsObject(C))){X&&ot.setFromMatrixPosition(C.matrixWorld).applyMatrix4(yt);const Ot=st.update(C),Bt=C.material;if(Array.isArray(Bt)){const Ht=Ot.groups;for(let Jt=0,jt=Ht.length;Jt<jt;Jt++){const qt=Ht[Jt],ge=Bt[qt.materialIndex];ge&&ge.visible&&u.push(C,Ot,ge,lt,ot.z,qt)}}else Bt.visible&&u.push(C,Ot,Bt,lt,ot.z,null)}}const Ft=C.children;for(let Ot=0,Bt=Ft.length;Ot<Bt;Ot++)be(Ft[Ot],q,lt,X)}function Pe(C,q,lt,X){const ht=C.opaque,Ft=C.transmissive,Ot=C.transparent;f.setupLightsView(lt),Y===!0&&M.setGlobalState(p.clippingPlanes,lt),Ft.length>0&&yi(ht,q,lt),X&&pt.viewport(P.copy(X)),ht.length>0&&le(ht,q,lt),Ft.length>0&&le(Ft,q,lt),Ot.length>0&&le(Ot,q,lt),pt.buffers.depth.setTest(!0),pt.buffers.depth.setMask(!0),pt.buffers.color.setMask(!0),pt.setPolygonOffset(!1)}function yi(C,q,lt){const X=gt.isWebGL2;dt===null&&(dt=new Xi(1,1,{generateMipmaps:!0,type:ct.has("EXT_color_buffer_half_float")?Tr:Gi,minFilter:Sr,samples:X&&r===!0?4:0})),p.getDrawingBufferSize(W),X?dt.setSize(W.x,W.y):dt.setSize(Vo(W.x),Vo(W.y));const ht=p.getRenderTarget();p.setRenderTarget(dt),p.clear();const Ft=p.toneMapping;p.toneMapping=Zn,le(C,q,lt),p.toneMapping=Ft,T.updateMultisampleRenderTarget(dt),T.updateRenderTargetMipmap(dt),p.setRenderTarget(ht)}function le(C,q,lt){const X=q.isScene===!0?q.overrideMaterial:null;for(let ht=0,Ft=C.length;ht<Ft;ht++){const Ot=C[ht],Bt=Ot.object,Ht=Ot.geometry,Jt=X===null?Ot.material:X,jt=Ot.group;Bt.layers.test(lt.layers)&&Un(Bt,q,lt,Ht,Jt,jt)}}function Un(C,q,lt,X,ht,Ft){C.onBeforeRender(p,q,lt,X,ht,Ft),C.modelViewMatrix.multiplyMatrices(lt.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),ht.onBeforeRender(p,q,lt,X,C,Ft),ht.transparent===!0&&ht.side===Be&&ht.forceSinglePass===!1?(ht.side=He,ht.needsUpdate=!0,p.renderBufferDirect(lt,q,X,ht,C,Ft),ht.side=pn,ht.needsUpdate=!0,p.renderBufferDirect(lt,q,X,ht,C,Ft),ht.side=Be):p.renderBufferDirect(lt,q,X,ht,C,Ft),C.onAfterRender(p,q,lt,X,ht,Ft)}function nn(C,q,lt){q.isScene!==!0&&(q=vt);const X=y.get(C),ht=f.state.lights,Ft=f.state.shadowsArray,Ot=ht.state.version,Bt=$.getParameters(C,ht.state,Ft,q,lt),Ht=$.getProgramCacheKey(Bt);let Jt=X.programs;X.environment=C.isMeshStandardMaterial?q.environment:null,X.fog=q.fog,X.envMap=(C.isMeshStandardMaterial?H:F).get(C.envMap||X.environment),Jt===void 0&&(C.addEventListener("dispose",Vt),Jt=new Map,X.programs=Jt);let jt=Jt.get(Ht);if(jt!==void 0){if(X.currentProgram===jt&&X.lightsStateVersion===Ot)return kc(C,Bt),jt}else Bt.uniforms=$.getUniforms(C),C.onBuild(lt,Bt,p),C.onBeforeCompile(Bt,p),jt=$.acquireProgram(Bt,Ht),Jt.set(Ht,jt),X.uniforms=Bt.uniforms;const qt=X.uniforms;(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(qt.clippingPlanes=M.uniform),kc(C,Bt),X.needsLights=om(C),X.lightsStateVersion=Ot,X.needsLights&&(qt.ambientLightColor.value=ht.state.ambient,qt.lightProbe.value=ht.state.probe,qt.directionalLights.value=ht.state.directional,qt.directionalLightShadows.value=ht.state.directionalShadow,qt.spotLights.value=ht.state.spot,qt.spotLightShadows.value=ht.state.spotShadow,qt.rectAreaLights.value=ht.state.rectArea,qt.ltc_1.value=ht.state.rectAreaLTC1,qt.ltc_2.value=ht.state.rectAreaLTC2,qt.pointLights.value=ht.state.point,qt.pointLightShadows.value=ht.state.pointShadow,qt.hemisphereLights.value=ht.state.hemi,qt.directionalShadowMap.value=ht.state.directionalShadowMap,qt.directionalShadowMatrix.value=ht.state.directionalShadowMatrix,qt.spotShadowMap.value=ht.state.spotShadowMap,qt.spotLightMatrix.value=ht.state.spotLightMatrix,qt.spotLightMap.value=ht.state.spotLightMap,qt.pointShadowMap.value=ht.state.pointShadowMap,qt.pointShadowMatrix.value=ht.state.pointShadowMatrix);const ge=jt.getUniforms(),$e=Ro.seqWithValue(ge.seq,qt);return X.currentProgram=jt,X.uniformsList=$e,jt}function kc(C,q){const lt=y.get(C);lt.outputEncoding=q.outputEncoding,lt.instancing=q.instancing,lt.skinning=q.skinning,lt.morphTargets=q.morphTargets,lt.morphNormals=q.morphNormals,lt.morphColors=q.morphColors,lt.morphTargetsCount=q.morphTargetsCount,lt.numClippingPlanes=q.numClippingPlanes,lt.numIntersection=q.numClipIntersection,lt.vertexAlphas=q.vertexAlphas,lt.vertexTangents=q.vertexTangents,lt.toneMapping=q.toneMapping}function sm(C,q,lt,X,ht){q.isScene!==!0&&(q=vt),T.resetTextureUnits();const Ft=q.fog,Ot=X.isMeshStandardMaterial?q.environment:null,Bt=x===null?p.outputEncoding:x.isXRRenderTarget===!0?x.texture.encoding:Wi,Ht=(X.isMeshStandardMaterial?H:F).get(X.envMap||Ot),Jt=X.vertexColors===!0&&!!lt.attributes.color&&lt.attributes.color.itemSize===4,jt=!!X.normalMap&&!!lt.attributes.tangent,qt=!!lt.morphAttributes.position,ge=!!lt.morphAttributes.normal,$e=!!lt.morphAttributes.color,kn=X.toneMapped?p.toneMapping:Zn,wi=lt.morphAttributes.position||lt.morphAttributes.normal||lt.morphAttributes.color,_e=wi!==void 0?wi.length:0,Yt=y.get(X),ha=f.state.lights;if(Y===!0&&(ft===!0||C!==S)){const Ze=C===S&&X.id===b;M.setState(X,C,Ze)}let Se=!1;X.version===Yt.__version?(Yt.needsLights&&Yt.lightsStateVersion!==ha.state.version||Yt.outputEncoding!==Bt||ht.isInstancedMesh&&Yt.instancing===!1||!ht.isInstancedMesh&&Yt.instancing===!0||ht.isSkinnedMesh&&Yt.skinning===!1||!ht.isSkinnedMesh&&Yt.skinning===!0||Yt.envMap!==Ht||X.fog===!0&&Yt.fog!==Ft||Yt.numClippingPlanes!==void 0&&(Yt.numClippingPlanes!==M.numPlanes||Yt.numIntersection!==M.numIntersection)||Yt.vertexAlphas!==Jt||Yt.vertexTangents!==jt||Yt.morphTargets!==qt||Yt.morphNormals!==ge||Yt.morphColors!==$e||Yt.toneMapping!==kn||gt.isWebGL2===!0&&Yt.morphTargetsCount!==_e)&&(Se=!0):(Se=!0,Yt.__version=X.version);let Mi=Yt.currentProgram;Se===!0&&(Mi=nn(X,q,ht));let Bc=!1,Xs=!1,ua=!1;const ze=Mi.getUniforms(),bi=Yt.uniforms;if(pt.useProgram(Mi.program)&&(Bc=!0,Xs=!0,ua=!0),X.id!==b&&(b=X.id,Xs=!0),Bc||S!==C){if(ze.setValue(z,"projectionMatrix",C.projectionMatrix),gt.logarithmicDepthBuffer&&ze.setValue(z,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),S!==C&&(S=C,Xs=!0,ua=!0),X.isShaderMaterial||X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshStandardMaterial||X.envMap){const Ze=ze.map.cameraPosition;Ze!==void 0&&Ze.setValue(z,ot.setFromMatrixPosition(C.matrixWorld))}(X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshLambertMaterial||X.isMeshBasicMaterial||X.isMeshStandardMaterial||X.isShaderMaterial)&&ze.setValue(z,"isOrthographic",C.isOrthographicCamera===!0),(X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshLambertMaterial||X.isMeshBasicMaterial||X.isMeshStandardMaterial||X.isShaderMaterial||X.isShadowMaterial||ht.isSkinnedMesh)&&ze.setValue(z,"viewMatrix",C.matrixWorldInverse)}if(ht.isSkinnedMesh){ze.setOptional(z,ht,"bindMatrix"),ze.setOptional(z,ht,"bindMatrixInverse");const Ze=ht.skeleton;Ze&&(gt.floatVertexTextures?(Ze.boneTexture===null&&Ze.computeBoneTexture(),ze.setValue(z,"boneTexture",Ze.boneTexture,T),ze.setValue(z,"boneTextureSize",Ze.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const fa=lt.morphAttributes;if((fa.position!==void 0||fa.normal!==void 0||fa.color!==void 0&&gt.isWebGL2===!0)&&rt.update(ht,lt,X,Mi),(Xs||Yt.receiveShadow!==ht.receiveShadow)&&(Yt.receiveShadow=ht.receiveShadow,ze.setValue(z,"receiveShadow",ht.receiveShadow)),X.isMeshGouraudMaterial&&X.envMap!==null&&(bi.envMap.value=Ht,bi.flipEnvMap.value=Ht.isCubeTexture&&Ht.isRenderTargetTexture===!1?-1:1),Xs&&(ze.setValue(z,"toneMappingExposure",p.toneMappingExposure),Yt.needsLights&&rm(bi,ua),Ft&&X.fog===!0&&ut.refreshFogUniforms(bi,Ft),ut.refreshMaterialUniforms(bi,X,j,R,dt),Ro.upload(z,Yt.uniformsList,bi,T)),X.isShaderMaterial&&X.uniformsNeedUpdate===!0&&(Ro.upload(z,Yt.uniformsList,bi,T),X.uniformsNeedUpdate=!1),X.isSpriteMaterial&&ze.setValue(z,"center",ht.center),ze.setValue(z,"modelViewMatrix",ht.modelViewMatrix),ze.setValue(z,"normalMatrix",ht.normalMatrix),ze.setValue(z,"modelMatrix",ht.matrixWorld),X.isShaderMaterial||X.isRawShaderMaterial){const Ze=X.uniformsGroups;for(let da=0,am=Ze.length;da<am;da++)if(gt.isWebGL2){const Vc=Ze[da];bt.update(Vc,Mi),bt.bind(Vc,Mi)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Mi}function rm(C,q){C.ambientLightColor.needsUpdate=q,C.lightProbe.needsUpdate=q,C.directionalLights.needsUpdate=q,C.directionalLightShadows.needsUpdate=q,C.pointLights.needsUpdate=q,C.pointLightShadows.needsUpdate=q,C.spotLights.needsUpdate=q,C.spotLightShadows.needsUpdate=q,C.rectAreaLights.needsUpdate=q,C.hemisphereLights.needsUpdate=q}function om(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return x},this.setRenderTargetTextures=function(C,q,lt){y.get(C.texture).__webglTexture=q,y.get(C.depthTexture).__webglTexture=lt;const X=y.get(C);X.__hasExternalTextures=!0,X.__hasExternalTextures&&(X.__autoAllocateDepthBuffer=lt===void 0,X.__autoAllocateDepthBuffer||ct.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),X.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(C,q){const lt=y.get(C);lt.__webglFramebuffer=q,lt.__useDefaultFramebuffer=q===void 0},this.setRenderTarget=function(C,q=0,lt=0){x=C,_=q,w=lt;let X=!0,ht=null,Ft=!1,Ot=!1;if(C){const Ht=y.get(C);Ht.__useDefaultFramebuffer!==void 0?(pt.bindFramebuffer(36160,null),X=!1):Ht.__webglFramebuffer===void 0?T.setupRenderTarget(C):Ht.__hasExternalTextures&&T.rebindTextures(C,y.get(C.texture).__webglTexture,y.get(C.depthTexture).__webglTexture);const Jt=C.texture;(Jt.isData3DTexture||Jt.isDataArrayTexture||Jt.isCompressedArrayTexture)&&(Ot=!0);const jt=y.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(ht=jt[q],Ft=!0):gt.isWebGL2&&C.samples>0&&T.useMultisampledRTT(C)===!1?ht=y.get(C).__webglMultisampledFramebuffer:ht=jt,P.copy(C.viewport),D.copy(C.scissor),v=C.scissorTest}else P.copy(O).multiplyScalar(j).floor(),D.copy(J).multiplyScalar(j).floor(),v=Z;if(pt.bindFramebuffer(36160,ht)&&gt.drawBuffers&&X&&pt.drawBuffers(C,ht),pt.viewport(P),pt.scissor(D),pt.setScissorTest(v),Ft){const Ht=y.get(C.texture);z.framebufferTexture2D(36160,36064,34069+q,Ht.__webglTexture,lt)}else if(Ot){const Ht=y.get(C.texture),Jt=q||0;z.framebufferTextureLayer(36160,36064,Ht.__webglTexture,lt||0,Jt)}b=-1},this.readRenderTargetPixels=function(C,q,lt,X,ht,Ft,Ot){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Bt=y.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&Ot!==void 0&&(Bt=Bt[Ot]),Bt){pt.bindFramebuffer(36160,Bt);try{const Ht=C.texture,Jt=Ht.format,jt=Ht.type;if(Jt!==ln&&L.convert(Jt)!==z.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const qt=jt===Tr&&(ct.has("EXT_color_buffer_half_float")||gt.isWebGL2&&ct.has("EXT_color_buffer_float"));if(jt!==Gi&&L.convert(jt)!==z.getParameter(35738)&&!(jt===fi&&(gt.isWebGL2||ct.has("OES_texture_float")||ct.has("WEBGL_color_buffer_float")))&&!qt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}q>=0&&q<=C.width-X&&lt>=0&&lt<=C.height-ht&&z.readPixels(q,lt,X,ht,L.convert(Jt),L.convert(jt),Ft)}finally{const Ht=x!==null?y.get(x).__webglFramebuffer:null;pt.bindFramebuffer(36160,Ht)}}},this.copyFramebufferToTexture=function(C,q,lt=0){const X=Math.pow(2,-lt),ht=Math.floor(q.image.width*X),Ft=Math.floor(q.image.height*X);T.setTexture2D(q,0),z.copyTexSubImage2D(3553,lt,0,0,C.x,C.y,ht,Ft),pt.unbindTexture()},this.copyTextureToTexture=function(C,q,lt,X=0){const ht=q.image.width,Ft=q.image.height,Ot=L.convert(lt.format),Bt=L.convert(lt.type);T.setTexture2D(lt,0),z.pixelStorei(37440,lt.flipY),z.pixelStorei(37441,lt.premultiplyAlpha),z.pixelStorei(3317,lt.unpackAlignment),q.isDataTexture?z.texSubImage2D(3553,X,C.x,C.y,ht,Ft,Ot,Bt,q.image.data):q.isCompressedTexture?z.compressedTexSubImage2D(3553,X,C.x,C.y,q.mipmaps[0].width,q.mipmaps[0].height,Ot,q.mipmaps[0].data):z.texSubImage2D(3553,X,C.x,C.y,Ot,Bt,q.image),X===0&&lt.generateMipmaps&&z.generateMipmap(3553),pt.unbindTexture()},this.copyTextureToTexture3D=function(C,q,lt,X,ht=0){if(p.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Ft=C.max.x-C.min.x+1,Ot=C.max.y-C.min.y+1,Bt=C.max.z-C.min.z+1,Ht=L.convert(X.format),Jt=L.convert(X.type);let jt;if(X.isData3DTexture)T.setTexture3D(X,0),jt=32879;else if(X.isDataArrayTexture)T.setTexture2DArray(X,0),jt=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}z.pixelStorei(37440,X.flipY),z.pixelStorei(37441,X.premultiplyAlpha),z.pixelStorei(3317,X.unpackAlignment);const qt=z.getParameter(3314),ge=z.getParameter(32878),$e=z.getParameter(3316),kn=z.getParameter(3315),wi=z.getParameter(32877),_e=lt.isCompressedTexture?lt.mipmaps[0]:lt.image;z.pixelStorei(3314,_e.width),z.pixelStorei(32878,_e.height),z.pixelStorei(3316,C.min.x),z.pixelStorei(3315,C.min.y),z.pixelStorei(32877,C.min.z),lt.isDataTexture||lt.isData3DTexture?z.texSubImage3D(jt,ht,q.x,q.y,q.z,Ft,Ot,Bt,Ht,Jt,_e.data):lt.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),z.compressedTexSubImage3D(jt,ht,q.x,q.y,q.z,Ft,Ot,Bt,Ht,_e.data)):z.texSubImage3D(jt,ht,q.x,q.y,q.z,Ft,Ot,Bt,Ht,Jt,_e),z.pixelStorei(3314,qt),z.pixelStorei(32878,ge),z.pixelStorei(3316,$e),z.pixelStorei(3315,kn),z.pixelStorei(32877,wi),ht===0&&X.generateMipmaps&&z.generateMipmap(jt),pt.unbindTexture()},this.initTexture=function(C){C.isCubeTexture?T.setTextureCube(C,0):C.isData3DTexture?T.setTexture3D(C,0):C.isDataArrayTexture||C.isCompressedArrayTexture?T.setTexture2DArray(C,0):T.setTexture2D(C,0),pt.unbindTexture()},this.resetState=function(){_=0,w=0,x=null,pt.reset(),G.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class $b extends vp{}$b.prototype.isWebGL1Renderer=!0;class Zb extends oe{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(t){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=t}}const qu=new I,Yu=new ee,$u=new ee,Kb=new I,Zu=new Dt;class Jb extends $t{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Dt,this.bindMatrixInverse=new Dt}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new ee,e=this.geometry.attributes.skinWeight;for(let n=0,s=e.count;n<s;n++){t.fromBufferAttribute(e,n);const r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const n=this.skeleton,s=this.geometry;Yu.fromBufferAttribute(s.attributes.skinIndex,t),$u.fromBufferAttribute(s.attributes.skinWeight,t),qu.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let r=0;r<4;r++){const o=$u.getComponent(r);if(o!==0){const a=Yu.getComponent(r);Zu.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),e.addScaledVector(Kb.copy(qu).applyMatrix4(Zu),o)}}return e.applyMatrix4(this.bindMatrixInverse)}}class Vl extends oe{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Qb extends Ce{constructor(t=null,e=1,n=1,s,r,o,a,l,c=Ee,h=Ee,u,f){super(null,o,a,l,c,h,s,r,u,f),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Ku=new Dt,t1=new Dt;class Tc{constructor(t=[],e=[]){this.uuid=ti(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,s=this.bones.length;n<s;n++)this.boneInverses.push(new Dt)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const n=new Dt;this.bones[t]&&n.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,s=this.boneTexture;for(let r=0,o=t.length;r<o;r++){const a=t[r]?t[r].matrixWorld:t1;Ku.multiplyMatrices(a,e[r]),Ku.toArray(n,r*16)}s!==null&&(s.needsUpdate=!0)}clone(){return new Tc(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(this.bones.length*4);t=sp(t),t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new Qb(e,t,t,ln,fi);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this.boneTextureSize=t,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const s=this.bones[e];if(s.name===t)return s}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,s=t.bones.length;n<s;n++){const r=t.bones[n];let o=e[r];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),o=new Vl),this.bones.push(o),this.boneInverses.push(new Dt().fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let s=0,r=e.length;s<r;s++){const o=e[s];t.bones.push(o.uuid);const a=n[s];t.boneInverses.push(a.toArray())}return t}}class yp extends ei{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Rt(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Ju=new I,Qu=new I,tf=new Dt,il=new ra,po=new Or;class wp extends oe{constructor(t=new fe,e=new yp){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let s=1,r=e.count;s<r;s++)Ju.fromBufferAttribute(e,s-1),Qu.fromBufferAttribute(e,s),n[s]=n[s-1],n[s]+=Ju.distanceTo(Qu);t.setAttribute("lineDistance",new Xt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,s=this.matrixWorld,r=t.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),po.copy(n.boundingSphere),po.applyMatrix4(s),po.radius+=r,t.ray.intersectsSphere(po)===!1)return;tf.copy(s).invert(),il.copy(t.ray).applyMatrix4(tf);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new I,h=new I,u=new I,f=new I,d=this.isLineSegments?2:1,g=n.index,m=n.attributes.position;if(g!==null){const _=Math.max(0,o.start),w=Math.min(g.count,o.start+o.count);for(let x=_,b=w-1;x<b;x+=d){const S=g.getX(x),P=g.getX(x+1);if(c.fromBufferAttribute(m,S),h.fromBufferAttribute(m,P),il.distanceSqToSegment(c,h,f,u)>l)continue;f.applyMatrix4(this.matrixWorld);const v=t.ray.origin.distanceTo(f);v<t.near||v>t.far||e.push({distance:v,point:u.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}else{const _=Math.max(0,o.start),w=Math.min(m.count,o.start+o.count);for(let x=_,b=w-1;x<b;x+=d){if(c.fromBufferAttribute(m,x),h.fromBufferAttribute(m,x+1),il.distanceSqToSegment(c,h,f,u)>l)continue;f.applyMatrix4(this.matrixWorld);const P=t.ray.origin.distanceTo(f);P<t.near||P>t.far||e.push({distance:P,point:u.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const s=e[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=s.length;r<o;r++){const a=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}const ef=new I,nf=new I;class e1 extends wp{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[];for(let s=0,r=e.count;s<r;s+=2)ef.fromBufferAttribute(e,s),nf.fromBufferAttribute(e,s+1),n[s]=s===0?0:n[s-1],n[s+1]=n[s]+ef.distanceTo(nf);t.setAttribute("lineDistance",new Xt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Mp extends ei{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Rt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const sf=new Dt,Hl=new ra,mo=new Or,go=new I;class Ec extends oe{constructor(t=new fe,e=new Mp){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,s=this.matrixWorld,r=t.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),mo.copy(n.boundingSphere),mo.applyMatrix4(s),mo.radius+=r,t.ray.intersectsSphere(mo)===!1)return;sf.copy(s).invert(),Hl.copy(t.ray).applyMatrix4(sf);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=n.index,u=n.attributes.position;if(c!==null){const f=Math.max(0,o.start),d=Math.min(c.count,o.start+o.count);for(let g=f,p=d;g<p;g++){const m=c.getX(g);go.fromBufferAttribute(u,m),rf(go,m,l,s,t,e,this)}}else{const f=Math.max(0,o.start),d=Math.min(u.count,o.start+o.count);for(let g=f,p=d;g<p;g++)go.fromBufferAttribute(u,g),rf(go,g,l,s,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const s=e[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=s.length;r<o;r++){const a=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function rf(i,t,e,n,s,r,o){const a=Hl.distanceSqToPoint(i);if(a<e){const l=new I;Hl.closestPointToPoint(i,l),l.applyMatrix4(n);const c=s.ray.origin.distanceTo(l);if(c<s.near||c>s.far)return;r.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:t,face:null,object:o})}}class Tn{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,s=this.getPoint(0),r=0;e.push(0);for(let o=1;o<=t;o++)n=this.getPoint(o/t),r+=n.distanceTo(s),e.push(r),s=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let s=0;const r=n.length;let o;e?o=e:o=t*n[r-1];let a=0,l=r-1,c;for(;a<=l;)if(s=Math.floor(a+(l-a)/2),c=n[s]-o,c<0)a=s+1;else if(c>0)l=s-1;else{l=s;break}if(s=l,n[s]===o)return s/(r-1);const h=n[s],f=n[s+1]-h,d=(o-h)/f;return(s+d)/(r-1)}getTangent(t,e){let s=t-1e-4,r=t+1e-4;s<0&&(s=0),r>1&&(r=1);const o=this.getPoint(s),a=this.getPoint(r),l=e||(o.isVector2?new xt:new I);return l.copy(a).sub(o).normalize(),l}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new I,s=[],r=[],o=[],a=new I,l=new Dt;for(let d=0;d<=t;d++){const g=d/t;s[d]=this.getTangentAt(g,new I)}r[0]=new I,o[0]=new I;let c=Number.MAX_VALUE;const h=Math.abs(s[0].x),u=Math.abs(s[0].y),f=Math.abs(s[0].z);h<=c&&(c=h,n.set(1,0,0)),u<=c&&(c=u,n.set(0,1,0)),f<=c&&n.set(0,0,1),a.crossVectors(s[0],n).normalize(),r[0].crossVectors(s[0],a),o[0].crossVectors(s[0],r[0]);for(let d=1;d<=t;d++){if(r[d]=r[d-1].clone(),o[d]=o[d-1].clone(),a.crossVectors(s[d-1],s[d]),a.length()>Number.EPSILON){a.normalize();const g=Math.acos(Ae(s[d-1].dot(s[d]),-1,1));r[d].applyMatrix4(l.makeRotationAxis(a,g))}o[d].crossVectors(s[d],r[d])}if(e===!0){let d=Math.acos(Ae(r[0].dot(r[t]),-1,1));d/=t,s[0].dot(a.crossVectors(r[0],r[t]))>0&&(d=-d);for(let g=1;g<=t;g++)r[g].applyMatrix4(l.makeRotationAxis(s[g],d*g)),o[g].crossVectors(s[g],r[g])}return{tangents:s,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Ac extends Tn{constructor(t=0,e=0,n=1,s=1,r=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=s,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(t,e){const n=e||new xt,s=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=s;for(;r>s;)r-=s;r<Number.EPSILON&&(o?r=0:r=s),this.aClockwise===!0&&!o&&(r===s?r=-s:r=r-s);const a=this.aStartAngle+t*r;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),f=l-this.aX,d=c-this.aY;l=f*h-d*u+this.aX,c=f*u+d*h+this.aY}return n.set(l,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class n1 extends Ac{constructor(t,e,n,s,r,o){super(t,e,n,n,s,r,o),this.isArcCurve=!0,this.type="ArcCurve"}}function Cc(){let i=0,t=0,e=0,n=0;function s(r,o,a,l){i=r,t=a,e=-3*r+3*o-2*a-l,n=2*r-2*o+a+l}return{initCatmullRom:function(r,o,a,l,c){s(o,a,c*(a-r),c*(l-o))},initNonuniformCatmullRom:function(r,o,a,l,c,h,u){let f=(o-r)/c-(a-r)/(c+h)+(a-o)/h,d=(a-o)/h-(l-o)/(h+u)+(l-a)/u;f*=h,d*=h,s(o,a,f,d)},calc:function(r){const o=r*r,a=o*r;return i+t*r+e*o+n*a}}}const _o=new I,sl=new Cc,rl=new Cc,ol=new Cc;class bp extends Tn{constructor(t=[],e=!1,n="centripetal",s=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=s}getPoint(t,e=new I){const n=e,s=this.points,r=s.length,o=(r-(this.closed?0:1))*t;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:l===0&&a===r-1&&(a=r-2,l=1);let c,h;this.closed||a>0?c=s[(a-1)%r]:(_o.subVectors(s[0],s[1]).add(s[0]),c=_o);const u=s[a%r],f=s[(a+1)%r];if(this.closed||a+2<r?h=s[(a+2)%r]:(_o.subVectors(s[r-1],s[r-2]).add(s[r-1]),h=_o),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let g=Math.pow(c.distanceToSquared(u),d),p=Math.pow(u.distanceToSquared(f),d),m=Math.pow(f.distanceToSquared(h),d);p<1e-4&&(p=1),g<1e-4&&(g=p),m<1e-4&&(m=p),sl.initNonuniformCatmullRom(c.x,u.x,f.x,h.x,g,p,m),rl.initNonuniformCatmullRom(c.y,u.y,f.y,h.y,g,p,m),ol.initNonuniformCatmullRom(c.z,u.z,f.z,h.z,g,p,m)}else this.curveType==="catmullrom"&&(sl.initCatmullRom(c.x,u.x,f.x,h.x,this.tension),rl.initCatmullRom(c.y,u.y,f.y,h.y,this.tension),ol.initCatmullRom(c.z,u.z,f.z,h.z,this.tension));return n.set(sl.calc(l),rl.calc(l),ol.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const s=t.points[e];this.points.push(s.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const s=this.points[e];t.points.push(s.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const s=t.points[e];this.points.push(new I().fromArray(s))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function of(i,t,e,n,s){const r=(n-t)*.5,o=(s-e)*.5,a=i*i,l=i*a;return(2*e-2*n+r+o)*l+(-3*e+3*n-2*r-o)*a+r*i+e}function i1(i,t){const e=1-i;return e*e*t}function s1(i,t){return 2*(1-i)*i*t}function r1(i,t){return i*i*t}function dr(i,t,e,n){return i1(i,t)+s1(i,e)+r1(i,n)}function o1(i,t){const e=1-i;return e*e*e*t}function a1(i,t){const e=1-i;return 3*e*e*i*t}function l1(i,t){return 3*(1-i)*i*i*t}function c1(i,t){return i*i*i*t}function pr(i,t,e,n,s){return o1(i,t)+a1(i,e)+l1(i,n)+c1(i,s)}class Sp extends Tn{constructor(t=new xt,e=new xt,n=new xt,s=new xt){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=s}getPoint(t,e=new xt){const n=e,s=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(pr(t,s.x,r.x,o.x,a.x),pr(t,s.y,r.y,o.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class h1 extends Tn{constructor(t=new I,e=new I,n=new I,s=new I){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=s}getPoint(t,e=new I){const n=e,s=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(pr(t,s.x,r.x,o.x,a.x),pr(t,s.y,r.y,o.y,a.y),pr(t,s.z,r.z,o.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Pc extends Tn{constructor(t=new xt,e=new xt){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new xt){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new xt;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class u1 extends Tn{constructor(t=new I,e=new I){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new I){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Tp extends Tn{constructor(t=new xt,e=new xt,n=new xt){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new xt){const n=e,s=this.v0,r=this.v1,o=this.v2;return n.set(dr(t,s.x,r.x,o.x),dr(t,s.y,r.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Ep extends Tn{constructor(t=new I,e=new I,n=new I){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new I){const n=e,s=this.v0,r=this.v1,o=this.v2;return n.set(dr(t,s.x,r.x,o.x),dr(t,s.y,r.y,o.y),dr(t,s.z,r.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Ap extends Tn{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new xt){const n=e,s=this.points,r=(s.length-1)*t,o=Math.floor(r),a=r-o,l=s[o===0?o:o-1],c=s[o],h=s[o>s.length-2?s.length-1:o+1],u=s[o>s.length-3?s.length-1:o+2];return n.set(of(a,l.x,c.x,h.x,u.x),of(a,l.y,c.y,h.y,u.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const s=t.points[e];this.points.push(s.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const s=this.points[e];t.points.push(s.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const s=t.points[e];this.points.push(new xt().fromArray(s))}return this}}var Cp=Object.freeze({__proto__:null,ArcCurve:n1,CatmullRomCurve3:bp,CubicBezierCurve:Sp,CubicBezierCurve3:h1,EllipseCurve:Ac,LineCurve:Pc,LineCurve3:u1,QuadraticBezierCurve:Tp,QuadraticBezierCurve3:Ep,SplineCurve:Ap});class f1 extends Tn{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Pc(e,t))}getPoint(t,e){const n=t*this.getLength(),s=this.getCurveLengths();let r=0;for(;r<s.length;){if(s[r]>=n){const o=s[r]-n,a=this.curves[r],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,e)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,s=this.curves.length;n<s;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let s=0,r=this.curves;s<r.length;s++){const o=r[s],a=o.isEllipseCurve?t*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?t*o.points.length:t,l=o.getPoints(a);for(let c=0;c<l.length;c++){const h=l[c];n&&n.equals(h)||(e.push(h),n=h)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const s=t.curves[e];this.curves.push(s.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const s=this.curves[e];t.curves.push(s.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const s=t.curves[e];this.curves.push(new Cp[s.type]().fromJSON(s))}return this}}class Gl extends f1{constructor(t){super(),this.type="Path",this.currentPoint=new xt,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Pc(this.currentPoint.clone(),new xt(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,s){const r=new Tp(this.currentPoint.clone(),new xt(t,e),new xt(n,s));return this.curves.push(r),this.currentPoint.set(n,s),this}bezierCurveTo(t,e,n,s,r,o){const a=new Sp(this.currentPoint.clone(),new xt(t,e),new xt(n,s),new xt(r,o));return this.curves.push(a),this.currentPoint.set(r,o),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Ap(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,s,r,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(t+a,e+l,n,s,r,o),this}absarc(t,e,n,s,r,o){return this.absellipse(t,e,n,n,s,r,o),this}ellipse(t,e,n,s,r,o,a,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(t+c,e+h,n,s,r,o,a,l),this}absellipse(t,e,n,s,r,o,a,l){const c=new Ac(t,e,n,s,r,o,a,l);if(this.curves.length>0){const u=c.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class kr extends fe{constructor(t=1,e=32,n=0,s=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:s},e=Math.max(3,e);const r=[],o=[],a=[],l=[],c=new I,h=new xt;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let u=0,f=3;u<=e;u++,f+=3){const d=n+u/e*s;c.x=t*Math.cos(d),c.y=t*Math.sin(d),o.push(c.x,c.y,c.z),a.push(0,0,1),h.x=(o[f]/t+1)/2,h.y=(o[f+1]/t+1)/2,l.push(h.x,h.y)}for(let u=1;u<=e;u++)r.push(u,u+1,0);this.setIndex(r),this.setAttribute("position",new Xt(o,3)),this.setAttribute("normal",new Xt(a,3)),this.setAttribute("uv",new Xt(l,2))}static fromJSON(t){return new kr(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class Yi extends fe{constructor(t=1,e=1,n=1,s=32,r=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:s,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:l};const c=this;s=Math.floor(s),r=Math.floor(r);const h=[],u=[],f=[],d=[];let g=0;const p=[],m=n/2;let _=0;w(),o===!1&&(t>0&&x(!0),e>0&&x(!1)),this.setIndex(h),this.setAttribute("position",new Xt(u,3)),this.setAttribute("normal",new Xt(f,3)),this.setAttribute("uv",new Xt(d,2));function w(){const b=new I,S=new I;let P=0;const D=(e-t)/n;for(let v=0;v<=r;v++){const A=[],R=v/r,j=R*(e-t)+t;for(let Q=0;Q<=s;Q++){const k=Q/s,O=k*l+a,J=Math.sin(O),Z=Math.cos(O);S.x=j*J,S.y=-R*n+m,S.z=j*Z,u.push(S.x,S.y,S.z),b.set(J,D,Z).normalize(),f.push(b.x,b.y,b.z),d.push(k,1-R),A.push(g++)}p.push(A)}for(let v=0;v<s;v++)for(let A=0;A<r;A++){const R=p[A][v],j=p[A+1][v],Q=p[A+1][v+1],k=p[A][v+1];h.push(R,j,k),h.push(j,Q,k),P+=6}c.addGroup(_,P,0),_+=P}function x(b){const S=g,P=new xt,D=new I;let v=0;const A=b===!0?t:e,R=b===!0?1:-1;for(let Q=1;Q<=s;Q++)u.push(0,m*R,0),f.push(0,R,0),d.push(.5,.5),g++;const j=g;for(let Q=0;Q<=s;Q++){const O=Q/s*l+a,J=Math.cos(O),Z=Math.sin(O);D.x=A*Z,D.y=m*R,D.z=A*J,u.push(D.x,D.y,D.z),f.push(0,R,0),P.x=J*.5+.5,P.y=Z*.5*R+.5,d.push(P.x,P.y),g++}for(let Q=0;Q<s;Q++){const k=S+Q,O=j+Q;b===!0?h.push(O,O+1,k):h.push(O+1,O,k),v+=3}c.addGroup(_,v,b===!0?1:2),_+=v}}static fromJSON(t){return new Yi(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Lc extends Yi{constructor(t=1,e=1,n=32,s=1,r=!1,o=0,a=Math.PI*2){super(0,t,e,n,s,r,o,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:s,openEnded:r,thetaStart:o,thetaLength:a}}static fromJSON(t){return new Lc(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}const xo=new I,vo=new I,al=new I,yo=new In;class d1 extends fe{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},t!==null){const s=Math.pow(10,4),r=Math.cos(Cs*e),o=t.getIndex(),a=t.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],h=["a","b","c"],u=new Array(3),f={},d=[];for(let g=0;g<l;g+=3){o?(c[0]=o.getX(g),c[1]=o.getX(g+1),c[2]=o.getX(g+2)):(c[0]=g,c[1]=g+1,c[2]=g+2);const{a:p,b:m,c:_}=yo;if(p.fromBufferAttribute(a,c[0]),m.fromBufferAttribute(a,c[1]),_.fromBufferAttribute(a,c[2]),yo.getNormal(al),u[0]=`${Math.round(p.x*s)},${Math.round(p.y*s)},${Math.round(p.z*s)}`,u[1]=`${Math.round(m.x*s)},${Math.round(m.y*s)},${Math.round(m.z*s)}`,u[2]=`${Math.round(_.x*s)},${Math.round(_.y*s)},${Math.round(_.z*s)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let w=0;w<3;w++){const x=(w+1)%3,b=u[w],S=u[x],P=yo[h[w]],D=yo[h[x]],v=`${b}_${S}`,A=`${S}_${b}`;A in f&&f[A]?(al.dot(f[A].normal)<=r&&(d.push(P.x,P.y,P.z),d.push(D.x,D.y,D.z)),f[A]=null):v in f||(f[v]={index0:c[w],index1:c[x],normal:al.clone()})}}for(const g in f)if(f[g]){const{index0:p,index1:m}=f[g];xo.fromBufferAttribute(a,p),vo.fromBufferAttribute(a,m),d.push(xo.x,xo.y,xo.z),d.push(vo.x,vo.y,vo.z)}this.setAttribute("position",new Xt(d,3))}}}class Ps extends Gl{constructor(t){super(t),this.uuid=ti(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,s=this.holes.length;n<s;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const s=t.holes[e];this.holes.push(s.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const s=this.holes[e];t.holes.push(s.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const s=t.holes[e];this.holes.push(new Gl().fromJSON(s))}return this}}const p1={triangulate:function(i,t,e=2){const n=t&&t.length,s=n?t[0]*e:i.length;let r=Pp(i,0,s,e,!0);const o=[];if(!r||r.next===r.prev)return o;let a,l,c,h,u,f,d;if(n&&(r=v1(i,t,r,e)),i.length>80*e){a=c=i[0],l=h=i[1];for(let g=e;g<s;g+=e)u=i[g],f=i[g+1],u<a&&(a=u),f<l&&(l=f),u>c&&(c=u),f>h&&(h=f);d=Math.max(c-a,h-l),d=d!==0?32767/d:0}return Pr(r,o,e,a,l,d,0),o}};function Pp(i,t,e,n,s){let r,o;if(s===L1(i,t,e,n)>0)for(r=t;r<e;r+=n)o=af(r,i[r],i[r+1],o);else for(r=e-n;r>=t;r-=n)o=af(r,i[r],i[r+1],o);return o&&aa(o,o.next)&&(Rr(o),o=o.next),o}function ji(i,t){if(!i)return i;t||(t=i);let e=i,n;do if(n=!1,!e.steiner&&(aa(e,e.next)||ue(e.prev,e,e.next)===0)){if(Rr(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function Pr(i,t,e,n,s,r,o){if(!i)return;!o&&r&&S1(i,n,s,r);let a=i,l,c;for(;i.prev!==i.next;){if(l=i.prev,c=i.next,r?g1(i,n,s,r):m1(i)){t.push(l.i/e|0),t.push(i.i/e|0),t.push(c.i/e|0),Rr(i),i=c.next,a=c.next;continue}if(i=c,i===a){o?o===1?(i=_1(ji(i),t,e),Pr(i,t,e,n,s,r,2)):o===2&&x1(i,t,e,n,s,r):Pr(ji(i),t,e,n,s,r,1);break}}}function m1(i){const t=i.prev,e=i,n=i.next;if(ue(t,e,n)>=0)return!1;const s=t.x,r=e.x,o=n.x,a=t.y,l=e.y,c=n.y,h=s<r?s<o?s:o:r<o?r:o,u=a<l?a<c?a:c:l<c?l:c,f=s>r?s>o?s:o:r>o?r:o,d=a>l?a>c?a:c:l>c?l:c;let g=n.next;for(;g!==t;){if(g.x>=h&&g.x<=f&&g.y>=u&&g.y<=d&&ys(s,a,r,l,o,c,g.x,g.y)&&ue(g.prev,g,g.next)>=0)return!1;g=g.next}return!0}function g1(i,t,e,n){const s=i.prev,r=i,o=i.next;if(ue(s,r,o)>=0)return!1;const a=s.x,l=r.x,c=o.x,h=s.y,u=r.y,f=o.y,d=a<l?a<c?a:c:l<c?l:c,g=h<u?h<f?h:f:u<f?u:f,p=a>l?a>c?a:c:l>c?l:c,m=h>u?h>f?h:f:u>f?u:f,_=Wl(d,g,t,e,n),w=Wl(p,m,t,e,n);let x=i.prevZ,b=i.nextZ;for(;x&&x.z>=_&&b&&b.z<=w;){if(x.x>=d&&x.x<=p&&x.y>=g&&x.y<=m&&x!==s&&x!==o&&ys(a,h,l,u,c,f,x.x,x.y)&&ue(x.prev,x,x.next)>=0||(x=x.prevZ,b.x>=d&&b.x<=p&&b.y>=g&&b.y<=m&&b!==s&&b!==o&&ys(a,h,l,u,c,f,b.x,b.y)&&ue(b.prev,b,b.next)>=0))return!1;b=b.nextZ}for(;x&&x.z>=_;){if(x.x>=d&&x.x<=p&&x.y>=g&&x.y<=m&&x!==s&&x!==o&&ys(a,h,l,u,c,f,x.x,x.y)&&ue(x.prev,x,x.next)>=0)return!1;x=x.prevZ}for(;b&&b.z<=w;){if(b.x>=d&&b.x<=p&&b.y>=g&&b.y<=m&&b!==s&&b!==o&&ys(a,h,l,u,c,f,b.x,b.y)&&ue(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function _1(i,t,e){let n=i;do{const s=n.prev,r=n.next.next;!aa(s,r)&&Lp(s,n,n.next,r)&&Lr(s,r)&&Lr(r,s)&&(t.push(s.i/e|0),t.push(n.i/e|0),t.push(r.i/e|0),Rr(n),Rr(n.next),n=i=r),n=n.next}while(n!==i);return ji(n)}function x1(i,t,e,n,s,r){let o=i;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&A1(o,a)){let l=Rp(o,a);o=ji(o,o.next),l=ji(l,l.next),Pr(o,t,e,n,s,r,0),Pr(l,t,e,n,s,r,0);return}a=a.next}o=o.next}while(o!==i)}function v1(i,t,e,n){const s=[];let r,o,a,l,c;for(r=0,o=t.length;r<o;r++)a=t[r]*n,l=r<o-1?t[r+1]*n:i.length,c=Pp(i,a,l,n,!1),c===c.next&&(c.steiner=!0),s.push(E1(c));for(s.sort(y1),r=0;r<s.length;r++)e=w1(s[r],e);return e}function y1(i,t){return i.x-t.x}function w1(i,t){const e=M1(i,t);if(!e)return t;const n=Rp(e,i);return ji(n,n.next),ji(e,e.next)}function M1(i,t){let e=t,n=-1/0,s;const r=i.x,o=i.y;do{if(o<=e.y&&o>=e.next.y&&e.next.y!==e.y){const f=e.x+(o-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(f<=r&&f>n&&(n=f,s=e.x<e.next.x?e:e.next,f===r))return s}e=e.next}while(e!==t);if(!s)return null;const a=s,l=s.x,c=s.y;let h=1/0,u;e=s;do r>=e.x&&e.x>=l&&r!==e.x&&ys(o<c?r:n,o,l,c,o<c?n:r,o,e.x,e.y)&&(u=Math.abs(o-e.y)/(r-e.x),Lr(e,i)&&(u<h||u===h&&(e.x>s.x||e.x===s.x&&b1(s,e)))&&(s=e,h=u)),e=e.next;while(e!==a);return s}function b1(i,t){return ue(i.prev,i,t.prev)<0&&ue(t.next,i,i.next)<0}function S1(i,t,e,n){let s=i;do s.z===0&&(s.z=Wl(s.x,s.y,t,e,n)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next;while(s!==i);s.prevZ.nextZ=null,s.prevZ=null,T1(s)}function T1(i){let t,e,n,s,r,o,a,l,c=1;do{for(e=i,i=null,r=null,o=0;e;){for(o++,n=e,a=0,t=0;t<c&&(a++,n=n.nextZ,!!n);t++);for(l=c;a>0||l>0&&n;)a!==0&&(l===0||!n||e.z<=n.z)?(s=e,e=e.nextZ,a--):(s=n,n=n.nextZ,l--),r?r.nextZ=s:i=s,s.prevZ=r,r=s;e=n}r.nextZ=null,c*=2}while(o>1);return i}function Wl(i,t,e,n,s){return i=(i-e)*s|0,t=(t-n)*s|0,i=(i|i<<8)&16711935,i=(i|i<<4)&252645135,i=(i|i<<2)&858993459,i=(i|i<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,i|t<<1}function E1(i){let t=i,e=i;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==i);return e}function ys(i,t,e,n,s,r,o,a){return(s-o)*(t-a)>=(i-o)*(r-a)&&(i-o)*(n-a)>=(e-o)*(t-a)&&(e-o)*(r-a)>=(s-o)*(n-a)}function A1(i,t){return i.next.i!==t.i&&i.prev.i!==t.i&&!C1(i,t)&&(Lr(i,t)&&Lr(t,i)&&P1(i,t)&&(ue(i.prev,i,t.prev)||ue(i,t.prev,t))||aa(i,t)&&ue(i.prev,i,i.next)>0&&ue(t.prev,t,t.next)>0)}function ue(i,t,e){return(t.y-i.y)*(e.x-t.x)-(t.x-i.x)*(e.y-t.y)}function aa(i,t){return i.x===t.x&&i.y===t.y}function Lp(i,t,e,n){const s=Mo(ue(i,t,e)),r=Mo(ue(i,t,n)),o=Mo(ue(e,n,i)),a=Mo(ue(e,n,t));return!!(s!==r&&o!==a||s===0&&wo(i,e,t)||r===0&&wo(i,n,t)||o===0&&wo(e,i,n)||a===0&&wo(e,t,n))}function wo(i,t,e){return t.x<=Math.max(i.x,e.x)&&t.x>=Math.min(i.x,e.x)&&t.y<=Math.max(i.y,e.y)&&t.y>=Math.min(i.y,e.y)}function Mo(i){return i>0?1:i<0?-1:0}function C1(i,t){let e=i;do{if(e.i!==i.i&&e.next.i!==i.i&&e.i!==t.i&&e.next.i!==t.i&&Lp(e,e.next,i,t))return!0;e=e.next}while(e!==i);return!1}function Lr(i,t){return ue(i.prev,i,i.next)<0?ue(i,t,i.next)>=0&&ue(i,i.prev,t)>=0:ue(i,t,i.prev)<0||ue(i,i.next,t)<0}function P1(i,t){let e=i,n=!1;const s=(i.x+t.x)/2,r=(i.y+t.y)/2;do e.y>r!=e.next.y>r&&e.next.y!==e.y&&s<(e.next.x-e.x)*(r-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==i);return n}function Rp(i,t){const e=new Xl(i.i,i.x,i.y),n=new Xl(t.i,t.x,t.y),s=i.next,r=t.prev;return i.next=t,t.prev=i,e.next=s,s.prev=e,n.next=e,e.prev=n,r.next=n,n.prev=r,n}function af(i,t,e,n){const s=new Xl(i,t,e);return n?(s.next=n.next,s.prev=n,n.next.prev=s,n.next=s):(s.prev=s,s.next=s),s}function Rr(i){i.next.prev=i.prev,i.prev.next=i.next,i.prevZ&&(i.prevZ.nextZ=i.nextZ),i.nextZ&&(i.nextZ.prevZ=i.prevZ)}function Xl(i,t,e){this.i=i,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function L1(i,t,e,n){let s=0;for(let r=t,o=e-n;r<e;r+=n)s+=(i[o]-i[r])*(i[r+1]+i[o+1]),o=r;return s}class Kn{static area(t){const e=t.length;let n=0;for(let s=e-1,r=0;r<e;s=r++)n+=t[s].x*t[r].y-t[r].x*t[s].y;return n*.5}static isClockWise(t){return Kn.area(t)<0}static triangulateShape(t,e){const n=[],s=[],r=[];lf(t),cf(n,t);let o=t.length;e.forEach(lf);for(let l=0;l<e.length;l++)s.push(o),o+=e[l].length,cf(n,e[l]);const a=p1.triangulate(n,s);for(let l=0;l<a.length;l+=3)r.push(a.slice(l,l+3));return r}}function lf(i){const t=i.length;t>2&&i[t-1].equals(i[0])&&i.pop()}function cf(i,t){for(let e=0;e<t.length;e++)i.push(t[e].x),i.push(t[e].y)}class Rc extends fe{constructor(t=new Ps([new xt(.5,.5),new xt(-.5,.5),new xt(-.5,-.5),new xt(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,s=[],r=[];for(let a=0,l=t.length;a<l;a++){const c=t[a];o(c)}this.setAttribute("position",new Xt(s,3)),this.setAttribute("uv",new Xt(r,2)),this.computeVertexNormals();function o(a){const l=[],c=e.curveSegments!==void 0?e.curveSegments:12,h=e.steps!==void 0?e.steps:1,u=e.depth!==void 0?e.depth:1;let f=e.bevelEnabled!==void 0?e.bevelEnabled:!0,d=e.bevelThickness!==void 0?e.bevelThickness:.2,g=e.bevelSize!==void 0?e.bevelSize:d-.1,p=e.bevelOffset!==void 0?e.bevelOffset:0,m=e.bevelSegments!==void 0?e.bevelSegments:3;const _=e.extrudePath,w=e.UVGenerator!==void 0?e.UVGenerator:R1;let x,b=!1,S,P,D,v;_&&(x=_.getSpacedPoints(h),b=!0,f=!1,S=_.computeFrenetFrames(h,!1),P=new I,D=new I,v=new I),f||(m=0,d=0,g=0,p=0);const A=a.extractPoints(c);let R=A.shape;const j=A.holes;if(!Kn.isClockWise(R)){R=R.reverse();for(let y=0,T=j.length;y<T;y++){const F=j[y];Kn.isClockWise(F)&&(j[y]=F.reverse())}}const k=Kn.triangulateShape(R,j),O=R;for(let y=0,T=j.length;y<T;y++){const F=j[y];R=R.concat(F)}function J(y,T,F){return T||console.error("THREE.ExtrudeGeometry: vec does not exist"),T.clone().multiplyScalar(F).add(y)}const Z=R.length,it=k.length;function Y(y,T,F){let H,B,et;const st=y.x-T.x,$=y.y-T.y,ut=F.x-y.x,nt=F.y-y.y,E=st*st+$*$,M=st*nt-$*ut;if(Math.abs(M)>Number.EPSILON){const U=Math.sqrt(E),K=Math.sqrt(ut*ut+nt*nt),rt=T.x-$/U,mt=T.y+st/U,Mt=F.x-nt/K,L=F.y+ut/K,G=((Mt-rt)*nt-(L-mt)*ut)/(st*nt-$*ut);H=rt+st*G-y.x,B=mt+$*G-y.y;const bt=H*H+B*B;if(bt<=2)return new xt(H,B);et=Math.sqrt(bt/2)}else{let U=!1;st>Number.EPSILON?ut>Number.EPSILON&&(U=!0):st<-Number.EPSILON?ut<-Number.EPSILON&&(U=!0):Math.sign($)===Math.sign(nt)&&(U=!0),U?(H=-$,B=st,et=Math.sqrt(E)):(H=st,B=$,et=Math.sqrt(E/2))}return new xt(H/et,B/et)}const ft=[];for(let y=0,T=O.length,F=T-1,H=y+1;y<T;y++,F++,H++)F===T&&(F=0),H===T&&(H=0),ft[y]=Y(O[y],O[F],O[H]);const dt=[];let yt,W=ft.concat();for(let y=0,T=j.length;y<T;y++){const F=j[y];yt=[];for(let H=0,B=F.length,et=B-1,st=H+1;H<B;H++,et++,st++)et===B&&(et=0),st===B&&(st=0),yt[H]=Y(F[H],F[et],F[st]);dt.push(yt),W=W.concat(yt)}for(let y=0;y<m;y++){const T=y/m,F=d*Math.cos(T*Math.PI/2),H=g*Math.sin(T*Math.PI/2)+p;for(let B=0,et=O.length;B<et;B++){const st=J(O[B],ft[B],H);tt(st.x,st.y,-F)}for(let B=0,et=j.length;B<et;B++){const st=j[B];yt=dt[B];for(let $=0,ut=st.length;$<ut;$++){const nt=J(st[$],yt[$],H);tt(nt.x,nt.y,-F)}}}const ot=g+p;for(let y=0;y<Z;y++){const T=f?J(R[y],W[y],ot):R[y];b?(D.copy(S.normals[0]).multiplyScalar(T.x),P.copy(S.binormals[0]).multiplyScalar(T.y),v.copy(x[0]).add(D).add(P),tt(v.x,v.y,v.z)):tt(T.x,T.y,0)}for(let y=1;y<=h;y++)for(let T=0;T<Z;T++){const F=f?J(R[T],W[T],ot):R[T];b?(D.copy(S.normals[y]).multiplyScalar(F.x),P.copy(S.binormals[y]).multiplyScalar(F.y),v.copy(x[y]).add(D).add(P),tt(v.x,v.y,v.z)):tt(F.x,F.y,u/h*y)}for(let y=m-1;y>=0;y--){const T=y/m,F=d*Math.cos(T*Math.PI/2),H=g*Math.sin(T*Math.PI/2)+p;for(let B=0,et=O.length;B<et;B++){const st=J(O[B],ft[B],H);tt(st.x,st.y,u+F)}for(let B=0,et=j.length;B<et;B++){const st=j[B];yt=dt[B];for(let $=0,ut=st.length;$<ut;$++){const nt=J(st[$],yt[$],H);b?tt(nt.x,nt.y+x[h-1].y,x[h-1].x+F):tt(nt.x,nt.y,u+F)}}}vt(),N();function vt(){const y=s.length/3;if(f){let T=0,F=Z*T;for(let H=0;H<it;H++){const B=k[H];ct(B[2]+F,B[1]+F,B[0]+F)}T=h+m*2,F=Z*T;for(let H=0;H<it;H++){const B=k[H];ct(B[0]+F,B[1]+F,B[2]+F)}}else{for(let T=0;T<it;T++){const F=k[T];ct(F[2],F[1],F[0])}for(let T=0;T<it;T++){const F=k[T];ct(F[0]+Z*h,F[1]+Z*h,F[2]+Z*h)}}n.addGroup(y,s.length/3-y,0)}function N(){const y=s.length/3;let T=0;z(O,T),T+=O.length;for(let F=0,H=j.length;F<H;F++){const B=j[F];z(B,T),T+=B.length}n.addGroup(y,s.length/3-y,1)}function z(y,T){let F=y.length;for(;--F>=0;){const H=F;let B=F-1;B<0&&(B=y.length-1);for(let et=0,st=h+m*2;et<st;et++){const $=Z*et,ut=Z*(et+1),nt=T+H+$,E=T+B+$,M=T+B+ut,U=T+H+ut;gt(nt,E,M,U)}}}function tt(y,T,F){l.push(y),l.push(T),l.push(F)}function ct(y,T,F){pt(y),pt(T),pt(F);const H=s.length/3,B=w.generateTopUV(n,s,H-3,H-2,H-1);wt(B[0]),wt(B[1]),wt(B[2])}function gt(y,T,F,H){pt(y),pt(T),pt(H),pt(T),pt(F),pt(H);const B=s.length/3,et=w.generateSideWallUV(n,s,B-6,B-3,B-2,B-1);wt(et[0]),wt(et[1]),wt(et[3]),wt(et[1]),wt(et[2]),wt(et[3])}function pt(y){s.push(l[y*3+0]),s.push(l[y*3+1]),s.push(l[y*3+2])}function wt(y){r.push(y.x),r.push(y.y)}}}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return I1(e,n,t)}static fromJSON(t,e){const n=[];for(let r=0,o=t.shapes.length;r<o;r++){const a=e[t.shapes[r]];n.push(a)}const s=t.options.extrudePath;return s!==void 0&&(t.options.extrudePath=new Cp[s.type]().fromJSON(s)),new Rc(n,t.options)}}const R1={generateTopUV:function(i,t,e,n,s){const r=t[e*3],o=t[e*3+1],a=t[n*3],l=t[n*3+1],c=t[s*3],h=t[s*3+1];return[new xt(r,o),new xt(a,l),new xt(c,h)]},generateSideWallUV:function(i,t,e,n,s,r){const o=t[e*3],a=t[e*3+1],l=t[e*3+2],c=t[n*3],h=t[n*3+1],u=t[n*3+2],f=t[s*3],d=t[s*3+1],g=t[s*3+2],p=t[r*3],m=t[r*3+1],_=t[r*3+2];return Math.abs(a-h)<Math.abs(o-c)?[new xt(o,1-l),new xt(c,1-u),new xt(f,1-g),new xt(p,1-_)]:[new xt(a,1-l),new xt(h,1-u),new xt(d,1-g),new xt(m,1-_)]}};function I1(i,t,e){if(e.shapes=[],Array.isArray(i))for(let n=0,s=i.length;n<s;n++){const r=i[n];e.shapes.push(r.uuid)}else e.shapes.push(i.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class Ic extends fe{constructor(t=.5,e=1,n=32,s=1,r=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:s,thetaStart:r,thetaLength:o},n=Math.max(3,n),s=Math.max(1,s);const a=[],l=[],c=[],h=[];let u=t;const f=(e-t)/s,d=new I,g=new xt;for(let p=0;p<=s;p++){for(let m=0;m<=n;m++){const _=r+m/n*o;d.x=u*Math.cos(_),d.y=u*Math.sin(_),l.push(d.x,d.y,d.z),c.push(0,0,1),g.x=(d.x/e+1)/2,g.y=(d.y/e+1)/2,h.push(g.x,g.y)}u+=f}for(let p=0;p<s;p++){const m=p*(n+1);for(let _=0;_<n;_++){const w=_+m,x=w,b=w+n+1,S=w+n+2,P=w+1;a.push(x,b,P),a.push(b,S,P)}}this.setIndex(a),this.setAttribute("position",new Xt(l,3)),this.setAttribute("normal",new Xt(c,3)),this.setAttribute("uv",new Xt(h,2))}static fromJSON(t){return new Ic(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class Dc extends fe{constructor(t=new Ps([new xt(0,.5),new xt(-.5,-.5),new xt(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],s=[],r=[],o=[];let a=0,l=0;if(Array.isArray(t)===!1)c(t);else for(let h=0;h<t.length;h++)c(t[h]),this.addGroup(a,l,h),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new Xt(s,3)),this.setAttribute("normal",new Xt(r,3)),this.setAttribute("uv",new Xt(o,2));function c(h){const u=s.length/3,f=h.extractPoints(e);let d=f.shape;const g=f.holes;Kn.isClockWise(d)===!1&&(d=d.reverse());for(let m=0,_=g.length;m<_;m++){const w=g[m];Kn.isClockWise(w)===!0&&(g[m]=w.reverse())}const p=Kn.triangulateShape(d,g);for(let m=0,_=g.length;m<_;m++){const w=g[m];d=d.concat(w)}for(let m=0,_=d.length;m<_;m++){const w=d[m];s.push(w.x,w.y,0),r.push(0,0,1),o.push(w.x,w.y)}for(let m=0,_=p.length;m<_;m++){const w=p[m],x=w[0]+u,b=w[1]+u,S=w[2]+u;n.push(x,b,S),l+=3}}}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return D1(e,t)}static fromJSON(t,e){const n=[];for(let s=0,r=t.shapes.length;s<r;s++){const o=e[t.shapes[s]];n.push(o)}return new Dc(n,t.curveSegments)}}function D1(i,t){if(t.shapes=[],Array.isArray(i))for(let e=0,n=i.length;e<n;e++){const s=i[e];t.shapes.push(s.uuid)}else t.shapes.push(i.uuid);return t}class On extends fe{constructor(t=1,e=32,n=16,s=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:s,phiLength:r,thetaStart:o,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let c=0;const h=[],u=new I,f=new I,d=[],g=[],p=[],m=[];for(let _=0;_<=n;_++){const w=[],x=_/n;let b=0;_==0&&o==0?b=.5/e:_==n&&l==Math.PI&&(b=-.5/e);for(let S=0;S<=e;S++){const P=S/e;u.x=-t*Math.cos(s+P*r)*Math.sin(o+x*a),u.y=t*Math.cos(o+x*a),u.z=t*Math.sin(s+P*r)*Math.sin(o+x*a),g.push(u.x,u.y,u.z),f.copy(u).normalize(),p.push(f.x,f.y,f.z),m.push(P+b,1-x),w.push(c++)}h.push(w)}for(let _=0;_<n;_++)for(let w=0;w<e;w++){const x=h[_][w+1],b=h[_][w],S=h[_+1][w],P=h[_+1][w+1];(_!==0||o>0)&&d.push(x,b,P),(_!==n-1||l<Math.PI)&&d.push(b,S,P)}this.setIndex(d),this.setAttribute("position",new Xt(g,3)),this.setAttribute("normal",new Xt(p,3)),this.setAttribute("uv",new Xt(m,2))}static fromJSON(t){return new On(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Fn extends ei{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Rt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Rt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=sa,this.normalScale=new xt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class ll extends ei{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Rt(16777215),this.specular=new Rt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Rt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=sa,this.normalScale=new xt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=na,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Fc extends ei{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Rt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Rt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=sa,this.normalScale=new xt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=na,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}function li(i,t,e){return Ip(i)?new i.constructor(i.subarray(t,e!==void 0?e:i.length)):i.slice(t,e)}function bo(i,t,e){return!i||!e&&i.constructor===t?i:typeof t.BYTES_PER_ELEMENT=="number"?new t(i):Array.prototype.slice.call(i)}function Ip(i){return ArrayBuffer.isView(i)&&!(i instanceof DataView)}function F1(i){function t(s,r){return i[s]-i[r]}const e=i.length,n=new Array(e);for(let s=0;s!==e;++s)n[s]=s;return n.sort(t),n}function hf(i,t,e){const n=i.length,s=new i.constructor(n);for(let r=0,o=0;o!==n;++r){const a=e[r]*t;for(let l=0;l!==t;++l)s[o++]=i[a+l]}return s}function Dp(i,t,e,n){let s=1,r=i[0];for(;r!==void 0&&r[n]===void 0;)r=i[s++];if(r===void 0)return;let o=r[n];if(o!==void 0)if(Array.isArray(o))do o=r[n],o!==void 0&&(t.push(r.time),e.push.apply(e,o)),r=i[s++];while(r!==void 0);else if(o.toArray!==void 0)do o=r[n],o!==void 0&&(t.push(r.time),o.toArray(e,e.length)),r=i[s++];while(r!==void 0);else do o=r[n],o!==void 0&&(t.push(r.time),e.push(o)),r=i[s++];while(r!==void 0)}class la{constructor(t,e,n,s){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=s!==void 0?s:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,s=e[n],r=e[n-1];n:{t:{let o;e:{i:if(!(t<s)){for(let a=n+2;;){if(s===void 0){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(r=s,s=e[++n],t<s)break t}o=e.length;break e}if(!(t>=r)){const a=e[1];t<a&&(n=2,r=a);for(let l=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(s=r,r=e[--n-1],t>=r)break t}o=n,n=0;break e}break n}for(;n<o;){const a=n+o>>>1;t<e[a]?o=a:n=a+1}if(s=e[n],r=e[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(s===void 0)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,s)}return this.interpolate_(n,r,t,s)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,s=this.valueSize,r=t*s;for(let o=0;o!==s;++o)e[o]=n[r+o];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class z1 extends la{constructor(t,e,n,s){super(t,e,n,s),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:cu,endingEnd:cu}}intervalChanged_(t,e,n){const s=this.parameterPositions;let r=t-2,o=t+1,a=s[r],l=s[o];if(a===void 0)switch(this.getSettings_().endingStart){case hu:r=t,a=2*e-n;break;case uu:r=s.length-2,a=e+s[r]-s[r+1];break;default:r=t,a=n}if(l===void 0)switch(this.getSettings_().endingEnd){case hu:o=t,l=2*n-e;break;case uu:o=1,l=n+s[1]-s[0];break;default:o=t-1,l=e}const c=(n-e)*.5,h=this.valueSize;this._weightPrev=c/(e-a),this._weightNext=c/(l-n),this._offsetPrev=r*h,this._offsetNext=o*h}interpolate_(t,e,n,s){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=t*a,c=l-a,h=this._offsetPrev,u=this._offsetNext,f=this._weightPrev,d=this._weightNext,g=(n-e)/(s-e),p=g*g,m=p*g,_=-f*m+2*f*p-f*g,w=(1+f)*m+(-1.5-2*f)*p+(-.5+f)*g+1,x=(-1-d)*m+(1.5+d)*p+.5*g,b=d*m-d*p;for(let S=0;S!==a;++S)r[S]=_*o[h+S]+w*o[c+S]+x*o[l+S]+b*o[u+S];return r}}class O1 extends la{constructor(t,e,n,s){super(t,e,n,s)}interpolate_(t,e,n,s){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=t*a,c=l-a,h=(n-e)/(s-e),u=1-h;for(let f=0;f!==a;++f)r[f]=o[c+f]*u+o[l+f]*h;return r}}class N1 extends la{constructor(t,e,n,s){super(t,e,n,s)}interpolate_(t){return this.copySampleValue_(t-1)}}class Nn{constructor(t,e,n,s){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=bo(e,this.TimeBufferType),this.values=bo(n,this.ValueBufferType),this.setInterpolation(s||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:bo(t.times,Array),values:bo(t.values,Array)};const s=t.getInterpolation();s!==t.DefaultInterpolation&&(n.interpolation=s)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new N1(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new O1(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new z1(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case ko:e=this.InterpolantFactoryMethodDiscrete;break;case Bo:e=this.InterpolantFactoryMethodLinear;break;case Ra:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ko;case this.InterpolantFactoryMethodLinear:return Bo;case this.InterpolantFactoryMethodSmooth:return Ra}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let n=0,s=e.length;n!==s;++n)e[n]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let n=0,s=e.length;n!==s;++n)e[n]*=t}return this}trim(t,e){const n=this.times,s=n.length;let r=0,o=s-1;for(;r!==s&&n[r]<t;)++r;for(;o!==-1&&n[o]>e;)--o;if(++o,r!==0||o!==s){r>=o&&(o=Math.max(o,1),r=o-1);const a=this.getValueSize();this.times=li(n,r,o),this.values=li(this.values,r*a,o*a)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,s=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let o=null;for(let a=0;a!==r;a++){const l=n[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),t=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),t=!1;break}o=l}if(s!==void 0&&Ip(s))for(let a=0,l=s.length;a!==l;++a){const c=s[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),t=!1;break}}return t}optimize(){const t=li(this.times),e=li(this.values),n=this.getValueSize(),s=this.getInterpolation()===Ra,r=t.length-1;let o=1;for(let a=1;a<r;++a){let l=!1;const c=t[a],h=t[a+1];if(c!==h&&(a!==1||c!==t[0]))if(s)l=!0;else{const u=a*n,f=u-n,d=u+n;for(let g=0;g!==n;++g){const p=e[u+g];if(p!==e[f+g]||p!==e[d+g]){l=!0;break}}}if(l){if(a!==o){t[o]=t[a];const u=a*n,f=o*n;for(let d=0;d!==n;++d)e[f+d]=e[u+d]}++o}}if(r>0){t[o]=t[r];for(let a=r*n,l=o*n,c=0;c!==n;++c)e[l+c]=e[a+c];++o}return o!==t.length?(this.times=li(t,0,o),this.values=li(e,0,o*n)):(this.times=t,this.values=e),this}clone(){const t=li(this.times,0),e=li(this.values,0),n=this.constructor,s=new n(this.name,t,e);return s.createInterpolant=this.createInterpolant,s}}Nn.prototype.TimeBufferType=Float32Array;Nn.prototype.ValueBufferType=Float32Array;Nn.prototype.DefaultInterpolation=Bo;class Hs extends Nn{}Hs.prototype.ValueTypeName="bool";Hs.prototype.ValueBufferType=Array;Hs.prototype.DefaultInterpolation=ko;Hs.prototype.InterpolantFactoryMethodLinear=void 0;Hs.prototype.InterpolantFactoryMethodSmooth=void 0;class Fp extends Nn{}Fp.prototype.ValueTypeName="color";class Ir extends Nn{}Ir.prototype.ValueTypeName="number";class U1 extends la{constructor(t,e,n,s){super(t,e,n,s)}interpolate_(t,e,n,s){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(n-e)/(s-e);let c=t*a;for(let h=c+a;c!==h;c+=4)un.slerpFlat(r,0,o,c-a,o,c,l);return r}}class Gs extends Nn{InterpolantFactoryMethodLinear(t){return new U1(this.times,this.values,this.getValueSize(),t)}}Gs.prototype.ValueTypeName="quaternion";Gs.prototype.DefaultInterpolation=Bo;Gs.prototype.InterpolantFactoryMethodSmooth=void 0;class Ws extends Nn{}Ws.prototype.ValueTypeName="string";Ws.prototype.ValueBufferType=Array;Ws.prototype.DefaultInterpolation=ko;Ws.prototype.InterpolantFactoryMethodLinear=void 0;Ws.prototype.InterpolantFactoryMethodSmooth=void 0;class Dr extends Nn{}Dr.prototype.ValueTypeName="vector";class k1{constructor(t,e=-1,n,s=Dx){this.name=t,this.tracks=n,this.duration=e,this.blendMode=s,this.uuid=ti(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,s=1/(t.fps||1);for(let o=0,a=n.length;o!==a;++o)e.push(V1(n[o]).scale(s));const r=new this(t.name,t.duration,e,t.blendMode);return r.uuid=t.uuid,r}static toJSON(t){const e=[],n=t.tracks,s={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let r=0,o=n.length;r!==o;++r)e.push(Nn.toJSON(n[r]));return s}static CreateFromMorphTargetSequence(t,e,n,s){const r=e.length,o=[];for(let a=0;a<r;a++){let l=[],c=[];l.push((a+r-1)%r,a,(a+1)%r),c.push(0,1,0);const h=F1(l);l=hf(l,1,h),c=hf(c,1,h),!s&&l[0]===0&&(l.push(r),c.push(c[0])),o.push(new Ir(".morphTargetInfluences["+e[a].name+"]",l,c).scale(1/n))}return new this(t,-1,o)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const s=t;n=s.geometry&&s.geometry.animations||s.animations}for(let s=0;s<n.length;s++)if(n[s].name===e)return n[s];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const s={},r=/^([\w-]*?)([\d]+)$/;for(let a=0,l=t.length;a<l;a++){const c=t[a],h=c.name.match(r);if(h&&h.length>1){const u=h[1];let f=s[u];f||(s[u]=f=[]),f.push(c)}}const o=[];for(const a in s)o.push(this.CreateFromMorphTargetSequence(a,s[a],e,n));return o}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(u,f,d,g,p){if(d.length!==0){const m=[],_=[];Dp(d,m,_,g),m.length!==0&&p.push(new u(f,m,_))}},s=[],r=t.name||"default",o=t.fps||30,a=t.blendMode;let l=t.length||-1;const c=t.hierarchy||[];for(let u=0;u<c.length;u++){const f=c[u].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const d={};let g;for(g=0;g<f.length;g++)if(f[g].morphTargets)for(let p=0;p<f[g].morphTargets.length;p++)d[f[g].morphTargets[p]]=-1;for(const p in d){const m=[],_=[];for(let w=0;w!==f[g].morphTargets.length;++w){const x=f[g];m.push(x.time),_.push(x.morphTarget===p?1:0)}s.push(new Ir(".morphTargetInfluence["+p+"]",m,_))}l=d.length*o}else{const d=".bones["+e[u].name+"]";n(Dr,d+".position",f,"pos",s),n(Gs,d+".quaternion",f,"rot",s),n(Dr,d+".scale",f,"scl",s)}}return s.length===0?null:new this(r,l,s,a)}resetDuration(){const t=this.tracks;let e=0;for(let n=0,s=t.length;n!==s;++n){const r=this.tracks[n];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function B1(i){switch(i.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ir;case"vector":case"vector2":case"vector3":case"vector4":return Dr;case"color":return Fp;case"quaternion":return Gs;case"bool":case"boolean":return Hs;case"string":return Ws}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+i)}function V1(i){if(i.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=B1(i.type);if(i.times===void 0){const e=[],n=[];Dp(i.keys,e,n,"value"),i.times=e,i.values=n}return t.parse!==void 0?t.parse(i):new t(i.name,i.times,i.values,i.interpolation)}const Ho={enabled:!1,files:{},add:function(i,t){this.enabled!==!1&&(this.files[i]=t)},get:function(i){if(this.enabled!==!1)return this.files[i]},remove:function(i){delete this.files[i]},clear:function(){this.files={}}};class H1{constructor(t,e,n){const s=this;let r=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(h){a++,r===!1&&s.onStart!==void 0&&s.onStart(h,o,a),r=!0},this.itemEnd=function(h){o++,s.onProgress!==void 0&&s.onProgress(h,o,a),o===a&&(r=!1,s.onLoad!==void 0&&s.onLoad())},this.itemError=function(h){s.onError!==void 0&&s.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,u){return c.push(h,u),this},this.removeHandler=function(h){const u=c.indexOf(h);return u!==-1&&c.splice(u,2),this},this.getHandler=function(h){for(let u=0,f=c.length;u<f;u+=2){const d=c[u],g=c[u+1];if(d.global&&(d.lastIndex=0),d.test(h))return g}return null}}}const G1=new H1;class Br{constructor(t){this.manager=t!==void 0?t:G1,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(s,r){n.load(t,s,e,r)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const jn={};class W1 extends Error{constructor(t,e){super(t),this.response=e}}class zp extends Br{constructor(t){super(t)}load(t,e,n,s){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=Ho.get(t);if(r!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(r),this.manager.itemEnd(t)},0),r;if(jn[t]!==void 0){jn[t].push({onLoad:e,onProgress:n,onError:s});return}jn[t]=[],jn[t].push({onLoad:e,onProgress:n,onError:s});const o=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const h=jn[t],u=c.body.getReader(),f=c.headers.get("Content-Length")||c.headers.get("X-File-Size"),d=f?parseInt(f):0,g=d!==0;let p=0;const m=new ReadableStream({start(_){w();function w(){u.read().then(({done:x,value:b})=>{if(x)_.close();else{p+=b.byteLength;const S=new ProgressEvent("progress",{lengthComputable:g,loaded:p,total:d});for(let P=0,D=h.length;P<D;P++){const v=h[P];v.onProgress&&v.onProgress(S)}_.enqueue(b),w()}})}}});return new Response(m)}else throw new W1(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,a));case"json":return c.json();default:if(a===void 0)return c.text();{const u=/charset="?([^;"\s]*)"?/i.exec(a),f=u&&u[1]?u[1].toLowerCase():void 0,d=new TextDecoder(f);return c.arrayBuffer().then(g=>d.decode(g))}}}).then(c=>{Ho.add(t,c);const h=jn[t];delete jn[t];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onLoad&&d.onLoad(c)}}).catch(c=>{const h=jn[t];if(h===void 0)throw this.manager.itemError(t),c;delete jn[t];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onError&&d.onError(c)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class X1 extends Br{constructor(t){super(t)}load(t,e,n,s){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,o=Ho.get(t);if(o!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(o),r.manager.itemEnd(t)},0),o;const a=Cr("img");function l(){h(),Ho.add(t,this),e&&e(this),r.manager.itemEnd(t)}function c(u){h(),s&&s(u),r.manager.itemError(t),r.manager.itemEnd(t)}function h(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(t),a.src=t,a}}class Vr extends Br{constructor(t){super(t)}load(t,e,n,s){const r=new Ce,o=new X1(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,function(a){r.image=a,r.needsUpdate=!0,e!==void 0&&e(r)},n,s),r}}class ca extends oe{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Rt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}}const cl=new Dt,uf=new I,ff=new I;class zc{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new xt(512,512),this.map=null,this.mapPass=null,this.matrix=new Dt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Mc,this._frameExtents=new xt(1,1),this._viewportCount=1,this._viewports=[new ee(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;uf.setFromMatrixPosition(t.matrixWorld),e.position.copy(uf),ff.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(ff),e.updateMatrixWorld(),cl.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(cl),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(cl)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class j1 extends zc{constructor(){super(new ke(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(t){const e=this.camera,n=Ar*2*t.angle*this.focus,s=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;(n!==e.fov||s!==e.aspect||r!==e.far)&&(e.fov=n,e.aspect=s,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class q1 extends ca{constructor(t,e,n=0,s=Math.PI/3,r=0,o=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(oe.DEFAULT_UP),this.updateMatrix(),this.target=new oe,this.distance=n,this.angle=s,this.penumbra=r,this.decay=o,this.map=null,this.shadow=new j1}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const df=new Dt,tr=new I,hl=new I;class Y1 extends zc{constructor(){super(new ke(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new xt(4,2),this._viewportCount=6,this._viewports=[new ee(2,1,1,1),new ee(0,1,1,1),new ee(3,1,1,1),new ee(1,1,1,1),new ee(3,0,1,1),new ee(1,0,1,1)],this._cubeDirections=[new I(1,0,0),new I(-1,0,0),new I(0,0,1),new I(0,0,-1),new I(0,1,0),new I(0,-1,0)],this._cubeUps=[new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,0,1),new I(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,s=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),tr.setFromMatrixPosition(t.matrixWorld),n.position.copy(tr),hl.copy(n.position),hl.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(hl),n.updateMatrixWorld(),s.makeTranslation(-tr.x,-tr.y,-tr.z),df.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(df)}}class jl extends ca{constructor(t,e,n=0,s=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=s,this.shadow=new Y1}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class $1 extends zc{constructor(){super(new bc(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Z1 extends ca{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(oe.DEFAULT_UP),this.updateMatrix(),this.target=new oe,this.shadow=new $1}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class Op extends ca{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class K1{static decodeText(t){if(typeof TextDecoder<"u")return new TextDecoder().decode(t);let e="";for(let n=0,s=t.length;n<s;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch{return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.slice(0,e+1)}static resolveURL(t,e){return typeof t!="string"||t===""?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class Np{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=pf(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=pf();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function pf(){return(typeof performance>"u"?Date:performance).now()}const Oc="\\[\\]\\.:\\/",J1=new RegExp("["+Oc+"]","g"),Nc="[^"+Oc+"]",Q1="[^"+Oc.replace("\\.","")+"]",tS=/((?:WC+[\/:])*)/.source.replace("WC",Nc),eS=/(WCOD+)?/.source.replace("WCOD",Q1),nS=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Nc),iS=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Nc),sS=new RegExp("^"+tS+eS+nS+iS+"$"),rS=["material","materials","bones","map"];class oS{constructor(t,e,n){const s=n||Qt.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,s)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,s=this._bindings[n];s!==void 0&&s.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let s=this._targetGroup.nCachedObjects_,r=n.length;s!==r;++s)n[s].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class Qt{constructor(t,e,n){this.path=e,this.parsedPath=n||Qt.parseTrackName(e),this.node=Qt.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Qt.Composite(t,e,n):new Qt(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(J1,"")}static parseTrackName(t){const e=sS.exec(t);if(e===null)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},s=n.nodeName&&n.nodeName.lastIndexOf(".");if(s!==void 0&&s!==-1){const r=n.nodeName.substring(s+1);rS.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,s),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(e===void 0||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(r){for(let o=0;o<r.length;o++){const a=r[o];if(a.name===e||a.uuid===e)return a;const l=n(a.children);if(l)return l}return null},s=n(t.children);if(s)return s}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)t[e++]=n[s]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)n[s]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)n[s]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let s=0,r=n.length;s!==r;++s)n[s]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,s=e.propertyName;let r=e.propertyIndex;if(t||(t=Qt.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let c=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let h=0;h<t.length;h++)if(t[h].name===c){c=h;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(c!==void 0){if(t[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[c]}}const o=t[s];if(o===void 0){const c=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+s+" but it wasn't found.",t);return}let a=this.Versioning.None;this.targetObject=t,t.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:t.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(r!==void 0){if(s==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[r]!==void 0&&(r=t.morphTargetDictionary[r])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=s;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Qt.Composite=oS;Qt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Qt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Qt.prototype.GetterByBindingType=[Qt.prototype._getValue_direct,Qt.prototype._getValue_array,Qt.prototype._getValue_arrayElement,Qt.prototype._getValue_toArray];Qt.prototype.SetterByBindingTypeAndVersioning=[[Qt.prototype._setValue_direct,Qt.prototype._setValue_direct_setNeedsUpdate,Qt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Qt.prototype._setValue_array,Qt.prototype._setValue_array_setNeedsUpdate,Qt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Qt.prototype._setValue_arrayElement,Qt.prototype._setValue_arrayElement_setNeedsUpdate,Qt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Qt.prototype._setValue_fromArray,Qt.prototype._setValue_fromArray_setNeedsUpdate,Qt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class aS{constructor(t,e,n=0,s=1/0){this.ray=new ra(t,e),this.near=n,this.far=s,this.camera=null,this.layers=new yc,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!0,n=[]){return ql(t,this,n,e),n.sort(mf),n}intersectObjects(t,e=!0,n=[]){for(let s=0,r=t.length;s<r;s++)ql(t[s],this,n,e);return n.sort(mf),n}}function mf(i,t){return i.distance-t.distance}function ql(i,t,e,n){if(i.layers.test(t.layers)&&i.raycast(t,e),n===!0){const s=i.children;for(let r=0,o=s.length;r<o;r++)ql(s[r],t,e,!0)}}class gf{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(Ae(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class lS{constructor(){this.type="ShapePath",this.color=new Rt,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Gl,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,s){return this.currentPath.quadraticCurveTo(t,e,n,s),this}bezierCurveTo(t,e,n,s,r,o){return this.currentPath.bezierCurveTo(t,e,n,s,r,o),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(_){const w=[];for(let x=0,b=_.length;x<b;x++){const S=_[x],P=new Ps;P.curves=S.curves,w.push(P)}return w}function n(_,w){const x=w.length;let b=!1;for(let S=x-1,P=0;P<x;S=P++){let D=w[S],v=w[P],A=v.x-D.x,R=v.y-D.y;if(Math.abs(R)>Number.EPSILON){if(R<0&&(D=w[P],A=-A,v=w[S],R=-R),_.y<D.y||_.y>v.y)continue;if(_.y===D.y){if(_.x===D.x)return!0}else{const j=R*(_.x-D.x)-A*(_.y-D.y);if(j===0)return!0;if(j<0)continue;b=!b}}else{if(_.y!==D.y)continue;if(v.x<=_.x&&_.x<=D.x||D.x<=_.x&&_.x<=v.x)return!0}}return b}const s=Kn.isClockWise,r=this.subPaths;if(r.length===0)return[];let o,a,l;const c=[];if(r.length===1)return a=r[0],l=new Ps,l.curves=a.curves,c.push(l),c;let h=!s(r[0].getPoints());h=t?!h:h;const u=[],f=[];let d=[],g=0,p;f[g]=void 0,d[g]=[];for(let _=0,w=r.length;_<w;_++)a=r[_],p=a.getPoints(),o=s(p),o=t?!o:o,o?(!h&&f[g]&&g++,f[g]={s:new Ps,p},f[g].s.curves=a.curves,h&&g++,d[g]=[]):d[g].push({h:a,p:p[0]});if(!f[0])return e(r);if(f.length>1){let _=!1,w=0;for(let x=0,b=f.length;x<b;x++)u[x]=[];for(let x=0,b=f.length;x<b;x++){const S=d[x];for(let P=0;P<S.length;P++){const D=S[P];let v=!0;for(let A=0;A<f.length;A++)n(D.p,f[A].p)&&(x!==A&&w++,v?(v=!1,u[A].push(D)):_=!0);v&&u[x].push(D)}}w>0&&_===!1&&(d=u)}let m;for(let _=0,w=f.length;_<w;_++){l=f[_].s,c.push(l),m=d[_];for(let x=0,b=m.length;x<b;x++)l.holes.push(m[x].h)}return c}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:xc}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=xc);var Io={Linear:{None:function(i){return i}},Quadratic:{In:function(i){return i*i},Out:function(i){return i*(2-i)},InOut:function(i){return(i*=2)<1?.5*i*i:-.5*(--i*(i-2)-1)}},Cubic:{In:function(i){return i*i*i},Out:function(i){return--i*i*i+1},InOut:function(i){return(i*=2)<1?.5*i*i*i:.5*((i-=2)*i*i+2)}},Quartic:{In:function(i){return i*i*i*i},Out:function(i){return 1- --i*i*i*i},InOut:function(i){return(i*=2)<1?.5*i*i*i*i:-.5*((i-=2)*i*i*i-2)}},Quintic:{In:function(i){return i*i*i*i*i},Out:function(i){return--i*i*i*i*i+1},InOut:function(i){return(i*=2)<1?.5*i*i*i*i*i:.5*((i-=2)*i*i*i*i+2)}},Sinusoidal:{In:function(i){return 1-Math.cos(i*Math.PI/2)},Out:function(i){return Math.sin(i*Math.PI/2)},InOut:function(i){return .5*(1-Math.cos(Math.PI*i))}},Exponential:{In:function(i){return i===0?0:Math.pow(1024,i-1)},Out:function(i){return i===1?1:1-Math.pow(2,-10*i)},InOut:function(i){return i===0?0:i===1?1:(i*=2)<1?.5*Math.pow(1024,i-1):.5*(-Math.pow(2,-10*(i-1))+2)}},Circular:{In:function(i){return 1-Math.sqrt(1-i*i)},Out:function(i){return Math.sqrt(1- --i*i)},InOut:function(i){return(i*=2)<1?-.5*(Math.sqrt(1-i*i)-1):.5*(Math.sqrt(1-(i-=2)*i)+1)}},Elastic:{In:function(i){return i===0?0:i===1?1:-Math.pow(2,10*(i-1))*Math.sin((i-1.1)*5*Math.PI)},Out:function(i){return i===0?0:i===1?1:Math.pow(2,-10*i)*Math.sin((i-.1)*5*Math.PI)+1},InOut:function(i){return i===0?0:i===1?1:(i*=2,i<1?-.5*Math.pow(2,10*(i-1))*Math.sin((i-1.1)*5*Math.PI):.5*Math.pow(2,-10*(i-1))*Math.sin((i-1.1)*5*Math.PI)+1)}},Back:{In:function(i){var t=1.70158;return i*i*((t+1)*i-t)},Out:function(i){var t=1.70158;return--i*i*((t+1)*i+t)+1},InOut:function(i){var t=2.5949095;return(i*=2)<1?.5*(i*i*((t+1)*i-t)):.5*((i-=2)*i*((t+1)*i+t)+2)}},Bounce:{In:function(i){return 1-Io.Bounce.Out(1-i)},Out:function(i){return i<1/2.75?7.5625*i*i:i<2/2.75?7.5625*(i-=1.5/2.75)*i+.75:i<2.5/2.75?7.5625*(i-=2.25/2.75)*i+.9375:7.5625*(i-=2.625/2.75)*i+.984375},InOut:function(i){return i<.5?Io.Bounce.In(i*2)*.5:Io.Bounce.Out(i*2-1)*.5+.5}}},or;typeof self>"u"&&typeof process<"u"&&process.hrtime?or=function(){var i=process.hrtime();return i[0]*1e3+i[1]/1e6}:typeof self<"u"&&self.performance!==void 0&&self.performance.now!==void 0?or=self.performance.now.bind(self.performance):Date.now!==void 0?or=Date.now:or=function(){return new Date().getTime()};var gs=or,cS=function(){function i(){this._tweens={},this._tweensAddedDuringUpdate={}}return i.prototype.getAll=function(){var t=this;return Object.keys(this._tweens).map(function(e){return t._tweens[e]})},i.prototype.removeAll=function(){this._tweens={}},i.prototype.add=function(t){this._tweens[t.getId()]=t,this._tweensAddedDuringUpdate[t.getId()]=t},i.prototype.remove=function(t){delete this._tweens[t.getId()],delete this._tweensAddedDuringUpdate[t.getId()]},i.prototype.update=function(t,e){t===void 0&&(t=gs()),e===void 0&&(e=!1);var n=Object.keys(this._tweens);if(n.length===0)return!1;for(;n.length>0;){this._tweensAddedDuringUpdate={};for(var s=0;s<n.length;s++){var r=this._tweens[n[s]],o=!e;r&&r.update(t,o)===!1&&!e&&delete this._tweens[n[s]]}n=Object.keys(this._tweensAddedDuringUpdate)}return!0},i}(),ar={Linear:function(i,t){var e=i.length-1,n=e*t,s=Math.floor(n),r=ar.Utils.Linear;return t<0?r(i[0],i[1],n):t>1?r(i[e],i[e-1],e-n):r(i[s],i[s+1>e?e:s+1],n-s)},Bezier:function(i,t){for(var e=0,n=i.length-1,s=Math.pow,r=ar.Utils.Bernstein,o=0;o<=n;o++)e+=s(1-t,n-o)*s(t,o)*i[o]*r(n,o);return e},CatmullRom:function(i,t){var e=i.length-1,n=e*t,s=Math.floor(n),r=ar.Utils.CatmullRom;return i[0]===i[e]?(t<0&&(s=Math.floor(n=e*(1+t))),r(i[(s-1+e)%e],i[s],i[(s+1)%e],i[(s+2)%e],n-s)):t<0?i[0]-(r(i[0],i[0],i[1],i[1],-n)-i[0]):t>1?i[e]-(r(i[e],i[e],i[e-1],i[e-1],n-e)-i[e]):r(i[s?s-1:0],i[s],i[e<s+1?e:s+1],i[e<s+2?e:s+2],n-s)},Utils:{Linear:function(i,t,e){return(t-i)*e+i},Bernstein:function(i,t){var e=ar.Utils.Factorial;return e(i)/e(t)/e(i-t)},Factorial:function(){var i=[1];return function(t){var e=1;if(i[t])return i[t];for(var n=t;n>1;n--)e*=n;return i[t]=e,e}}(),CatmullRom:function(i,t,e,n,s){var r=(e-i)*.5,o=(n-t)*.5,a=s*s,l=s*a;return(2*t-2*e+r+o)*l+(-3*t+3*e-2*r-o)*a+r*s+t}}},hS=function(){function i(){}return i.nextId=function(){return i._nextId++},i._nextId=0,i}(),Up=new cS,It=function(){function i(t,e){e===void 0&&(e=Up),this._object=t,this._group=e,this._isPaused=!1,this._pauseStart=0,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._initialRepeat=0,this._repeat=0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=0,this._easingFunction=Io.Linear.None,this._interpolationFunction=ar.Linear,this._chainedTweens=[],this._onStartCallbackFired=!1,this._id=hS.nextId(),this._isChainStopped=!1,this._goToEnd=!1}return i.prototype.getId=function(){return this._id},i.prototype.isPlaying=function(){return this._isPlaying},i.prototype.isPaused=function(){return this._isPaused},i.prototype.to=function(t,e){return this._valuesEnd=Object.create(t),e!==void 0&&(this._duration=e),this},i.prototype.duration=function(t){return this._duration=t,this},i.prototype.start=function(t){if(this._isPlaying)return this;if(this._group&&this._group.add(this),this._repeat=this._initialRepeat,this._reversed){this._reversed=!1;for(var e in this._valuesStartRepeat)this._swapEndStartRepeatValues(e),this._valuesStart[e]=this._valuesStartRepeat[e]}return this._isPlaying=!0,this._isPaused=!1,this._onStartCallbackFired=!1,this._isChainStopped=!1,this._startTime=t!==void 0?typeof t=="string"?gs()+parseFloat(t):t:gs(),this._startTime+=this._delayTime,this._setupProperties(this._object,this._valuesStart,this._valuesEnd,this._valuesStartRepeat),this},i.prototype._setupProperties=function(t,e,n,s){for(var r in n){var o=t[r],a=Array.isArray(o),l=a?"array":typeof o,c=!a&&Array.isArray(n[r]);if(!(l==="undefined"||l==="function")){if(c){var h=n[r];if(h.length===0)continue;h=h.map(this._handleRelativeValue.bind(this,o)),n[r]=[o].concat(h)}if((l==="object"||a)&&o&&!c){e[r]=a?[]:{};for(var u in o)e[r][u]=o[u];s[r]=a?[]:{},this._setupProperties(o,e[r],n[r],s[r])}else typeof e[r]>"u"&&(e[r]=o),a||(e[r]*=1),c?s[r]=n[r].slice().reverse():s[r]=e[r]||0}}},i.prototype.stop=function(){return this._isChainStopped||(this._isChainStopped=!0,this.stopChainedTweens()),this._isPlaying?(this._group&&this._group.remove(this),this._isPlaying=!1,this._isPaused=!1,this._onStopCallback&&this._onStopCallback(this._object),this):this},i.prototype.end=function(){return this._goToEnd=!0,this.update(1/0),this},i.prototype.pause=function(t){return t===void 0&&(t=gs()),this._isPaused||!this._isPlaying?this:(this._isPaused=!0,this._pauseStart=t,this._group&&this._group.remove(this),this)},i.prototype.resume=function(t){return t===void 0&&(t=gs()),!this._isPaused||!this._isPlaying?this:(this._isPaused=!1,this._startTime+=t-this._pauseStart,this._pauseStart=0,this._group&&this._group.add(this),this)},i.prototype.stopChainedTweens=function(){for(var t=0,e=this._chainedTweens.length;t<e;t++)this._chainedTweens[t].stop();return this},i.prototype.group=function(t){return this._group=t,this},i.prototype.delay=function(t){return this._delayTime=t,this},i.prototype.repeat=function(t){return this._initialRepeat=t,this._repeat=t,this},i.prototype.repeatDelay=function(t){return this._repeatDelayTime=t,this},i.prototype.yoyo=function(t){return this._yoyo=t,this},i.prototype.easing=function(t){return this._easingFunction=t,this},i.prototype.interpolation=function(t){return this._interpolationFunction=t,this},i.prototype.chain=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return this._chainedTweens=t,this},i.prototype.onStart=function(t){return this._onStartCallback=t,this},i.prototype.onUpdate=function(t){return this._onUpdateCallback=t,this},i.prototype.onRepeat=function(t){return this._onRepeatCallback=t,this},i.prototype.onComplete=function(t){return this._onCompleteCallback=t,this},i.prototype.onStop=function(t){return this._onStopCallback=t,this},i.prototype.update=function(t,e){if(t===void 0&&(t=gs()),e===void 0&&(e=!0),this._isPaused)return!0;var n,s,r=this._startTime+this._duration;if(!this._goToEnd&&!this._isPlaying){if(t>r)return!1;e&&this.start(t)}if(this._goToEnd=!1,t<this._startTime)return!0;this._onStartCallbackFired===!1&&(this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),s=(t-this._startTime)/this._duration,s=this._duration===0||s>1?1:s;var o=this._easingFunction(s);if(this._updateProperties(this._object,this._valuesStart,this._valuesEnd,o),this._onUpdateCallback&&this._onUpdateCallback(this._object,s),s===1)if(this._repeat>0){isFinite(this._repeat)&&this._repeat--;for(n in this._valuesStartRepeat)!this._yoyo&&typeof this._valuesEnd[n]=="string"&&(this._valuesStartRepeat[n]=this._valuesStartRepeat[n]+parseFloat(this._valuesEnd[n])),this._yoyo&&this._swapEndStartRepeatValues(n),this._valuesStart[n]=this._valuesStartRepeat[n];return this._yoyo&&(this._reversed=!this._reversed),this._repeatDelayTime!==void 0?this._startTime=t+this._repeatDelayTime:this._startTime=t+this._delayTime,this._onRepeatCallback&&this._onRepeatCallback(this._object),!0}else{this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var a=0,l=this._chainedTweens.length;a<l;a++)this._chainedTweens[a].start(this._startTime+this._duration);return this._isPlaying=!1,!1}return!0},i.prototype._updateProperties=function(t,e,n,s){for(var r in n)if(e[r]!==void 0){var o=e[r]||0,a=n[r],l=Array.isArray(t[r]),c=Array.isArray(a),h=!l&&c;h?t[r]=this._interpolationFunction(a,s):typeof a=="object"&&a?this._updateProperties(t[r],o,a,s):(a=this._handleRelativeValue(o,a),typeof a=="number"&&(t[r]=o+(a-o)*s))}},i.prototype._handleRelativeValue=function(t,e){return typeof e!="string"?e:e.charAt(0)==="+"||e.charAt(0)==="-"?t+parseFloat(e):parseFloat(e)},i.prototype._swapEndStartRepeatValues=function(t){var e=this._valuesStartRepeat[t],n=this._valuesEnd[t];typeof n=="string"?this._valuesStartRepeat[t]=this._valuesStartRepeat[t]+parseFloat(n):this._valuesStartRepeat[t]=this._valuesEnd[t],this._valuesEnd[t]=e},i}(),zn=Up;zn.getAll.bind(zn);zn.removeAll.bind(zn);zn.add.bind(zn);zn.remove.bind(zn);var uS=zn.update.bind(zn);const _f={type:"change"},ul={type:"start"},xf={type:"end"};class fS extends qi{constructor(t,e){super(),this.object=t,this.domElement=e,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new I,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Zi.ROTATE,MIDDLE:Zi.DOLLY,RIGHT:Zi.PAN},this.touches={ONE:Ki.ROTATE,TWO:Ki.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(L){L.addEventListener("keydown",nt),this._domElementKeyEvents=L},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(_f),n.update(),r=s.NONE},this.update=function(){const L=new I,G=new un().setFromUnitVectors(t.up,new I(0,1,0)),bt=G.clone().invert(),At=new I,Tt=new un,Pt=2*Math.PI;return function(){const zt=n.object.position;L.copy(zt).sub(n.target),L.applyQuaternion(G),a.setFromVector3(L),n.autoRotate&&r===s.NONE&&A(D()),n.enableDamping?(a.theta+=l.theta*n.dampingFactor,a.phi+=l.phi*n.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let Vt=n.minAzimuthAngle,re=n.maxAzimuthAngle;return isFinite(Vt)&&isFinite(re)&&(Vt<-Math.PI?Vt+=Pt:Vt>Math.PI&&(Vt-=Pt),re<-Math.PI?re+=Pt:re>Math.PI&&(re-=Pt),Vt<=re?a.theta=Math.max(Vt,Math.min(re,a.theta)):a.theta=a.theta>(Vt+re)/2?Math.max(Vt,a.theta):Math.min(re,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=c,a.radius=Math.max(n.minDistance,Math.min(n.maxDistance,a.radius)),n.enableDamping===!0?n.target.addScaledVector(h,n.dampingFactor):n.target.add(h),L.setFromSpherical(a),L.applyQuaternion(bt),zt.copy(n.target).add(L),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,h.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),h.set(0,0,0)),c=1,u||At.distanceToSquared(n.object.position)>o||8*(1-Tt.dot(n.object.quaternion))>o?(n.dispatchEvent(_f),At.copy(n.object.position),Tt.copy(n.object.quaternion),u=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",U),n.domElement.removeEventListener("pointerdown",F),n.domElement.removeEventListener("pointercancel",et),n.domElement.removeEventListener("wheel",ut),n.domElement.removeEventListener("pointermove",H),n.domElement.removeEventListener("pointerup",B),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",nt)};const n=this,s={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=s.NONE;const o=1e-6,a=new gf,l=new gf;let c=1;const h=new I;let u=!1;const f=new xt,d=new xt,g=new xt,p=new xt,m=new xt,_=new xt,w=new xt,x=new xt,b=new xt,S=[],P={};function D(){return 2*Math.PI/60/60*n.autoRotateSpeed}function v(){return Math.pow(.95,n.zoomSpeed)}function A(L){l.theta-=L}function R(L){l.phi-=L}const j=function(){const L=new I;return function(bt,At){L.setFromMatrixColumn(At,0),L.multiplyScalar(-bt),h.add(L)}}(),Q=function(){const L=new I;return function(bt,At){n.screenSpacePanning===!0?L.setFromMatrixColumn(At,1):(L.setFromMatrixColumn(At,0),L.crossVectors(n.object.up,L)),L.multiplyScalar(bt),h.add(L)}}(),k=function(){const L=new I;return function(bt,At){const Tt=n.domElement;if(n.object.isPerspectiveCamera){const Pt=n.object.position;L.copy(Pt).sub(n.target);let Et=L.length();Et*=Math.tan(n.object.fov/2*Math.PI/180),j(2*bt*Et/Tt.clientHeight,n.object.matrix),Q(2*At*Et/Tt.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(j(bt*(n.object.right-n.object.left)/n.object.zoom/Tt.clientWidth,n.object.matrix),Q(At*(n.object.top-n.object.bottom)/n.object.zoom/Tt.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function O(L){n.object.isPerspectiveCamera?c/=L:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*L)),n.object.updateProjectionMatrix(),u=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function J(L){n.object.isPerspectiveCamera?c*=L:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/L)),n.object.updateProjectionMatrix(),u=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function Z(L){f.set(L.clientX,L.clientY)}function it(L){w.set(L.clientX,L.clientY)}function Y(L){p.set(L.clientX,L.clientY)}function ft(L){d.set(L.clientX,L.clientY),g.subVectors(d,f).multiplyScalar(n.rotateSpeed);const G=n.domElement;A(2*Math.PI*g.x/G.clientHeight),R(2*Math.PI*g.y/G.clientHeight),f.copy(d),n.update()}function dt(L){x.set(L.clientX,L.clientY),b.subVectors(x,w),b.y>0?O(v()):b.y<0&&J(v()),w.copy(x),n.update()}function yt(L){m.set(L.clientX,L.clientY),_.subVectors(m,p).multiplyScalar(n.panSpeed),k(_.x,_.y),p.copy(m),n.update()}function W(L){L.deltaY<0?J(v()):L.deltaY>0&&O(v()),n.update()}function ot(L){let G=!1;switch(L.code){case n.keys.UP:L.ctrlKey||L.metaKey||L.shiftKey?R(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):k(0,n.keyPanSpeed),G=!0;break;case n.keys.BOTTOM:L.ctrlKey||L.metaKey||L.shiftKey?R(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):k(0,-n.keyPanSpeed),G=!0;break;case n.keys.LEFT:L.ctrlKey||L.metaKey||L.shiftKey?A(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):k(n.keyPanSpeed,0),G=!0;break;case n.keys.RIGHT:L.ctrlKey||L.metaKey||L.shiftKey?A(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):k(-n.keyPanSpeed,0),G=!0;break}G&&(L.preventDefault(),n.update())}function vt(){if(S.length===1)f.set(S[0].pageX,S[0].pageY);else{const L=.5*(S[0].pageX+S[1].pageX),G=.5*(S[0].pageY+S[1].pageY);f.set(L,G)}}function N(){if(S.length===1)p.set(S[0].pageX,S[0].pageY);else{const L=.5*(S[0].pageX+S[1].pageX),G=.5*(S[0].pageY+S[1].pageY);p.set(L,G)}}function z(){const L=S[0].pageX-S[1].pageX,G=S[0].pageY-S[1].pageY,bt=Math.sqrt(L*L+G*G);w.set(0,bt)}function tt(){n.enableZoom&&z(),n.enablePan&&N()}function ct(){n.enableZoom&&z(),n.enableRotate&&vt()}function gt(L){if(S.length==1)d.set(L.pageX,L.pageY);else{const bt=Mt(L),At=.5*(L.pageX+bt.x),Tt=.5*(L.pageY+bt.y);d.set(At,Tt)}g.subVectors(d,f).multiplyScalar(n.rotateSpeed);const G=n.domElement;A(2*Math.PI*g.x/G.clientHeight),R(2*Math.PI*g.y/G.clientHeight),f.copy(d)}function pt(L){if(S.length===1)m.set(L.pageX,L.pageY);else{const G=Mt(L),bt=.5*(L.pageX+G.x),At=.5*(L.pageY+G.y);m.set(bt,At)}_.subVectors(m,p).multiplyScalar(n.panSpeed),k(_.x,_.y),p.copy(m)}function wt(L){const G=Mt(L),bt=L.pageX-G.x,At=L.pageY-G.y,Tt=Math.sqrt(bt*bt+At*At);x.set(0,Tt),b.set(0,Math.pow(x.y/w.y,n.zoomSpeed)),O(b.y),w.copy(x)}function y(L){n.enableZoom&&wt(L),n.enablePan&&pt(L)}function T(L){n.enableZoom&&wt(L),n.enableRotate&&gt(L)}function F(L){n.enabled!==!1&&(S.length===0&&(n.domElement.setPointerCapture(L.pointerId),n.domElement.addEventListener("pointermove",H),n.domElement.addEventListener("pointerup",B)),K(L),L.pointerType==="touch"?E(L):st(L))}function H(L){n.enabled!==!1&&(L.pointerType==="touch"?M(L):$(L))}function B(L){rt(L),S.length===0&&(n.domElement.releasePointerCapture(L.pointerId),n.domElement.removeEventListener("pointermove",H),n.domElement.removeEventListener("pointerup",B)),n.dispatchEvent(xf),r=s.NONE}function et(L){rt(L)}function st(L){let G;switch(L.button){case 0:G=n.mouseButtons.LEFT;break;case 1:G=n.mouseButtons.MIDDLE;break;case 2:G=n.mouseButtons.RIGHT;break;default:G=-1}switch(G){case Zi.DOLLY:if(n.enableZoom===!1)return;it(L),r=s.DOLLY;break;case Zi.ROTATE:if(L.ctrlKey||L.metaKey||L.shiftKey){if(n.enablePan===!1)return;Y(L),r=s.PAN}else{if(n.enableRotate===!1)return;Z(L),r=s.ROTATE}break;case Zi.PAN:if(L.ctrlKey||L.metaKey||L.shiftKey){if(n.enableRotate===!1)return;Z(L),r=s.ROTATE}else{if(n.enablePan===!1)return;Y(L),r=s.PAN}break;default:r=s.NONE}r!==s.NONE&&n.dispatchEvent(ul)}function $(L){switch(r){case s.ROTATE:if(n.enableRotate===!1)return;ft(L);break;case s.DOLLY:if(n.enableZoom===!1)return;dt(L);break;case s.PAN:if(n.enablePan===!1)return;yt(L);break}}function ut(L){n.enabled===!1||n.enableZoom===!1||r!==s.NONE||(L.preventDefault(),n.dispatchEvent(ul),W(L),n.dispatchEvent(xf))}function nt(L){n.enabled===!1||n.enablePan===!1||ot(L)}function E(L){switch(mt(L),S.length){case 1:switch(n.touches.ONE){case Ki.ROTATE:if(n.enableRotate===!1)return;vt(),r=s.TOUCH_ROTATE;break;case Ki.PAN:if(n.enablePan===!1)return;N(),r=s.TOUCH_PAN;break;default:r=s.NONE}break;case 2:switch(n.touches.TWO){case Ki.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;tt(),r=s.TOUCH_DOLLY_PAN;break;case Ki.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;ct(),r=s.TOUCH_DOLLY_ROTATE;break;default:r=s.NONE}break;default:r=s.NONE}r!==s.NONE&&n.dispatchEvent(ul)}function M(L){switch(mt(L),r){case s.TOUCH_ROTATE:if(n.enableRotate===!1)return;gt(L),n.update();break;case s.TOUCH_PAN:if(n.enablePan===!1)return;pt(L),n.update();break;case s.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;y(L),n.update();break;case s.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;T(L),n.update();break;default:r=s.NONE}}function U(L){n.enabled!==!1&&L.preventDefault()}function K(L){S.push(L)}function rt(L){delete P[L.pointerId];for(let G=0;G<S.length;G++)if(S[G].pointerId==L.pointerId){S.splice(G,1);return}}function mt(L){let G=P[L.pointerId];G===void 0&&(G=new xt,P[L.pointerId]=G),G.set(L.pageX,L.pageY)}function Mt(L){const G=L.pointerId===S[0].pointerId?S[1]:S[0];return P[G.pointerId]}n.domElement.addEventListener("contextmenu",U),n.domElement.addEventListener("pointerdown",F),n.domElement.addEventListener("pointercancel",et),n.domElement.addEventListener("wheel",ut,{passive:!1}),this.update()}}/*!
fflate - fast JavaScript compression/decompression
<https://101arrowz.github.io/fflate>
Licensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE
version 0.6.9
*/var vf=function(i){return URL.createObjectURL(new Blob([i],{type:"text/javascript"}))};try{URL.revokeObjectURL(vf(""))}catch{vf=function(t){return"data:application/javascript;charset=UTF-8,"+encodeURI(t)}}var cn=Uint8Array,di=Uint16Array,Yl=Uint32Array,kp=new cn([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Bp=new cn([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),dS=new cn([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Vp=function(i,t){for(var e=new di(31),n=0;n<31;++n)e[n]=t+=1<<i[n-1];for(var s=new Yl(e[30]),n=1;n<30;++n)for(var r=e[n];r<e[n+1];++r)s[r]=r-e[n]<<5|n;return[e,s]},Hp=Vp(kp,2),Gp=Hp[0],pS=Hp[1];Gp[28]=258,pS[258]=28;var mS=Vp(Bp,0),gS=mS[0],$l=new di(32768);for(var ae=0;ae<32768;++ae){var ci=(ae&43690)>>>1|(ae&21845)<<1;ci=(ci&52428)>>>2|(ci&13107)<<2,ci=(ci&61680)>>>4|(ci&3855)<<4,$l[ae]=((ci&65280)>>>8|(ci&255)<<8)>>>1}var mr=function(i,t,e){for(var n=i.length,s=0,r=new di(t);s<n;++s)++r[i[s]-1];var o=new di(t);for(s=0;s<t;++s)o[s]=o[s-1]+r[s-1]<<1;var a;if(e){a=new di(1<<t);var l=15-t;for(s=0;s<n;++s)if(i[s])for(var c=s<<4|i[s],h=t-i[s],u=o[i[s]-1]++<<h,f=u|(1<<h)-1;u<=f;++u)a[$l[u]>>>l]=c}else for(a=new di(n),s=0;s<n;++s)i[s]&&(a[s]=$l[o[i[s]-1]++]>>>15-i[s]);return a},Hr=new cn(288);for(var ae=0;ae<144;++ae)Hr[ae]=8;for(var ae=144;ae<256;++ae)Hr[ae]=9;for(var ae=256;ae<280;++ae)Hr[ae]=7;for(var ae=280;ae<288;++ae)Hr[ae]=8;var Wp=new cn(32);for(var ae=0;ae<32;++ae)Wp[ae]=5;var _S=mr(Hr,9,1),xS=mr(Wp,5,1),fl=function(i){for(var t=i[0],e=1;e<i.length;++e)i[e]>t&&(t=i[e]);return t},xn=function(i,t,e){var n=t/8|0;return(i[n]|i[n+1]<<8)>>(t&7)&e},dl=function(i,t){var e=t/8|0;return(i[e]|i[e+1]<<8|i[e+2]<<16)>>(t&7)},vS=function(i){return(i/8|0)+(i&7&&1)},yS=function(i,t,e){(t==null||t<0)&&(t=0),(e==null||e>i.length)&&(e=i.length);var n=new(i instanceof di?di:i instanceof Yl?Yl:cn)(e-t);return n.set(i.subarray(t,e)),n},wS=function(i,t,e){var n=i.length;if(!n||e&&!e.l&&n<5)return t||new cn(0);var s=!t||e,r=!e||e.i;e||(e={}),t||(t=new cn(n*3));var o=function(z){var tt=t.length;if(z>tt){var ct=new cn(Math.max(tt*2,z));ct.set(t),t=ct}},a=e.f||0,l=e.p||0,c=e.b||0,h=e.l,u=e.d,f=e.m,d=e.n,g=n*8;do{if(!h){e.f=a=xn(i,l,1);var p=xn(i,l+1,3);if(l+=3,p)if(p==1)h=_S,u=xS,f=9,d=5;else if(p==2){var x=xn(i,l,31)+257,b=xn(i,l+10,15)+4,S=x+xn(i,l+5,31)+1;l+=14;for(var P=new cn(S),D=new cn(19),v=0;v<b;++v)D[dS[v]]=xn(i,l+v*3,7);l+=b*3;for(var A=fl(D),R=(1<<A)-1,j=mr(D,A,1),v=0;v<S;){var Q=j[xn(i,l,R)];l+=Q&15;var m=Q>>>4;if(m<16)P[v++]=m;else{var k=0,O=0;for(m==16?(O=3+xn(i,l,3),l+=2,k=P[v-1]):m==17?(O=3+xn(i,l,7),l+=3):m==18&&(O=11+xn(i,l,127),l+=7);O--;)P[v++]=k}}var J=P.subarray(0,x),Z=P.subarray(x);f=fl(J),d=fl(Z),h=mr(J,f,1),u=mr(Z,d,1)}else throw"invalid block type";else{var m=vS(l)+4,_=i[m-4]|i[m-3]<<8,w=m+_;if(w>n){if(r)throw"unexpected EOF";break}s&&o(c+_),t.set(i.subarray(m,w),c),e.b=c+=_,e.p=l=w*8;continue}if(l>g){if(r)throw"unexpected EOF";break}}s&&o(c+131072);for(var it=(1<<f)-1,Y=(1<<d)-1,ft=l;;ft=l){var k=h[dl(i,l)&it],dt=k>>>4;if(l+=k&15,l>g){if(r)throw"unexpected EOF";break}if(!k)throw"invalid length/literal";if(dt<256)t[c++]=dt;else if(dt==256){ft=l,h=null;break}else{var yt=dt-254;if(dt>264){var v=dt-257,W=kp[v];yt=xn(i,l,(1<<W)-1)+Gp[v],l+=W}var ot=u[dl(i,l)&Y],vt=ot>>>4;if(!ot)throw"invalid distance";l+=ot&15;var Z=gS[vt];if(vt>3){var W=Bp[vt];Z+=dl(i,l)&(1<<W)-1,l+=W}if(l>g){if(r)throw"unexpected EOF";break}s&&o(c+131072);for(var N=c+yt;c<N;c+=4)t[c]=t[c-Z],t[c+1]=t[c+1-Z],t[c+2]=t[c+2-Z],t[c+3]=t[c+3-Z];c=N}}e.l=h,e.p=ft,e.b=c,h&&(a=1,e.m=f,e.d=u,e.n=d)}while(!a);return c==t.length?t:yS(t,0,c)},MS=new cn(0),bS=function(i){if((i[0]&15)!=8||i[0]>>>4>7||(i[0]<<8|i[1])%31)throw"invalid zlib data";if(i[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function SS(i,t){return wS((bS(i),i.subarray(2,-4)),t)}var TS=typeof TextDecoder<"u"&&new TextDecoder,ES=0;try{TS.decode(MS,{stream:!0}),ES=1}catch{}function Xp(i,t,e){const n=e.length-i-1;if(t>=e[n])return n-1;if(t<=e[i])return i;let s=i,r=n,o=Math.floor((s+r)/2);for(;t<e[o]||t>=e[o+1];)t<e[o]?r=o:s=o,o=Math.floor((s+r)/2);return o}function AS(i,t,e,n){const s=[],r=[],o=[];s[0]=1;for(let a=1;a<=e;++a){r[a]=t-n[i+1-a],o[a]=n[i+a]-t;let l=0;for(let c=0;c<a;++c){const h=o[c+1],u=r[a-c],f=s[c]/(h+u);s[c]=l+h*f,l=u*f}s[a]=l}return s}function CS(i,t,e,n){const s=Xp(i,n,t),r=AS(s,n,i,t),o=new ee(0,0,0,0);for(let a=0;a<=i;++a){const l=e[s-i+a],c=r[a],h=l.w*c;o.x+=l.x*h,o.y+=l.y*h,o.z+=l.z*h,o.w+=l.w*c}return o}function PS(i,t,e,n,s){const r=[];for(let u=0;u<=e;++u)r[u]=0;const o=[];for(let u=0;u<=n;++u)o[u]=r.slice(0);const a=[];for(let u=0;u<=e;++u)a[u]=r.slice(0);a[0][0]=1;const l=r.slice(0),c=r.slice(0);for(let u=1;u<=e;++u){l[u]=t-s[i+1-u],c[u]=s[i+u]-t;let f=0;for(let d=0;d<u;++d){const g=c[d+1],p=l[u-d];a[u][d]=g+p;const m=a[d][u-1]/a[u][d];a[d][u]=f+g*m,f=p*m}a[u][u]=f}for(let u=0;u<=e;++u)o[0][u]=a[u][e];for(let u=0;u<=e;++u){let f=0,d=1;const g=[];for(let p=0;p<=e;++p)g[p]=r.slice(0);g[0][0]=1;for(let p=1;p<=n;++p){let m=0;const _=u-p,w=e-p;u>=p&&(g[d][0]=g[f][0]/a[w+1][_],m=g[d][0]*a[_][w]);const x=_>=-1?1:-_,b=u-1<=w?p-1:e-u;for(let P=x;P<=b;++P)g[d][P]=(g[f][P]-g[f][P-1])/a[w+1][_+P],m+=g[d][P]*a[_+P][w];u<=w&&(g[d][p]=-g[f][p-1]/a[w+1][u],m+=g[d][p]*a[u][w]),o[p][u]=m;const S=f;f=d,d=S}}let h=e;for(let u=1;u<=n;++u){for(let f=0;f<=e;++f)o[u][f]*=h;h*=e-u}return o}function LS(i,t,e,n,s){const r=s<i?s:i,o=[],a=Xp(i,n,t),l=PS(a,n,i,r,t),c=[];for(let h=0;h<e.length;++h){const u=e[h].clone(),f=u.w;u.x*=f,u.y*=f,u.z*=f,c[h]=u}for(let h=0;h<=r;++h){const u=c[a-i].clone().multiplyScalar(l[h][0]);for(let f=1;f<=i;++f)u.add(c[a-i+f].clone().multiplyScalar(l[h][f]));o[h]=u}for(let h=r+1;h<=s+1;++h)o[h]=new ee(0,0,0);return o}function RS(i,t){let e=1;for(let s=2;s<=i;++s)e*=s;let n=1;for(let s=2;s<=t;++s)n*=s;for(let s=2;s<=i-t;++s)n*=s;return e/n}function IS(i){const t=i.length,e=[],n=[];for(let r=0;r<t;++r){const o=i[r];e[r]=new I(o.x,o.y,o.z),n[r]=o.w}const s=[];for(let r=0;r<t;++r){const o=e[r].clone();for(let a=1;a<=r;++a)o.sub(s[r-a].clone().multiplyScalar(RS(r,a)*n[a]));s[r]=o.divideScalar(n[0])}return s}function DS(i,t,e,n,s){const r=LS(i,t,e,n,s);return IS(r)}class FS extends Tn{constructor(t,e,n,s,r){super(),this.degree=t,this.knots=e,this.controlPoints=[],this.startKnot=s||0,this.endKnot=r||this.knots.length-1;for(let o=0;o<n.length;++o){const a=n[o];this.controlPoints[o]=new ee(a.x,a.y,a.z,a.w)}}getPoint(t,e=new I){const n=e,s=this.knots[this.startKnot]+t*(this.knots[this.endKnot]-this.knots[this.startKnot]),r=CS(this.degree,this.knots,this.controlPoints,s);return r.w!==1&&r.divideScalar(r.w),n.set(r.x,r.y,r.z)}getTangent(t,e=new I){const n=e,s=this.knots[0]+t*(this.knots[this.knots.length-1]-this.knots[0]),r=DS(this.degree,this.knots,this.controlPoints,s,1);return n.copy(r[1]).normalize(),n}}let Wt,pe,We;class zS extends Br{constructor(t){super(t)}load(t,e,n,s){const r=this,o=r.path===""?K1.extractUrlBase(t):r.path,a=new zp(this.manager);a.setPath(r.path),a.setResponseType("arraybuffer"),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(t,function(l){try{e(r.parse(l,o))}catch(c){s?s(c):console.error(c),r.manager.itemError(t)}},n,s)}parse(t,e){if(VS(t))Wt=new BS().parse(t);else{const s=$p(t);if(!HS(s))throw new Error("THREE.FBXLoader: Unknown format.");if(wf(s)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+wf(s));Wt=new kS().parse(s)}const n=new Vr(this.manager).setPath(this.resourcePath||e).setCrossOrigin(this.crossOrigin);return new OS(n,this.manager).parse(Wt)}}class OS{constructor(t,e){this.textureLoader=t,this.manager=e}parse(){pe=this.parseConnections();const t=this.parseImages(),e=this.parseTextures(t),n=this.parseMaterials(e),s=this.parseDeformers(),r=new NS().parse(s);return this.parseScene(s,r,n),We}parseConnections(){const t=new Map;return"Connections"in Wt&&Wt.Connections.connections.forEach(function(n){const s=n[0],r=n[1],o=n[2];t.has(s)||t.set(s,{parents:[],children:[]});const a={ID:r,relationship:o};t.get(s).parents.push(a),t.has(r)||t.set(r,{parents:[],children:[]});const l={ID:s,relationship:o};t.get(r).children.push(l)}),t}parseImages(){const t={},e={};if("Video"in Wt.Objects){const n=Wt.Objects.Video;for(const s in n){const r=n[s],o=parseInt(s);if(t[o]=r.RelativeFilename||r.Filename,"Content"in r){const a=r.Content instanceof ArrayBuffer&&r.Content.byteLength>0,l=typeof r.Content=="string"&&r.Content!=="";if(a||l){const c=this.parseImage(n[s]);e[r.RelativeFilename||r.Filename]=c}}}}for(const n in t){const s=t[n];e[s]!==void 0?t[n]=e[s]:t[n]=t[n].split("\\").pop()}return t}parseImage(t){const e=t.Content,n=t.RelativeFilename||t.Filename,s=n.slice(n.lastIndexOf(".")+1).toLowerCase();let r;switch(s){case"bmp":r="image/bmp";break;case"jpg":case"jpeg":r="image/jpeg";break;case"png":r="image/png";break;case"tif":r="image/tiff";break;case"tga":this.manager.getHandler(".tga")===null&&console.warn("FBXLoader: TGA loader not found, skipping ",n),r="image/tga";break;default:console.warn('FBXLoader: Image type "'+s+'" is not supported.');return}if(typeof e=="string")return"data:"+r+";base64,"+e;{const o=new Uint8Array(e);return window.URL.createObjectURL(new Blob([o],{type:r}))}}parseTextures(t){const e=new Map;if("Texture"in Wt.Objects){const n=Wt.Objects.Texture;for(const s in n){const r=this.parseTexture(n[s],t);e.set(parseInt(s),r)}}return e}parseTexture(t,e){const n=this.loadTexture(t,e);n.ID=t.id,n.name=t.attrName;const s=t.WrapModeU,r=t.WrapModeV,o=s!==void 0?s.value:0,a=r!==void 0?r.value:0;if(n.wrapS=o===0?br:tn,n.wrapT=a===0?br:tn,"Scaling"in t){const l=t.Scaling.value;n.repeat.x=l[0],n.repeat.y=l[1]}if("Translation"in t){const l=t.Translation.value;n.offset.x=l[0],n.offset.y=l[1]}return n}loadTexture(t,e){let n;const s=this.textureLoader.path,r=pe.get(t.id).children;r!==void 0&&r.length>0&&e[r[0].ID]!==void 0&&(n=e[r[0].ID],(n.indexOf("blob:")===0||n.indexOf("data:")===0)&&this.textureLoader.setPath(void 0));let o;const a=t.FileName.slice(-3).toLowerCase();if(a==="tga"){const l=this.manager.getHandler(".tga");l===null?(console.warn("FBXLoader: TGA loader not found, creating placeholder texture for",t.RelativeFilename),o=new Ce):(l.setPath(this.textureLoader.path),o=l.load(n))}else a==="psd"?(console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for",t.RelativeFilename),o=new Ce):o=this.textureLoader.load(n);return this.textureLoader.setPath(s),o}parseMaterials(t){const e=new Map;if("Material"in Wt.Objects){const n=Wt.Objects.Material;for(const s in n){const r=this.parseMaterial(n[s],t);r!==null&&e.set(parseInt(s),r)}}return e}parseMaterial(t,e){const n=t.id,s=t.attrName;let r=t.ShadingModel;if(typeof r=="object"&&(r=r.value),!pe.has(n))return null;const o=this.parseParameters(t,e,n);let a;switch(r.toLowerCase()){case"phong":a=new ll;break;case"lambert":a=new Fc;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',r),a=new ll;break}return a.setValues(o),a.name=s,a}parseParameters(t,e,n){const s={};t.BumpFactor&&(s.bumpScale=t.BumpFactor.value),t.Diffuse?s.color=new Rt().fromArray(t.Diffuse.value):t.DiffuseColor&&(t.DiffuseColor.type==="Color"||t.DiffuseColor.type==="ColorRGB")&&(s.color=new Rt().fromArray(t.DiffuseColor.value)),t.DisplacementFactor&&(s.displacementScale=t.DisplacementFactor.value),t.Emissive?s.emissive=new Rt().fromArray(t.Emissive.value):t.EmissiveColor&&(t.EmissiveColor.type==="Color"||t.EmissiveColor.type==="ColorRGB")&&(s.emissive=new Rt().fromArray(t.EmissiveColor.value)),t.EmissiveFactor&&(s.emissiveIntensity=parseFloat(t.EmissiveFactor.value)),t.Opacity&&(s.opacity=parseFloat(t.Opacity.value)),s.opacity<1&&(s.transparent=!0),t.ReflectionFactor&&(s.reflectivity=t.ReflectionFactor.value),t.Shininess&&(s.shininess=t.Shininess.value),t.Specular?s.specular=new Rt().fromArray(t.Specular.value):t.SpecularColor&&t.SpecularColor.type==="Color"&&(s.specular=new Rt().fromArray(t.SpecularColor.value));const r=this;return pe.get(n).children.forEach(function(o){const a=o.relationship;switch(a){case"Bump":s.bumpMap=r.getTexture(e,o.ID);break;case"Maya|TEX_ao_map":s.aoMap=r.getTexture(e,o.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":s.map=r.getTexture(e,o.ID),s.map!==void 0&&(s.map.encoding=ie);break;case"DisplacementColor":s.displacementMap=r.getTexture(e,o.ID);break;case"EmissiveColor":s.emissiveMap=r.getTexture(e,o.ID),s.emissiveMap!==void 0&&(s.emissiveMap.encoding=ie);break;case"NormalMap":case"Maya|TEX_normal_map":s.normalMap=r.getTexture(e,o.ID);break;case"ReflectionColor":s.envMap=r.getTexture(e,o.ID),s.envMap!==void 0&&(s.envMap.mapping=Uo,s.envMap.encoding=ie);break;case"SpecularColor":s.specularMap=r.getTexture(e,o.ID),s.specularMap!==void 0&&(s.specularMap.encoding=ie);break;case"TransparentColor":case"TransparencyFactor":s.alphaMap=r.getTexture(e,o.ID),s.transparent=!0;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",a);break}}),s}getTexture(t,e){return"LayeredTexture"in Wt.Objects&&e in Wt.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),e=pe.get(e).children[0].ID),t.get(e)}parseDeformers(){const t={},e={};if("Deformer"in Wt.Objects){const n=Wt.Objects.Deformer;for(const s in n){const r=n[s],o=pe.get(parseInt(s));if(r.attrType==="Skin"){const a=this.parseSkeleton(o,n);a.ID=s,o.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),a.geometryID=o.parents[0].ID,t[s]=a}else if(r.attrType==="BlendShape"){const a={id:s};a.rawTargets=this.parseMorphTargets(o,n),a.id=s,o.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),e[s]=a}}}return{skeletons:t,morphTargets:e}}parseSkeleton(t,e){const n=[];return t.children.forEach(function(s){const r=e[s.ID];if(r.attrType!=="Cluster")return;const o={ID:s.ID,indices:[],weights:[],transformLink:new Dt().fromArray(r.TransformLink.a)};"Indexes"in r&&(o.indices=r.Indexes.a,o.weights=r.Weights.a),n.push(o)}),{rawBones:n,bones:[]}}parseMorphTargets(t,e){const n=[];for(let s=0;s<t.children.length;s++){const r=t.children[s],o=e[r.ID],a={name:o.attrName,initialWeight:o.DeformPercent,id:o.id,fullWeights:o.FullWeights.a};if(o.attrType!=="BlendShapeChannel")return;a.geoID=pe.get(parseInt(r.ID)).children.filter(function(l){return l.relationship===void 0})[0].ID,n.push(a)}return n}parseScene(t,e,n){We=new de;const s=this.parseModels(t.skeletons,e,n),r=Wt.Objects.Model,o=this;s.forEach(function(l){const c=r[l.ID];o.setLookAtProperties(l,c),pe.get(l.ID).parents.forEach(function(u){const f=s.get(u.ID);f!==void 0&&f.add(l)}),l.parent===null&&We.add(l)}),this.bindSkeleton(t.skeletons,e,s),this.createAmbientLight(),We.traverse(function(l){if(l.userData.transformData){l.parent&&(l.userData.transformData.parentMatrix=l.parent.matrix,l.userData.transformData.parentMatrixWorld=l.parent.matrixWorld);const c=qp(l.userData.transformData);l.applyMatrix4(c),l.updateWorldMatrix()}});const a=new US().parse();We.children.length===1&&We.children[0].isGroup&&(We.children[0].animations=a,We=We.children[0]),We.animations=a}parseModels(t,e,n){const s=new Map,r=Wt.Objects.Model;for(const o in r){const a=parseInt(o),l=r[o],c=pe.get(a);let h=this.buildSkeleton(c,t,a,l.attrName);if(!h){switch(l.attrType){case"Camera":h=this.createCamera(c);break;case"Light":h=this.createLight(c);break;case"Mesh":h=this.createMesh(c,e,n);break;case"NurbsCurve":h=this.createCurve(c,e);break;case"LimbNode":case"Root":h=new Vl;break;case"Null":default:h=new de;break}h.name=l.attrName?Qt.sanitizeNodeName(l.attrName):"",h.ID=a}this.getTransformData(h,l),s.set(a,h)}return s}buildSkeleton(t,e,n,s){let r=null;return t.parents.forEach(function(o){for(const a in e){const l=e[a];l.rawBones.forEach(function(c,h){if(c.ID===o.ID){const u=r;r=new Vl,r.matrixWorld.copy(c.transformLink),r.name=s?Qt.sanitizeNodeName(s):"",r.ID=n,l.bones[h]=r,u!==null&&r.add(u)}})}}),r}createCamera(t){let e,n;if(t.children.forEach(function(s){const r=Wt.Objects.NodeAttribute[s.ID];r!==void 0&&(n=r)}),n===void 0)e=new oe;else{let s=0;n.CameraProjectionType!==void 0&&n.CameraProjectionType.value===1&&(s=1);let r=1;n.NearPlane!==void 0&&(r=n.NearPlane.value/1e3);let o=1e3;n.FarPlane!==void 0&&(o=n.FarPlane.value/1e3);let a=window.innerWidth,l=window.innerHeight;n.AspectWidth!==void 0&&n.AspectHeight!==void 0&&(a=n.AspectWidth.value,l=n.AspectHeight.value);const c=a/l;let h=45;n.FieldOfView!==void 0&&(h=n.FieldOfView.value);const u=n.FocalLength?n.FocalLength.value:null;switch(s){case 0:e=new ke(h,c,r,o),u!==null&&e.setFocalLength(u);break;case 1:e=new bc(-a/2,a/2,l/2,-l/2,r,o);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+s+"."),e=new oe;break}}return e}createLight(t){let e,n;if(t.children.forEach(function(s){const r=Wt.Objects.NodeAttribute[s.ID];r!==void 0&&(n=r)}),n===void 0)e=new oe;else{let s;n.LightType===void 0?s=0:s=n.LightType.value;let r=16777215;n.Color!==void 0&&(r=new Rt().fromArray(n.Color.value));let o=n.Intensity===void 0?1:n.Intensity.value/100;n.CastLightOnObject!==void 0&&n.CastLightOnObject.value===0&&(o=0);let a=0;n.FarAttenuationEnd!==void 0&&(n.EnableFarAttenuation!==void 0&&n.EnableFarAttenuation.value===0?a=0:a=n.FarAttenuationEnd.value);const l=1;switch(s){case 0:e=new jl(r,o,a,l);break;case 1:e=new Z1(r,o);break;case 2:let c=Math.PI/3;n.InnerAngle!==void 0&&(c=Rn.degToRad(n.InnerAngle.value));let h=0;n.OuterAngle!==void 0&&(h=Rn.degToRad(n.OuterAngle.value),h=Math.max(h,1)),e=new q1(r,o,a,c,h,l);break;default:console.warn("THREE.FBXLoader: Unknown light type "+n.LightType.value+", defaulting to a PointLight."),e=new jl(r,o);break}n.CastShadows!==void 0&&n.CastShadows.value===1&&(e.castShadow=!0)}return e}createMesh(t,e,n){let s,r=null,o=null;const a=[];return t.children.forEach(function(l){e.has(l.ID)&&(r=e.get(l.ID)),n.has(l.ID)&&a.push(n.get(l.ID))}),a.length>1?o=a:a.length>0?o=a[0]:(o=new ll({color:13421772}),a.push(o)),"color"in r.attributes&&a.forEach(function(l){l.vertexColors=!0}),r.FBX_Deformer?(s=new Jb(r,o),s.normalizeSkinWeights()):s=new $t(r,o),s}createCurve(t,e){const n=t.children.reduce(function(r,o){return e.has(o.ID)&&(r=e.get(o.ID)),r},null),s=new yp({color:3342591,linewidth:1});return new wp(n,s)}getTransformData(t,e){const n={};"InheritType"in e&&(n.inheritType=parseInt(e.InheritType.value)),"RotationOrder"in e?n.eulerOrder=Yp(e.RotationOrder.value):n.eulerOrder="ZYX","Lcl_Translation"in e&&(n.translation=e.Lcl_Translation.value),"PreRotation"in e&&(n.preRotation=e.PreRotation.value),"Lcl_Rotation"in e&&(n.rotation=e.Lcl_Rotation.value),"PostRotation"in e&&(n.postRotation=e.PostRotation.value),"Lcl_Scaling"in e&&(n.scale=e.Lcl_Scaling.value),"ScalingOffset"in e&&(n.scalingOffset=e.ScalingOffset.value),"ScalingPivot"in e&&(n.scalingPivot=e.ScalingPivot.value),"RotationOffset"in e&&(n.rotationOffset=e.RotationOffset.value),"RotationPivot"in e&&(n.rotationPivot=e.RotationPivot.value),t.userData.transformData=n}setLookAtProperties(t,e){"LookAtProperty"in e&&pe.get(t.ID).children.forEach(function(s){if(s.relationship==="LookAtProperty"){const r=Wt.Objects.Model[s.ID];if("Lcl_Translation"in r){const o=r.Lcl_Translation.value;t.target!==void 0?(t.target.position.fromArray(o),We.add(t.target)):t.lookAt(new I().fromArray(o))}}})}bindSkeleton(t,e,n){const s=this.parsePoseNodes();for(const r in t){const o=t[r];pe.get(parseInt(o.ID)).parents.forEach(function(l){if(e.has(l.ID)){const c=l.ID;pe.get(c).parents.forEach(function(u){n.has(u.ID)&&n.get(u.ID).bind(new Tc(o.bones),s[u.ID])})}})}}parsePoseNodes(){const t={};if("Pose"in Wt.Objects){const e=Wt.Objects.Pose;for(const n in e)if(e[n].attrType==="BindPose"&&e[n].NbPoseNodes>0){const s=e[n].PoseNode;Array.isArray(s)?s.forEach(function(r){t[r.Node]=new Dt().fromArray(r.Matrix.a)}):t[s.Node]=new Dt().fromArray(s.Matrix.a)}}return t}createAmbientLight(){if("GlobalSettings"in Wt&&"AmbientColor"in Wt.GlobalSettings){const t=Wt.GlobalSettings.AmbientColor.value,e=t[0],n=t[1],s=t[2];if(e!==0||n!==0||s!==0){const r=new Rt(e,n,s);We.add(new Op(r,1))}}}}class NS{constructor(){this.negativeMaterialIndices=!1}parse(t){const e=new Map;if("Geometry"in Wt.Objects){const n=Wt.Objects.Geometry;for(const s in n){const r=pe.get(parseInt(s)),o=this.parseGeometry(r,n[s],t);e.set(parseInt(s),o)}}return this.negativeMaterialIndices===!0&&console.warn("THREE.FBXLoader: The FBX file contains invalid (negative) material indices. The asset might not render as expected."),e}parseGeometry(t,e,n){switch(e.attrType){case"Mesh":return this.parseMeshGeometry(t,e,n);case"NurbsCurve":return this.parseNurbsGeometry(e)}}parseMeshGeometry(t,e,n){const s=n.skeletons,r=[],o=t.parents.map(function(u){return Wt.Objects.Model[u.ID]});if(o.length===0)return;const a=t.children.reduce(function(u,f){return s[f.ID]!==void 0&&(u=s[f.ID]),u},null);t.children.forEach(function(u){n.morphTargets[u.ID]!==void 0&&r.push(n.morphTargets[u.ID])});const l=o[0],c={};"RotationOrder"in l&&(c.eulerOrder=Yp(l.RotationOrder.value)),"InheritType"in l&&(c.inheritType=parseInt(l.InheritType.value)),"GeometricTranslation"in l&&(c.translation=l.GeometricTranslation.value),"GeometricRotation"in l&&(c.rotation=l.GeometricRotation.value),"GeometricScaling"in l&&(c.scale=l.GeometricScaling.value);const h=qp(c);return this.genGeometry(e,a,r,h)}genGeometry(t,e,n,s){const r=new fe;t.attrName&&(r.name=t.attrName);const o=this.parseGeoNode(t,e),a=this.genBuffers(o),l=new Xt(a.vertex,3);if(l.applyMatrix4(s),r.setAttribute("position",l),a.colors.length>0&&r.setAttribute("color",new Xt(a.colors,3)),e&&(r.setAttribute("skinIndex",new wc(a.weightsIndices,4)),r.setAttribute("skinWeight",new Xt(a.vertexWeights,4)),r.FBX_Deformer=e),a.normal.length>0){const c=new qe().getNormalMatrix(s),h=new Xt(a.normal,3);h.applyNormalMatrix(c),r.setAttribute("normal",h)}if(a.uvs.forEach(function(c,h){let u="uv"+(h+1).toString();h===0&&(u="uv"),r.setAttribute(u,new Xt(a.uvs[h],2))}),o.material&&o.material.mappingType!=="AllSame"){let c=a.materialIndex[0],h=0;if(a.materialIndex.forEach(function(u,f){u!==c&&(r.addGroup(h,f-h,c),c=u,h=f)}),r.groups.length>0){const u=r.groups[r.groups.length-1],f=u.start+u.count;f!==a.materialIndex.length&&r.addGroup(f,a.materialIndex.length-f,c)}r.groups.length===0&&r.addGroup(0,a.materialIndex.length,a.materialIndex[0])}return this.addMorphTargets(r,t,n,s),r}parseGeoNode(t,e){const n={};if(n.vertexPositions=t.Vertices!==void 0?t.Vertices.a:[],n.vertexIndices=t.PolygonVertexIndex!==void 0?t.PolygonVertexIndex.a:[],t.LayerElementColor&&(n.color=this.parseVertexColors(t.LayerElementColor[0])),t.LayerElementMaterial&&(n.material=this.parseMaterialIndices(t.LayerElementMaterial[0])),t.LayerElementNormal&&(n.normal=this.parseNormals(t.LayerElementNormal[0])),t.LayerElementUV){n.uv=[];let s=0;for(;t.LayerElementUV[s];)t.LayerElementUV[s].UV&&n.uv.push(this.parseUVs(t.LayerElementUV[s])),s++}return n.weightTable={},e!==null&&(n.skeleton=e,e.rawBones.forEach(function(s,r){s.indices.forEach(function(o,a){n.weightTable[o]===void 0&&(n.weightTable[o]=[]),n.weightTable[o].push({id:r,weight:s.weights[a]})})})),n}genBuffers(t){const e={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]};let n=0,s=0,r=!1,o=[],a=[],l=[],c=[],h=[],u=[];const f=this;return t.vertexIndices.forEach(function(d,g){let p,m=!1;d<0&&(d=d^-1,m=!0);let _=[],w=[];if(o.push(d*3,d*3+1,d*3+2),t.color){const x=So(g,n,d,t.color);l.push(x[0],x[1],x[2])}if(t.skeleton){if(t.weightTable[d]!==void 0&&t.weightTable[d].forEach(function(x){w.push(x.weight),_.push(x.id)}),w.length>4){r||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),r=!0);const x=[0,0,0,0],b=[0,0,0,0];w.forEach(function(S,P){let D=S,v=_[P];b.forEach(function(A,R,j){if(D>A){j[R]=D,D=A;const Q=x[R];x[R]=v,v=Q}})}),_=x,w=b}for(;w.length<4;)w.push(0),_.push(0);for(let x=0;x<4;++x)h.push(w[x]),u.push(_[x])}if(t.normal){const x=So(g,n,d,t.normal);a.push(x[0],x[1],x[2])}t.material&&t.material.mappingType!=="AllSame"&&(p=So(g,n,d,t.material)[0],p<0&&(f.negativeMaterialIndices=!0,p=0)),t.uv&&t.uv.forEach(function(x,b){const S=So(g,n,d,x);c[b]===void 0&&(c[b]=[]),c[b].push(S[0]),c[b].push(S[1])}),s++,m&&(s>4&&console.warn("THREE.FBXLoader: Polygons with more than four sides are not supported. Make sure to triangulate the geometry during export."),f.genFace(e,t,o,p,a,l,c,h,u,s),n++,s=0,o=[],a=[],l=[],c=[],h=[],u=[])}),e}genFace(t,e,n,s,r,o,a,l,c,h){for(let u=2;u<h;u++)t.vertex.push(e.vertexPositions[n[0]]),t.vertex.push(e.vertexPositions[n[1]]),t.vertex.push(e.vertexPositions[n[2]]),t.vertex.push(e.vertexPositions[n[(u-1)*3]]),t.vertex.push(e.vertexPositions[n[(u-1)*3+1]]),t.vertex.push(e.vertexPositions[n[(u-1)*3+2]]),t.vertex.push(e.vertexPositions[n[u*3]]),t.vertex.push(e.vertexPositions[n[u*3+1]]),t.vertex.push(e.vertexPositions[n[u*3+2]]),e.skeleton&&(t.vertexWeights.push(l[0]),t.vertexWeights.push(l[1]),t.vertexWeights.push(l[2]),t.vertexWeights.push(l[3]),t.vertexWeights.push(l[(u-1)*4]),t.vertexWeights.push(l[(u-1)*4+1]),t.vertexWeights.push(l[(u-1)*4+2]),t.vertexWeights.push(l[(u-1)*4+3]),t.vertexWeights.push(l[u*4]),t.vertexWeights.push(l[u*4+1]),t.vertexWeights.push(l[u*4+2]),t.vertexWeights.push(l[u*4+3]),t.weightsIndices.push(c[0]),t.weightsIndices.push(c[1]),t.weightsIndices.push(c[2]),t.weightsIndices.push(c[3]),t.weightsIndices.push(c[(u-1)*4]),t.weightsIndices.push(c[(u-1)*4+1]),t.weightsIndices.push(c[(u-1)*4+2]),t.weightsIndices.push(c[(u-1)*4+3]),t.weightsIndices.push(c[u*4]),t.weightsIndices.push(c[u*4+1]),t.weightsIndices.push(c[u*4+2]),t.weightsIndices.push(c[u*4+3])),e.color&&(t.colors.push(o[0]),t.colors.push(o[1]),t.colors.push(o[2]),t.colors.push(o[(u-1)*3]),t.colors.push(o[(u-1)*3+1]),t.colors.push(o[(u-1)*3+2]),t.colors.push(o[u*3]),t.colors.push(o[u*3+1]),t.colors.push(o[u*3+2])),e.material&&e.material.mappingType!=="AllSame"&&(t.materialIndex.push(s),t.materialIndex.push(s),t.materialIndex.push(s)),e.normal&&(t.normal.push(r[0]),t.normal.push(r[1]),t.normal.push(r[2]),t.normal.push(r[(u-1)*3]),t.normal.push(r[(u-1)*3+1]),t.normal.push(r[(u-1)*3+2]),t.normal.push(r[u*3]),t.normal.push(r[u*3+1]),t.normal.push(r[u*3+2])),e.uv&&e.uv.forEach(function(f,d){t.uvs[d]===void 0&&(t.uvs[d]=[]),t.uvs[d].push(a[d][0]),t.uvs[d].push(a[d][1]),t.uvs[d].push(a[d][(u-1)*2]),t.uvs[d].push(a[d][(u-1)*2+1]),t.uvs[d].push(a[d][u*2]),t.uvs[d].push(a[d][u*2+1])})}addMorphTargets(t,e,n,s){if(n.length===0)return;t.morphTargetsRelative=!0,t.morphAttributes.position=[];const r=this;n.forEach(function(o){o.rawTargets.forEach(function(a){const l=Wt.Objects.Geometry[a.geoID];l!==void 0&&r.genMorphGeometry(t,e,l,s,a.name)})})}genMorphGeometry(t,e,n,s,r){const o=e.PolygonVertexIndex!==void 0?e.PolygonVertexIndex.a:[],a=n.Vertices!==void 0?n.Vertices.a:[],l=n.Indexes!==void 0?n.Indexes.a:[],c=t.attributes.position.count*3,h=new Float32Array(c);for(let g=0;g<l.length;g++){const p=l[g]*3;h[p]=a[g*3],h[p+1]=a[g*3+1],h[p+2]=a[g*3+2]}const u={vertexIndices:o,vertexPositions:h},f=this.genBuffers(u),d=new Xt(f.vertex,3);d.name=r||n.attrName,d.applyMatrix4(s),t.morphAttributes.position.push(d)}parseNormals(t){const e=t.MappingInformationType,n=t.ReferenceInformationType,s=t.Normals.a;let r=[];return n==="IndexToDirect"&&("NormalIndex"in t?r=t.NormalIndex.a:"NormalsIndex"in t&&(r=t.NormalsIndex.a)),{dataSize:3,buffer:s,indices:r,mappingType:e,referenceType:n}}parseUVs(t){const e=t.MappingInformationType,n=t.ReferenceInformationType,s=t.UV.a;let r=[];return n==="IndexToDirect"&&(r=t.UVIndex.a),{dataSize:2,buffer:s,indices:r,mappingType:e,referenceType:n}}parseVertexColors(t){const e=t.MappingInformationType,n=t.ReferenceInformationType,s=t.Colors.a;let r=[];return n==="IndexToDirect"&&(r=t.ColorIndex.a),{dataSize:4,buffer:s,indices:r,mappingType:e,referenceType:n}}parseMaterialIndices(t){const e=t.MappingInformationType,n=t.ReferenceInformationType;if(e==="NoMappingInformation")return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:n};const s=t.Materials.a,r=[];for(let o=0;o<s.length;++o)r.push(o);return{dataSize:1,buffer:s,indices:r,mappingType:e,referenceType:n}}parseNurbsGeometry(t){const e=parseInt(t.Order);if(isNaN(e))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",t.Order,t.id),new fe;const n=e-1,s=t.KnotVector.a,r=[],o=t.Points.a;for(let u=0,f=o.length;u<f;u+=4)r.push(new ee().fromArray(o,u));let a,l;if(t.Form==="Closed")r.push(r[0]);else if(t.Form==="Periodic"){a=n,l=s.length-1-a;for(let u=0;u<n;++u)r.push(r[u])}const h=new FS(n,s,r,a,l).getPoints(r.length*12);return new fe().setFromPoints(h)}}class US{parse(){const t=[],e=this.parseClips();if(e!==void 0)for(const n in e){const s=e[n],r=this.addClip(s);t.push(r)}return t}parseClips(){if(Wt.Objects.AnimationCurve===void 0)return;const t=this.parseAnimationCurveNodes();this.parseAnimationCurves(t);const e=this.parseAnimationLayers(t);return this.parseAnimStacks(e)}parseAnimationCurveNodes(){const t=Wt.Objects.AnimationCurveNode,e=new Map;for(const n in t){const s=t[n];if(s.attrName.match(/S|R|T|DeformPercent/)!==null){const r={id:s.id,attr:s.attrName,curves:{}};e.set(r.id,r)}}return e}parseAnimationCurves(t){const e=Wt.Objects.AnimationCurve;for(const n in e){const s={id:e[n].id,times:e[n].KeyTime.a.map(GS),values:e[n].KeyValueFloat.a},r=pe.get(s.id);if(r!==void 0){const o=r.parents[0].ID,a=r.parents[0].relationship;a.match(/X/)?t.get(o).curves.x=s:a.match(/Y/)?t.get(o).curves.y=s:a.match(/Z/)?t.get(o).curves.z=s:a.match(/d|DeformPercent/)&&t.has(o)&&(t.get(o).curves.morph=s)}}}parseAnimationLayers(t){const e=Wt.Objects.AnimationLayer,n=new Map;for(const s in e){const r=[],o=pe.get(parseInt(s));o!==void 0&&(o.children.forEach(function(l,c){if(t.has(l.ID)){const h=t.get(l.ID);if(h.curves.x!==void 0||h.curves.y!==void 0||h.curves.z!==void 0){if(r[c]===void 0){const u=pe.get(l.ID).parents.filter(function(f){return f.relationship!==void 0})[0].ID;if(u!==void 0){const f=Wt.Objects.Model[u.toString()];if(f===void 0){console.warn("THREE.FBXLoader: Encountered a unused curve.",l);return}const d={modelName:f.attrName?Qt.sanitizeNodeName(f.attrName):"",ID:f.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};We.traverse(function(g){g.ID===f.id&&(d.transform=g.matrix,g.userData.transformData&&(d.eulerOrder=g.userData.transformData.eulerOrder))}),d.transform||(d.transform=new Dt),"PreRotation"in f&&(d.preRotation=f.PreRotation.value),"PostRotation"in f&&(d.postRotation=f.PostRotation.value),r[c]=d}}r[c]&&(r[c][h.attr]=h)}else if(h.curves.morph!==void 0){if(r[c]===void 0){const u=pe.get(l.ID).parents.filter(function(_){return _.relationship!==void 0})[0].ID,f=pe.get(u).parents[0].ID,d=pe.get(f).parents[0].ID,g=pe.get(d).parents[0].ID,p=Wt.Objects.Model[g],m={modelName:p.attrName?Qt.sanitizeNodeName(p.attrName):"",morphName:Wt.Objects.Deformer[u].attrName};r[c]=m}r[c][h.attr]=h}}}),n.set(parseInt(s),r))}return n}parseAnimStacks(t){const e=Wt.Objects.AnimationStack,n={};for(const s in e){const r=pe.get(parseInt(s)).children;r.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");const o=t.get(r[0].ID);n[s]={name:e[s].attrName,layer:o}}return n}addClip(t){let e=[];const n=this;return t.layer.forEach(function(s){e=e.concat(n.generateTracks(s))}),new k1(t.name,-1,e)}generateTracks(t){const e=[];let n=new I,s=new un,r=new I;if(t.transform&&t.transform.decompose(n,s,r),n=n.toArray(),s=new fn().setFromQuaternion(s,t.eulerOrder).toArray(),r=r.toArray(),t.T!==void 0&&Object.keys(t.T.curves).length>0){const o=this.generateVectorTrack(t.modelName,t.T.curves,n,"position");o!==void 0&&e.push(o)}if(t.R!==void 0&&Object.keys(t.R.curves).length>0){const o=this.generateRotationTrack(t.modelName,t.R.curves,s,t.preRotation,t.postRotation,t.eulerOrder);o!==void 0&&e.push(o)}if(t.S!==void 0&&Object.keys(t.S.curves).length>0){const o=this.generateVectorTrack(t.modelName,t.S.curves,r,"scale");o!==void 0&&e.push(o)}if(t.DeformPercent!==void 0){const o=this.generateMorphTrack(t);o!==void 0&&e.push(o)}return e}generateVectorTrack(t,e,n,s){const r=this.getTimesForAllAxes(e),o=this.getKeyframeTrackValues(r,e,n);return new Dr(t+"."+s,r,o)}generateRotationTrack(t,e,n,s,r,o){e.x!==void 0&&(this.interpolateRotations(e.x),e.x.values=e.x.values.map(Rn.degToRad)),e.y!==void 0&&(this.interpolateRotations(e.y),e.y.values=e.y.values.map(Rn.degToRad)),e.z!==void 0&&(this.interpolateRotations(e.z),e.z.values=e.z.values.map(Rn.degToRad));const a=this.getTimesForAllAxes(e),l=this.getKeyframeTrackValues(a,e,n);s!==void 0&&(s=s.map(Rn.degToRad),s.push(o),s=new fn().fromArray(s),s=new un().setFromEuler(s)),r!==void 0&&(r=r.map(Rn.degToRad),r.push(o),r=new fn().fromArray(r),r=new un().setFromEuler(r).invert());const c=new un,h=new fn,u=[];for(let f=0;f<l.length;f+=3)h.set(l[f],l[f+1],l[f+2],o),c.setFromEuler(h),s!==void 0&&c.premultiply(s),r!==void 0&&c.multiply(r),c.toArray(u,f/3*4);return new Gs(t+".quaternion",a,u)}generateMorphTrack(t){const e=t.DeformPercent.curves.morph,n=e.values.map(function(r){return r/100}),s=We.getObjectByName(t.modelName).morphTargetDictionary[t.morphName];return new Ir(t.modelName+".morphTargetInfluences["+s+"]",e.times,n)}getTimesForAllAxes(t){let e=[];if(t.x!==void 0&&(e=e.concat(t.x.times)),t.y!==void 0&&(e=e.concat(t.y.times)),t.z!==void 0&&(e=e.concat(t.z.times)),e=e.sort(function(n,s){return n-s}),e.length>1){let n=1,s=e[0];for(let r=1;r<e.length;r++){const o=e[r];o!==s&&(e[n]=o,s=o,n++)}e=e.slice(0,n)}return e}getKeyframeTrackValues(t,e,n){const s=n,r=[];let o=-1,a=-1,l=-1;return t.forEach(function(c){if(e.x&&(o=e.x.times.indexOf(c)),e.y&&(a=e.y.times.indexOf(c)),e.z&&(l=e.z.times.indexOf(c)),o!==-1){const h=e.x.values[o];r.push(h),s[0]=h}else r.push(s[0]);if(a!==-1){const h=e.y.values[a];r.push(h),s[1]=h}else r.push(s[1]);if(l!==-1){const h=e.z.values[l];r.push(h),s[2]=h}else r.push(s[2])}),r}interpolateRotations(t){for(let e=1;e<t.values.length;e++){const n=t.values[e-1],s=t.values[e]-n,r=Math.abs(s);if(r>=180){const o=r/180,a=s/o;let l=n+a;const c=t.times[e-1],u=(t.times[e]-c)/o;let f=c+u;const d=[],g=[];for(;f<t.times[e];)d.push(f),f+=u,g.push(l),l+=a;t.times=Mf(t.times,e,d),t.values=Mf(t.values,e,g)}}}}class kS{getPrevNode(){return this.nodeStack[this.currentIndent-2]}getCurrentNode(){return this.nodeStack[this.currentIndent-1]}getCurrentProp(){return this.currentProp}pushStack(t){this.nodeStack.push(t),this.currentIndent+=1}popStack(){this.nodeStack.pop(),this.currentIndent-=1}setCurrentProp(t,e){this.currentProp=t,this.currentPropName=e}parse(t){this.currentIndent=0,this.allNodes=new jp,this.nodeStack=[],this.currentProp=[],this.currentPropName="";const e=this,n=t.split(/[\r\n]+/);return n.forEach(function(s,r){const o=s.match(/^[\s\t]*;/),a=s.match(/^[\s\t]*$/);if(o||a)return;const l=s.match("^\\t{"+e.currentIndent+"}(\\w+):(.*){",""),c=s.match("^\\t{"+e.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),h=s.match("^\\t{"+(e.currentIndent-1)+"}}");l?e.parseNodeBegin(s,l):c?e.parseNodeProperty(s,c,n[++r]):h?e.popStack():s.match(/^[^\s\t}]/)&&e.parseNodePropertyContinued(s)}),this.allNodes}parseNodeBegin(t,e){const n=e[1].trim().replace(/^"/,"").replace(/"$/,""),s=e[2].split(",").map(function(l){return l.trim().replace(/^"/,"").replace(/"$/,"")}),r={name:n},o=this.parseNodeAttr(s),a=this.getCurrentNode();this.currentIndent===0?this.allNodes.add(n,r):n in a?(n==="PoseNode"?a.PoseNode.push(r):a[n].id!==void 0&&(a[n]={},a[n][a[n].id]=a[n]),o.id!==""&&(a[n][o.id]=r)):typeof o.id=="number"?(a[n]={},a[n][o.id]=r):n!=="Properties70"&&(n==="PoseNode"?a[n]=[r]:a[n]=r),typeof o.id=="number"&&(r.id=o.id),o.name!==""&&(r.attrName=o.name),o.type!==""&&(r.attrType=o.type),this.pushStack(r)}parseNodeAttr(t){let e=t[0];t[0]!==""&&(e=parseInt(t[0]),isNaN(e)&&(e=t[0]));let n="",s="";return t.length>1&&(n=t[1].replace(/^(\w+)::/,""),s=t[2]),{id:e,name:n,type:s}}parseNodeProperty(t,e,n){let s=e[1].replace(/^"/,"").replace(/"$/,"").trim(),r=e[2].replace(/^"/,"").replace(/"$/,"").trim();s==="Content"&&r===","&&(r=n.replace(/"/g,"").replace(/,$/,"").trim());const o=this.getCurrentNode();if(o.name==="Properties70"){this.parseNodeSpecialProperty(t,s,r);return}if(s==="C"){const l=r.split(",").slice(1),c=parseInt(l[0]),h=parseInt(l[1]);let u=r.split(",").slice(3);u=u.map(function(f){return f.trim().replace(/^"/,"")}),s="connections",r=[c,h],XS(r,u),o[s]===void 0&&(o[s]=[])}s==="Node"&&(o.id=r),s in o&&Array.isArray(o[s])?o[s].push(r):s!=="a"?o[s]=r:o.a=r,this.setCurrentProp(o,s),s==="a"&&r.slice(-1)!==","&&(o.a=ml(r))}parseNodePropertyContinued(t){const e=this.getCurrentNode();e.a+=t,t.slice(-1)!==","&&(e.a=ml(e.a))}parseNodeSpecialProperty(t,e,n){const s=n.split('",').map(function(h){return h.trim().replace(/^\"/,"").replace(/\s/,"_")}),r=s[0],o=s[1],a=s[2],l=s[3];let c=s[4];switch(o){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":c=parseFloat(c);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":c=ml(c);break}this.getPrevNode()[r]={type:o,type2:a,flag:l,value:c},this.setCurrentProp(this.getPrevNode(),r)}}class BS{parse(t){const e=new yf(t);e.skip(23);const n=e.getUint32();if(n<6400)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+n);const s=new jp;for(;!this.endOfContent(e);){const r=this.parseNode(e,n);r!==null&&s.add(r.name,r)}return s}endOfContent(t){return t.size()%16===0?(t.getOffset()+160+16&-16)>=t.size():t.getOffset()+160+16>=t.size()}parseNode(t,e){const n={},s=e>=7500?t.getUint64():t.getUint32(),r=e>=7500?t.getUint64():t.getUint32();e>=7500?t.getUint64():t.getUint32();const o=t.getUint8(),a=t.getString(o);if(s===0)return null;const l=[];for(let f=0;f<r;f++)l.push(this.parseProperty(t));const c=l.length>0?l[0]:"",h=l.length>1?l[1]:"",u=l.length>2?l[2]:"";for(n.singleProperty=r===1&&t.getOffset()===s;s>t.getOffset();){const f=this.parseNode(t,e);f!==null&&this.parseSubNode(a,n,f)}return n.propertyList=l,typeof c=="number"&&(n.id=c),h!==""&&(n.attrName=h),u!==""&&(n.attrType=u),a!==""&&(n.name=a),n}parseSubNode(t,e,n){if(n.singleProperty===!0){const s=n.propertyList[0];Array.isArray(s)?(e[n.name]=n,n.a=s):e[n.name]=s}else if(t==="Connections"&&n.name==="C"){const s=[];n.propertyList.forEach(function(r,o){o!==0&&s.push(r)}),e.connections===void 0&&(e.connections=[]),e.connections.push(s)}else if(n.name==="Properties70")Object.keys(n).forEach(function(r){e[r]=n[r]});else if(t==="Properties70"&&n.name==="P"){let s=n.propertyList[0],r=n.propertyList[1];const o=n.propertyList[2],a=n.propertyList[3];let l;s.indexOf("Lcl ")===0&&(s=s.replace("Lcl ","Lcl_")),r.indexOf("Lcl ")===0&&(r=r.replace("Lcl ","Lcl_")),r==="Color"||r==="ColorRGB"||r==="Vector"||r==="Vector3D"||r.indexOf("Lcl_")===0?l=[n.propertyList[4],n.propertyList[5],n.propertyList[6]]:l=n.propertyList[4],e[s]={type:r,type2:o,flag:a,value:l}}else e[n.name]===void 0?typeof n.id=="number"?(e[n.name]={},e[n.name][n.id]=n):e[n.name]=n:n.name==="PoseNode"?(Array.isArray(e[n.name])||(e[n.name]=[e[n.name]]),e[n.name].push(n)):e[n.name][n.id]===void 0&&(e[n.name][n.id]=n)}parseProperty(t){const e=t.getString(1);let n;switch(e){case"C":return t.getBoolean();case"D":return t.getFloat64();case"F":return t.getFloat32();case"I":return t.getInt32();case"L":return t.getInt64();case"R":return n=t.getUint32(),t.getArrayBuffer(n);case"S":return n=t.getUint32(),t.getString(n);case"Y":return t.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":const s=t.getUint32(),r=t.getUint32(),o=t.getUint32();if(r===0)switch(e){case"b":case"c":return t.getBooleanArray(s);case"d":return t.getFloat64Array(s);case"f":return t.getFloat32Array(s);case"i":return t.getInt32Array(s);case"l":return t.getInt64Array(s)}const a=SS(new Uint8Array(t.getArrayBuffer(o))),l=new yf(a.buffer);switch(e){case"b":case"c":return l.getBooleanArray(s);case"d":return l.getFloat64Array(s);case"f":return l.getFloat32Array(s);case"i":return l.getInt32Array(s);case"l":return l.getInt64Array(s)}break;default:throw new Error("THREE.FBXLoader: Unknown property type "+e)}}}class yf{constructor(t,e){this.dv=new DataView(t),this.offset=0,this.littleEndian=e!==void 0?e:!0,this._textDecoder=new TextDecoder}getOffset(){return this.offset}size(){return this.dv.buffer.byteLength}skip(t){this.offset+=t}getBoolean(){return(this.getUint8()&1)===1}getBooleanArray(t){const e=[];for(let n=0;n<t;n++)e.push(this.getBoolean());return e}getUint8(){const t=this.dv.getUint8(this.offset);return this.offset+=1,t}getInt16(){const t=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,t}getInt32(){const t=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,t}getInt32Array(t){const e=[];for(let n=0;n<t;n++)e.push(this.getInt32());return e}getUint32(){const t=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,t}getInt64(){let t,e;return this.littleEndian?(t=this.getUint32(),e=this.getUint32()):(e=this.getUint32(),t=this.getUint32()),e&2147483648?(e=~e&4294967295,t=~t&4294967295,t===4294967295&&(e=e+1&4294967295),t=t+1&4294967295,-(e*4294967296+t)):e*4294967296+t}getInt64Array(t){const e=[];for(let n=0;n<t;n++)e.push(this.getInt64());return e}getUint64(){let t,e;return this.littleEndian?(t=this.getUint32(),e=this.getUint32()):(e=this.getUint32(),t=this.getUint32()),e*4294967296+t}getFloat32(){const t=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,t}getFloat32Array(t){const e=[];for(let n=0;n<t;n++)e.push(this.getFloat32());return e}getFloat64(){const t=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,t}getFloat64Array(t){const e=[];for(let n=0;n<t;n++)e.push(this.getFloat64());return e}getArrayBuffer(t){const e=this.dv.buffer.slice(this.offset,this.offset+t);return this.offset+=t,e}getString(t){const e=this.offset;let n=new Uint8Array(this.dv.buffer,e,t);this.skip(t);const s=n.indexOf(0);return s>=0&&(n=new Uint8Array(this.dv.buffer,e,s)),this._textDecoder.decode(n)}}class jp{add(t,e){this[t]=e}}function VS(i){const t="Kaydara FBX Binary  \0";return i.byteLength>=t.length&&t===$p(i,0,t.length)}function HS(i){const t=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"];let e=0;function n(s){const r=i[s-1];return i=i.slice(e+s),e++,r}for(let s=0;s<t.length;++s)if(n(1)===t[s])return!1;return!0}function wf(i){const t=/FBXVersion: (\d+)/,e=i.match(t);if(e)return parseInt(e[1]);throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function GS(i){return i/46186158e3}const WS=[];function So(i,t,e,n){let s;switch(n.mappingType){case"ByPolygonVertex":s=i;break;case"ByPolygon":s=t;break;case"ByVertice":s=e;break;case"AllSame":s=n.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+n.mappingType)}n.referenceType==="IndexToDirect"&&(s=n.indices[s]);const r=s*n.dataSize,o=r+n.dataSize;return jS(WS,n.buffer,r,o)}const pl=new fn,fs=new I;function qp(i){const t=new Dt,e=new Dt,n=new Dt,s=new Dt,r=new Dt,o=new Dt,a=new Dt,l=new Dt,c=new Dt,h=new Dt,u=new Dt,f=new Dt,d=i.inheritType?i.inheritType:0;if(i.translation&&t.setPosition(fs.fromArray(i.translation)),i.preRotation){const R=i.preRotation.map(Rn.degToRad);R.push(i.eulerOrder||fn.DEFAULT_ORDER),e.makeRotationFromEuler(pl.fromArray(R))}if(i.rotation){const R=i.rotation.map(Rn.degToRad);R.push(i.eulerOrder||fn.DEFAULT_ORDER),n.makeRotationFromEuler(pl.fromArray(R))}if(i.postRotation){const R=i.postRotation.map(Rn.degToRad);R.push(i.eulerOrder||fn.DEFAULT_ORDER),s.makeRotationFromEuler(pl.fromArray(R)),s.invert()}i.scale&&r.scale(fs.fromArray(i.scale)),i.scalingOffset&&a.setPosition(fs.fromArray(i.scalingOffset)),i.scalingPivot&&o.setPosition(fs.fromArray(i.scalingPivot)),i.rotationOffset&&l.setPosition(fs.fromArray(i.rotationOffset)),i.rotationPivot&&c.setPosition(fs.fromArray(i.rotationPivot)),i.parentMatrixWorld&&(u.copy(i.parentMatrix),h.copy(i.parentMatrixWorld));const g=e.clone().multiply(n).multiply(s),p=new Dt;p.extractRotation(h);const m=new Dt;m.copyPosition(h);const _=m.clone().invert().multiply(h),w=p.clone().invert().multiply(_),x=r,b=new Dt;if(d===0)b.copy(p).multiply(g).multiply(w).multiply(x);else if(d===1)b.copy(p).multiply(w).multiply(g).multiply(x);else{const j=new Dt().scale(new I().setFromMatrixScale(u)).clone().invert(),Q=w.clone().multiply(j);b.copy(p).multiply(g).multiply(Q).multiply(x)}const S=c.clone().invert(),P=o.clone().invert();let D=t.clone().multiply(l).multiply(c).multiply(e).multiply(n).multiply(s).multiply(S).multiply(a).multiply(o).multiply(r).multiply(P);const v=new Dt().copyPosition(D),A=h.clone().multiply(v);return f.copyPosition(A),D=f.clone().multiply(b),D.premultiply(h.invert()),D}function Yp(i){i=i||0;const t=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return i===6?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),t[0]):t[i]}function ml(i){return i.split(",").map(function(e){return parseFloat(e)})}function $p(i,t,e){return t===void 0&&(t=0),e===void 0&&(e=i.byteLength),new TextDecoder().decode(new Uint8Array(i,t,e))}function XS(i,t){for(let e=0,n=i.length,s=t.length;e<s;e++,n++)i[n]=t[e]}function jS(i,t,e,n){for(let s=e,r=0;s<n;s++,r++)i[r]=t[s];return i}function Mf(i,t,e){return i.slice(0,t).concat(e).concat(i.slice(t))}const qS=new zS,YS=i=>new Promise((t,e)=>{qS.load(i,n=>{t(n)},()=>{},n=>{e(n)})}),Zp=(i,t)=>{i.aspect=window.innerWidth/window.innerHeight,i.updateProjectionMatrix(),t.setSize(window.innerWidth,window.innerHeight),t.setPixelRatio(Math.min(window.devicePixelRatio,2))},Kp=i=>{const t=document.getElementById(i),e=new Zb,n=new ke(60,window.innerWidth/window.innerHeight,1,1e5);e.add(n);const s=new fS(n,t);s.enableDamping=!0,s.enableZoom=!1,s.minDistance=100,s.maxDistance=2e3,e.add(new Op(11382189));const r=new jl(16777215,1,1e4);r.position.set(1e3,2e3,1e3),r.castShadow=!0,e.add(r);const o=new vp({canvas:t});return o.setSize(window.innerWidth,window.innerHeight),o.setPixelRatio(Math.min(window.devicePixelRatio,2)),o.setClearColor(new Rt(0),1),o.shadowMap.enabled=!0,o.shadowMap.type=Qd,{scene:e,camera:n,controls:s,renderer:o}},Jp=(i,t)=>{const e=document.body;e.onwheel=n=>{const s=n.clientX/window.innerWidth*2-1,r=-(n.clientY/window.innerHeight*2-1),o=new I(s,r,.5);o.unproject(i),o.sub(i.position).normalize();const a=30,l=n.wheelDelta/Math.abs(n.wheelDelta);i.position.x+=o.x*l*a,i.position.y+=o.y*l*a,i.position.z+=o.z*l*a,t.target.x+=o.x*l*a,t.target.y+=o.y*l*a,t.target.z+=o.z*l*a}},Qp=(i,t,e)=>{let n=!0;document.onmousedown=()=>{n=!0,document.onmousemove=()=>{n=!1}},document.onmouseup=s=>{n&&s.target.nodeName==="CANVAS"&&$S(s,i,t,e),document.onmousemove=null}},$S=(i,t,e,n)=>{let s=null;const r=i.clientX/window.innerWidth*2-1,o=-(i.clientY/window.innerHeight*2-1),c=new I(r,o,.5).unproject(e).sub(e.position).normalize(),u=new aS(e.position,c).intersectObjects(t.children,!0);u.length&&(s=u[0]),s&&n(s,3,1e3)},je={mesh:"#1B3045",head:"#ffffff",surroundLineColor:"#4f90bb",risingColor:"#5588aa",liveColor:"#ffffff",radarColor:"#ff8800",wallColor:"#fab73f",circleColor:"#00bbff",coneColor:"#ffff00",flyColor:"#00bbff",sparklesColor:[13758190,15263976,12374766,9498256,11592447,13296127,16759807,15794175,16777200,16758213,16775885,16767673,16774638,16119260,16777184,14745599]};class ZS{constructor(t,e,n,s){this.height=n,this.time=s,this.scene=t,this.child=e,this.createMesh(),this.createLine()}createMesh(){this.child.geometry.computeBoundingBox(),this.child.geometry.computeBoundingSphere();const{max:t,min:e}=this.child.geometry.boundingBox,n=t.z-e.z,s=new Fe({uniforms:{u_city_color:{value:new Rt(je.mesh)},u_head_color:{value:new Rt(je.head)},u_size:{value:n},u_rising_height:this.height,u_rising_color:{value:new Rt(je.risingColor)},u_time:this.time},vertexShader:`
        uniform float u_time;
        
        varying vec3 v_position;

        void main() {
          float f_rising_duration = 4.0;
          float f_risen = u_time / f_rising_duration;
          if (f_risen > 1.0) {
            f_risen = 1.0;
          }
          float z = position.z * f_risen;

          v_position = position;
          gl_Position = projectionMatrix * modelViewMatrix * vec4(vec2(position), z, 1.0);
        }
      `,fragmentShader:`
        uniform vec3 u_city_color;
        uniform vec3 u_head_color;
        uniform float u_size;
        uniform vec3 u_rising_color;
        uniform float u_rising_height;
        varying vec3 v_position;

        void main() {
          vec3 base_color = u_city_color;
          base_color = mix(base_color, u_head_color, v_position.z / u_size);
          if (u_rising_height > v_position.z && u_rising_height < v_position.z + 6.0) {
            float f_index = (u_rising_height - v_position.z) / 3.0;
            base_color = mix(u_rising_color, base_color, abs(f_index - 1.0));
          }
          
          gl_FragColor = vec4(base_color, 1.0);
        }
      `}),r=new $t(this.child.geometry,s);r.position.copy(this.child.position),r.rotation.copy(this.child.rotation),r.scale.copy(this.child.scale),this.scene.add(r)}createLine(){const t=new d1(this.child.geometry),{max:e,min:n}=this.child.geometry.boundingBox,s=new Fe({uniforms:{line_color:{value:new Rt(je.surroundLineColor)},u_time:this.time,u_max:{value:e},u_min:{value:n},live_color:{value:new Rt(je.liveColor)}},vertexShader:`
        uniform float u_time;
        uniform vec3 line_color;
        uniform vec3 live_color;
        uniform vec3 u_max;
        uniform vec3 u_min;

        varying vec3 v_color;

        void main() {
          float f_rising_duration = 4.0;
          float f_risen = u_time / f_rising_duration;
          if (f_risen > 1.0) {
            f_risen = 1.0;
          }
          float z = position.z * f_risen;

          float new_time = mod(u_time * 0.1, 1.0);
          float rangY = mix(u_min.y, u_max.y, new_time);
          if (rangY < position.y && rangY > position.y - 200.0) {
            float f_index = 1.0 - sin((position.y - rangY) / 200.0 * 3.14);
            float r = mix(live_color.r, line_color.r, f_index);
            float g = mix(live_color.g, line_color.g, f_index);
            float b = mix(live_color.b, line_color.b, f_index);

            v_color = vec3(r, g, b);
          } else {
            v_color = line_color;
          }
          gl_Position = projectionMatrix * modelViewMatrix * vec4(vec2(position), z, 1.0);
        }
      `,fragmentShader:`
        varying vec3 v_color;

        void main() {
          gl_FragColor = vec4(v_color, 1.0);
        }
      `}),r=new e1(t,s);r.scale.copy(this.child.scale),r.rotation.copy(this.child.rotation),r.position.copy(this.child.position),this.scene.add(r)}}class KS{constructor(t){this.scene=t,this.url="/src/assets/black-bg.png",this.init()}init(){const t=new Vr,e=new On(5e3,32,32),n=new vi({side:Be,map:t.load(this.url)}),s=new $t(e,n);s.position.set(0,0,0),this.scene.add(s)}}class JS{constructor(t,e){this.scene=t,this.time=e,this.init()}init(){const e=new Ur(100,100,1,1),n=new Fe({uniforms:{u_color:{value:new Rt(je.radarColor)},u_radius:{value:50},u_time:this.time},transparent:!0,side:Be,vertexShader:`
        varying vec2 v_position;

        void main() {
          v_position = vec2(position);
          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
      `,fragmentShader:`
        precision mediump float;
        varying vec2 v_position;

        uniform float u_time;
        uniform float u_radius;
        uniform vec3 u_color;

        void main() {
          float angle = atan(v_position.x, v_position.y);
          float new_angle = mod(angle + u_time, 3.1215926 * 2.0);
          float dis = distance(vec2(0.0, 0.0), v_position);
          float borderWidth = 2.0;
          float f_opacity = 1.0;
          if (dis > u_radius) {// 处于雷达之外
            f_opacity = 0.0;
          } else if (dis > u_radius - borderWidth) {// 处于圆环上
            f_opacity = 1.0;
          } else {// 处于圆环内
            f_opacity = 1.0 - new_angle;
          }

          gl_FragColor = vec4(u_color, f_opacity);
        }
      `}),s=new $t(e,n);s.position.set(300,10,0),s.rotateX(-Math.PI/2),this.scene.add(s)}}let tm=class{constructor(t,e){this.scene=t,this.time=e}createCylinder(t){const e=new Yi(t.radius,t.radius,t.height,32,1,t.open);e.translate(0,t.height/2,0);const n=new Fe({uniforms:{u_time:this.time,u_color:{value:new Rt(t.color)},u_height:{value:t.height},u_opacity:{value:t.opacity},u_speed:{value:t.speed}},transparent:!0,side:Be,depthTest:!1,vertexShader:`
        uniform float u_time;
        uniform float u_height;
        uniform float u_speed;

        varying float v_opacity;

        void main() {
          vec3 v_position = position * mod(u_time / u_speed, 1.0);
          v_opacity = (u_height - position.y) / u_height;
          gl_Position = projectionMatrix * modelViewMatrix * vec4(v_position, 1.0);
        }
      `,fragmentShader:`
        uniform vec3 u_color;
        uniform float u_opacity;

        varying float v_opacity;

        void main() {
          gl_FragColor = vec4(u_color, v_opacity * u_opacity);
        }
      `}),s=new $t(e,n);s.position.copy(t.position),this.scene.add(s)}};class QS{constructor(t,e){new tm(t,e).createCylinder({radius:50,height:50,opacity:.6,speed:2,open:!0,color:je.wallColor,position:{x:0,y:0,z:0}})}}class tT{constructor(t,e){new tm(t,e).createCylinder({radius:50,height:1,opacity:.6,speed:1,open:!1,color:je.circleColor,position:{x:300,y:0,z:300}})}}class eT{constructor(t,e){this.scene=t,this.time=e,this.init({color:je.wallColor,height:60,opacity:.6,speed:4,position:{x:300,y:0,z:-200}})}init(t){const e=new On(50,32,32,Math.PI/2,Math.PI*2,0,Math.PI/2),n=new Fe({uniforms:{u_time:this.time,u_color:{value:new Rt(t.color)},u_height:{value:t.height},u_opacity:{value:t.opacity},u_speed:{value:t.speed}},transparent:!0,side:Be,depthTest:!1,vertexShader:`
        uniform float u_time;
        uniform float u_height;
        uniform float u_speed;

        varying float v_opacity;

        void main() {
          vec3 v_position = position * mod(u_time / u_speed, 1.0);
          v_opacity = (u_height - position.y) / u_height;
          gl_Position = projectionMatrix * modelViewMatrix * vec4(v_position, 1.0);
        }
      `,fragmentShader:`
        uniform vec3 u_color;
        uniform float u_opacity;

        varying float v_opacity;

        void main() {
          gl_FragColor = vec4(u_color, v_opacity * u_opacity);
        }
      `}),s=new $t(e,n);s.position.copy(t.position),this.scene.add(s)}}class nT{constructor(t,e,n){this.scene=t,this.top=e,this.height=n,this.init({color:je.coneColor,height:60,speed:4,position:{x:0,y:50,z:0}})}init(t){const e=new Lc(15,30,4),n=new Fe({uniforms:{u_color:{value:new Rt(t.color)},u_height:this.height,u_top:this.top},transparent:!0,side:Be,depthTest:!1,vertexShader:`
        uniform float u_top;
        uniform float u_height;

        void main() {
          float f_angle = u_height / 10.0;
          float x = position.x * cos(f_angle) - position.z * sin(f_angle);
          float y = position.y + u_top;
          float z = position.z * cos(f_angle) + position.x * sin(f_angle);
          vec4 v_position = vec4(x, y, z, 1.0);
          gl_Position = projectionMatrix * modelViewMatrix * v_position;
        }
      `,fragmentShader:`
        uniform vec3 u_color;
        uniform float u_opacity;

        void main() {
          gl_FragColor = vec4(u_color, 0.6);
        }
      `}),s=new $t(e,n);s.position.copy(t.position),s.rotateZ(Math.PI),this.scene.add(s)}}class iT{constructor(t,e){this.scene=t,this.time=e,this.init({source:{x:300,y:0,z:-200},target:{x:-500,y:0,z:-240},range:200,height:300,color:je.flyColor,size:30})}init(t){const e=new I(t.source.x,t.source.y,t.source.z),n=new I(t.target.x,t.target.y,t.target.z),s=n.clone().lerp(e,.5);s.y+=t.height;const r=parseInt(e.distanceTo(n)),a=new Ep(e,s,n).getPoints(r),l=[],c=[];a.forEach((d,g)=>{l.push(d.x,d.y,d.z),c.push(g)});const h=new fe;h.setAttribute("position",new Xt(l,3)),h.setAttribute("a_position",new Xt(c,1));const u=new Fe({uniforms:{u_color:{value:new Rt(t.color)},u_range:{value:t.range},u_size:{value:t.size},u_total:{value:r},u_time:this.time},vertexShader:`
        attribute float a_position;
        uniform float u_range;
        uniform float u_size;
        uniform float u_total;
        uniform float u_time;
        varying float v_opacity;

        void main() {
          float size = u_size;
          float total = u_total * mod(u_time, 1.0);

          if (total > a_position && total < a_position + u_range) {
            float index = (a_position + u_range - total) / u_range;
            size *= index;
            v_opacity = 1.0;
          } else {
            v_opacity = 0.0;
          }

          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
          gl_PointSize = size / 10.0;
        }
      `,fragmentShader:`
        uniform vec3 u_color;
        varying float v_opacity;

        void main() {
          gl_FragColor = vec4(u_color, v_opacity);
        }
      `,transparent:!0}),f=new Ec(h,u);this.scene.add(f)}}class sT{constructor(t,e){this.scene=t,this.time=e,this.init({range:200,height:300,color:je.flyColor,size:30})}init(t){const s=new bp([new I(-320,0,160),new I(-150,0,-40),new I(-10,0,-35),new I(40,0,40),new I(30,0,150),new I(-100,0,310)]).getPoints(400),r=[],o=[];s.forEach((h,u)=>{r.push(h.x,h.y,h.z),o.push(u)});const a=new fe;a.setAttribute("position",new Xt(r,3)),a.setAttribute("a_position",new Xt(o,1));const l=new Fe({uniforms:{u_color:{value:new Rt(t.color)},u_range:{value:t.range},u_size:{value:t.size},u_total:{value:400},u_time:this.time},vertexShader:`
        attribute float a_position;
        uniform float u_range;
        uniform float u_size;
        uniform float u_total;
        uniform float u_time;
        varying float v_opacity;

        void main() {
          float size = u_size;
          float total = u_total * mod(u_time, 1.0);

          if (total > a_position && total < a_position + u_range) {
            float index = (a_position + u_range - total) / u_range;
            size *= index;
            v_opacity = 1.0;
          } else {
            v_opacity = 0.0;
          }

          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
          gl_PointSize = size / 10.0;
        }
      `,fragmentShader:`
        uniform vec3 u_color;
        varying float v_opacity;

        void main() {
          gl_FragColor = vec4(u_color, v_opacity);
        }
      `,transparent:!0}),c=new Ec(a,l);this.scene.add(c)}}class rT extends Br{constructor(t){super(t)}load(t,e,n,s){const r=this,o=new zp(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(a){const l=r.parse(JSON.parse(a));e&&e(l)},n,s)}parse(t){return new oT(t)}}class oT{constructor(t){this.isFont=!0,this.type="Font",this.data=t}generateShapes(t,e=100){const n=[],s=aT(t,e,this.data);for(let r=0,o=s.length;r<o;r++)n.push(...s[r].toShapes());return n}}function aT(i,t,e){const n=Array.from(i),s=t/e.resolution,r=(e.boundingBox.yMax-e.boundingBox.yMin+e.underlineThickness)*s,o=[];let a=0,l=0;for(let c=0;c<n.length;c++){const h=n[c];if(h===`
`)a=0,l-=r;else{const u=lT(h,s,a,l,e);a+=u.offsetX,o.push(u.path)}}return o}function lT(i,t,e,n,s){const r=s.glyphs[i]||s.glyphs["?"];if(!r){console.error('THREE.Font: character "'+i+'" does not exists in font family '+s.familyName+".");return}const o=new lS;let a,l,c,h,u,f,d,g;if(r.o){const p=r._cachedOutline||(r._cachedOutline=r.o.split(" "));for(let m=0,_=p.length;m<_;)switch(p[m++]){case"m":a=p[m++]*t+e,l=p[m++]*t+n,o.moveTo(a,l);break;case"l":a=p[m++]*t+e,l=p[m++]*t+n,o.lineTo(a,l);break;case"q":c=p[m++]*t+e,h=p[m++]*t+n,u=p[m++]*t+e,f=p[m++]*t+n,o.quadraticCurveTo(u,f,c,h);break;case"b":c=p[m++]*t+e,h=p[m++]*t+n,u=p[m++]*t+e,f=p[m++]*t+n,d=p[m++]*t+e,g=p[m++]*t+n,o.bezierCurveTo(u,f,d,g,c,h);break}}return{offsetX:r.ha*t,path:o}}class cT extends Rc{constructor(t,e={}){const n=e.font;if(n===void 0)super();else{const s=n.generateShapes(t,e.size);e.depth=e.height!==void 0?e.height:50,e.bevelThickness===void 0&&(e.bevelThickness=10),e.bevelSize===void 0&&(e.bevelSize=8),e.bevelEnabled===void 0&&(e.bevelEnabled=!1),super(s,e)}this.type="TextGeometry"}}class hT{constructor(t){this.scene=t,this.font=null,this.init()}init(){new rT().load("/STXinwei_Regular.json",e=>{this.font=e,this.createTextQueue()})}createTextQueue(){[{text:"最高楼",size:20,position:{x:-20,y:130,z:410},rotate:Math.PI/1.3,color:"#ffffff"},{text:"第二高楼",size:20,position:{x:180,y:110,z:-70},rotate:Math.PI/2,color:"#ffffff"}].forEach(t=>{this.createText(t)})}createText(t){const e=new cT(t.text,{font:this.font,size:t.size,height:2}),n=new Fe({uniforms:{u_color:{value:new Rt(t.color)}},vertexShader:`
        void main() {
          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
      `,fragmentShader:`
        uniform vec3 u_color;

        void main() {
          gl_FragColor = vec4(u_color, 1.0);
        }
      `}),s=new $t(e,n);s.position.copy(t.position),s.rotateY(t.rotate),this.scene.add(s)}}class uT{constructor(t,{position:e,direction:n}){this.scene=t,this.position=e,this.direction=n,this.smokes=[],this.points=[],this.mesh=null,this.init()}init(){this.geometry=new fe,this.material=new Mp({size:50,map:new Vr().load("/src/assets/smoke.png"),transparent:!0,depthTest:!1}),this.material.onBeforeCompile=t=>{const e=`
        attribute float a_opacity;
        attribute float a_size;
        attribute float a_scale;
        varying float v_opacity;

        void main() {
          v_opacity = a_opacity;
      `;t.vertexShader=t.vertexShader.replace("void main() {",e);const n=`
        gl_PointSize = a_size * a_scale;
      `;t.vertexShader=t.vertexShader.replace("gl_PointSize = size;",n);const s=`
        varying float v_opacity;

        void main() {
      `;t.fragmentShader=t.fragmentShader.replace("void main() {",s);const r=`
        gl_FragColor = vec4(outgoingLight, diffuseColor.a * v_opacity);
      `;t.fragmentShader=t.fragmentShader.replace("gl_FragColor = vec4(outgoingLight, diffuseColor.a);",r)},this.mesh=new Ec(this.geometry,this.material),this.scene.add(this.mesh)}createParticle(){this.smokes.push({opacity:1,scale:1,size:50,x:this.position.x,y:this.position.y,z:this.position.z,vx:Math.random()*this.direction.x,vy:Math.random()+1,vz:Math.random()*this.direction.y})}setAttribute(t,e,n,s){this.geometry.setAttribute("position",new Ve(new Float32Array(t),3)),this.geometry.setAttribute("a_opacity",new Ve(new Float32Array(e),1)),this.geometry.setAttribute("a_size",new Ve(new Float32Array(n),1)),this.geometry.setAttribute("a_scale",new Ve(new Float32Array(s),1))}update(){const t=[],e=[],n=[],s=[];this.smokes=this.smokes.filter(r=>r.opacity<0?!1:(r.opacity-=.01,r.scale+=.02,r.x+=r.vx,r.y+=r.vy,r.z+=r.vz,t.push(r.x,r.y,r.z),e.push(r.opacity),n.push(r.size),s.push(r.scale),!0)),this.setAttribute(t,e,n,s)}animation(){this.createParticle(),this.update()}}class fT{constructor(t,e,n){this.scene=t,this.x=e.x,this.y=e.y,this.z=e.z,this.vx=e.vx,this.vy=e.vy,this.vz=e.vz,this.sparks=n,this.life=100,this.mesh=null,this.init()}init(){const t=Math.floor(Math.random()*je.sparklesColor.length),e=new On(3,8,8,0,Math.PI*2,0,Math.PI*2),n=new vi({color:je.sparklesColor[t]});this.mesh=new $t(e,n),this.scene.add(this.mesh)}animation(){this.x+=this.vx,this.y+=this.vy,this.z+=this.vz,this.mesh.position.copy({x:this.x,y:this.y,z:this.z}),this.vy-=.05,this.vx*=.95,this.vy*=.95,this.vz*=.95,this.life--,this.life<10&&(this.scene.remove(this.mesh),this.sparks.splice(this.sparks.indexOf(this),1))}}class dT{constructor(t,e,n,s,r){this.scene=t,this.position=e,this.vy=n,this.fires=s,this.sparks=r,this.mesh=null,this.init()}init(){const t=new On(5,8,8,0,Math.PI*2,0,Math.PI*2),e=new vi({color:16777215});this.mesh=new $t(t,e),this.scene.add(this.mesh)}animation(){if(this.position.y+=this.vy,this.vy-=.1,this.mesh.position.copy(this.position),this.vy<1){this.scene.remove(this.mesh),this.fires.splice(this.fires.indexOf(this),1);const t=Math.random()*5+5;for(let e=0;e<60;e++){const n=Math.random()*t,s=Math.cos(e*Math.PI/30)*n,r=(Math.random()*2-1)*n,o=Math.sin(e*Math.PI/30)*n;this.sparks.push(new fT(this.scene,{...this.position,vx:s,vy:r,vz:o},this.sparks))}}}}class pT{constructor(t,e,n){this.tweenPosition=null,this.tweenRotation=null,this.camera=e,this.scene=t,this.controls=n,this.risingHeight={value:0},this.time={value:0},this.coneTop={value:0},this.coneSpeed=.8,this.effects={},this.smoke=null,this.fires=[],this.sparks=[],this.countUp=0,this.firesCount=10,this.loadCity()}loadCity(){YS("/src/model/beijing.fbx").then(t=>{t.traverse(e=>{e.isMesh&&new ZS(this.scene,e,this.risingHeight,this.time)}),this.initEffect()})}initEffect(){new KS(this.scene),new JS(this.scene,this.time),new QS(this.scene,this.time),new tT(this.scene,this.time),new eT(this.scene,this.time),new nT(this.scene,this.coneTop,this.risingHeight),new iT(this.scene,this.time),new sT(this.scene,this.time),new hT(this.scene),this.smoke=new uT(this.scene,{position:{x:-20,y:50,z:360},direction:{x:1.3,y:-.7}}),Qp(this.scene,this.camera,(t,e,n)=>{this.tweenPosition=new It(this.camera.position).to({x:t.point.x*e,y:t.point.y*e,z:t.point.z*e},n).start(),this.tweenRotation=new It(this.camera.rotation).to({x:this.camera.rotation.x,y:this.camera.rotation.y,z:this.camera.rotation.z},n).start()}),Jp(this.camera,this.controls)}start(t){for(const e in this.effects)Object.hasOwnProperty.call(this.effects,e)&&this.effects[e].pointInstance.animation();this.smoke&&this.smoke.animation(),this.countUp<60?this.countUp++:(this.fires.push(new dT(this.scene,{x:(Math.random()*2-1)*400,y:0,z:(Math.random()*2-1)*200},Math.random()*2+9,this.fires,this.sparks)),this.countUp=0);for(const e of this.fires)e.animation();for(const e of this.sparks)e.animation();this.tweenPosition&&this.tweenRotation&&(this.tweenPosition.update(),this.tweenRotation.update()),this.time.value+=t,this.risingHeight.value+=.4,this.risingHeight.value>160&&(this.risingHeight.value=0),this.coneTop.value+=this.coneSpeed,(this.coneTop.value>15||this.coneTop.value<0)&&(this.coneSpeed=-1*this.coneSpeed)}}const mT=()=>{const{scene:i,camera:t,controls:e,renderer:n}=Kp("city");t.position.set(800,500,-800),e.target.set(0,300,0);const s=new pT(i,t,e),r=new Np,o=()=>{s.start(r.getDelta()),e.update(),n.render(i,t),requestAnimationFrame(o)};o(),window.addEventListener("resize",()=>Zp(t,n))},Uc=(i,t)=>{const e=i.__vccOpts||i;for(const[n,s]of t)e[n]=s;return e},gT={data(){return{}},mounted(){mT()},unmounted(){window.removeEventListener("resize",()=>{})}},_T={id:"city"};function xT(i,t,e,n,s,r){return Di(),xs("canvas",_T," 浏览器不支持canvas，请切换浏览器重试 ")}const vT=Uc(gT,[["render",xT]]);class Qe{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||4473924,this.radius=e.radius||50,this.height=e.height||50,this.open=e.open||!1,this.group=e.group||null,this.init()}init(){const t=new Yi(this.radius,this.radius,this.height,20,2,this.open),e=new Fn({color:this.color}),n=new $t(t,e);n.castShadow=!0,n.rotateX(this.rotation.x),n.rotateY(this.rotation.y),n.rotateZ(this.rotation.z),n.position.copy(this.position),this.group?this.group.add(n):this.scene.add(n)}}class Gt{constructor(t,e,n){this.scene=t,this.position=n.position||{x:0,y:0,z:0},this.rotation=n.rotation||{x:0,y:0,z:0},this.color=n.color||6710886,this.side=n.side||pn,this.verticesArr=e,this.group=n.group||null,this.init()}init(){const t=new Float32Array(this.verticesArr),e=new fe;e.setAttribute("position",new Ve(t,3)),e.computeVertexNormals();const n=new Fn({color:this.color,side:this.side}),s=new $t(e,n);s.castShadow=!0,s.rotateX(this.rotation.x),s.rotateY(this.rotation.y),s.rotateZ(this.rotation.z),s.position.copy(this.position),this.group?this.group.add(s):this.scene.add(s)}}class er{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||2003199,this.radius=e.radius||100,this.side=e.side||pn,this.group=e.group||null,this.init()}init(){const t=new On(this.radius,20,20,Math.PI*2,Math.PI*2,Math.PI*2,Math.PI*2),e=new Fn({color:this.color}),n=new $t(t,e);n.castShadow=!0,n.rotateX(this.rotation.x),n.rotateY(this.rotation.y),n.rotateZ(this.rotation.z),n.position.copy(this.position),this.group?this.group.add(n):this.scene.add(n)}}class bf{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||255,this.group=e.group||null,this.init()}init(){const t=new On(110,20,20,0,Math.PI,0,Math.PI),e=new Fn({color:this.color}),n=new $t(t,e);n.castShadow=!0,n.rotateX(this.rotation.x),n.rotateY(this.rotation.y),n.rotateZ(this.rotation.z),n.position.copy(this.position),this.group?this.group.add(n):this.scene.add(n)}}class yT{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||255,this.group=e.group||null,this.init()}init(){const t=new kr(110,20,0,Math.PI*2),e=new vi({color:this.color}),n=new $t(t,e);n.castShadow=!0,n.rotateX(this.rotation.x),n.rotateY(this.rotation.y),n.rotateZ(this.rotation.z),n.position.copy(this.position),this.group?this.group.add(n):this.scene.add(n)}}const Zt=i=>[...i[0],...i[1],...i[2],...i[0],...i[2],...i[3],...i[0],...i[3],...i[7],...i[0],...i[7],...i[4],...i[1],...i[5],...i[6],...i[1],...i[6],...i[2],...i[0],...i[5],...i[1],...i[0],...i[4],...i[5],...i[2],...i[6],...i[7],...i[2],...i[7],...i[3],...i[4],...i[6],...i[5],...i[4],...i[7],...i[6]],Sf=[[10,50,30],[-10,50,30],[-10,0,30],[10,0,30],[10,100,-50],[-10,100,-50],[-10,10,-30],[10,10,-30]],Tf=[[10,190,-40],[-10,190,-40],[-10,20,0],[10,20,0],[10,200,-50],[-10,200,-50],[10,100,-50],[-10,100,-50]],Ef=[[150,100,120],[-100,100,100],[-100,-100,100],[150,-100,120],[150,100,-100],[-100,100,-100],[-100,-100,-100],[150,-100,-100]],Af=[[7,80,0],[-7,80,0],[-20,-10,0],[20,-10,0],[10,100,-20],[-10,100,-20],[-20,-10,-20],[20,-10,-20]],wT=[[10,50,100],[-10,50,100],[-20,-50,100],[20,-50,100],[20,40,80],[-20,40,80],[-50,-50,50],[50,-50,50]],MT=[[10,50,100],[-10,50,100],[-20,-50,100],[20,-50,100],[80,50,80],[-80,50,80],[-50,-50,80],[50,-50,80]],Cf=[[100,50,100],[0,50,100],[0,-350,100],[100,-350,100],[100,50,0],[0,50,0],[0,-350,0],[100,-350,0]],Pf=[[20,40,20],[0,40,20],[0,0,20],[20,0,20],[20,40,0],[0,40,0],[0,0,0],[20,0,0]],bT=[[180,0,50],[-180,0,50],[-180,-200,50],[180,-200,50],[180,0,-90],[-180,0,-90],[-180,-200,-90],[180,-200,-90]],gl=[[-10,-20,80],[-120,-20,80],[-120,-20,80],[-10,-20,80],[0,0,50],[-150,0,50],[-150,-70,50],[0,-70,50]],_l=[[120,-20,80],[10,-20,80],[10,-20,80],[120,-20,80],[150,0,50],[0,0,50],[0,-70,50],[150,-70,50]],ST=[[220,0,80],[-220,0,80],[-220,-150,80],[220,-150,80],[220,0,-100],[-220,0,-100],[-220,-150,-100],[220,-150,-100]],TT=[[30,0,80],[-30,0,80],[-20,-20,50],[20,-20,50],[30,0,-100],[-30,0,-100],[-20,-20,-70],[20,-20,-70]],Lf=[[150,0,150],[0,0,150],[0,-500,150],[150,-500,150],[150,0,0],[0,0,0],[0,-500,0],[150,-500,0]],Rf=[[200,0,200],[0,0,200],[0,-500,200],[200,-500,200],[200,0,0],[0,0,0],[0,-500,0],[200,-500,0]],If=[[0,0,0],[-200,0,0],[-200,-100,0],[0,-100,0],[0,0,-100],[-200,0,-100],[-200,-100,-100],[0,-100,-100]],Df=[[0,-50,100],[-200,-50,100],[-200,-100,100],[0,-100,100],[0,0,-100],[-200,0,-100],[-200,-100,-100],[0,-100,-100]],ET=[[0,0,0],[-60,0,0],[-60,-200,0],[0,-200,0],[0,0,-60],[-60,0,-60],[-60,-200,-60],[0,-200,-60]],AT=[[0,0,0],[-20,0,0],[-20,-100,0],[0,-100,0],[0,0,-20],[-20,0,-20],[-20,-100,-20],[0,-100,-20]];class Ff{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||4473924,this.side=e.side||pn,this.group=e.group||null,this.init()}init(){const t=new Ps;t.moveTo(0,0),t.lineTo(0,40),t.lineTo(100,40),t.lineTo(60,0),t.lineTo(0,0),t.moveTo(20,23),t.lineTo(45,20),t.lineTo(55,25),t.lineTo(55,30),t.lineTo(20,30),t.lineTo(20,23);const e=new Dc(t),n=new vi({color:this.color,side:this.side}),s=new $t(e,n);s.castShadow=!0,s.rotateX(this.rotation.x),s.rotateY(this.rotation.y),s.rotateZ(this.rotation.z),s.position.copy(this.position),this.group?this.group.add(s):this.scene.add(s)}}class zf{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||255,this.group=e.group||null,this.init()}init(){const t=new On(40,10,10,0,Math.PI,0,Math.PI),e=new vi({color:this.color}),n=new $t(t,e);n.castShadow=!0,n.rotateX(this.rotation.x),n.rotateY(this.rotation.y),n.rotateZ(this.rotation.z),n.position.copy(this.position),this.group?this.group.add(n):this.scene.add(n)}}const Of=i=>[...i[0],...i[2],...i[1],...i[0],...i[3],...i[2],...i[0],...i[4],...i[3],...i[4],...i[5],...i[3],...i[4],...i[6],...i[5],...i[7],...i[8],...i[9],...i[7],...i[9],...i[10],...i[7],...i[10],...i[11],...i[11],...i[10],...i[12],...i[11],...i[12],...i[13],...i[1],...i[9],...i[8],...i[1],...i[2],...i[9],...i[2],...i[10],...i[9],...i[2],...i[3],...i[10],...i[3],...i[12],...i[10],...i[3],...i[5],...i[12]],Nf=[[0,0,100],[0,150,100],[50,150,100],[120,120,100],[50,-30,100],[300,-100,100],[200,-120,100],[0,0,-10],[0,150,-10],[50,150,-10],[120,120,-10],[50,-30,-10],[300,-100,-10],[200,-120,-10]],Uf=i=>[...i[0],...i[4],...i[1],...i[1],...i[4],...i[2],...i[4],...i[3],...i[2],...i[0],...i[5],...i[4],...i[0],...i[6],...i[5],...i[0],...i[7],...i[6],...i[8],...i[9],...i[12],...i[9],...i[10],...i[12],...i[12],...i[10],...i[11],...i[8],...i[12],...i[13],...i[8],...i[13],...i[14],...i[8],...i[14],...i[15],...i[0],...i[9],...i[8],...i[0],...i[1],...i[9],...i[1],...i[10],...i[9],...i[1],...i[2],...i[10],...i[2],...i[11],...i[10],...i[2],...i[3],...i[11],...i[3],...i[12],...i[11],...i[3],...i[4],...i[12],...i[4],...i[13],...i[12],...i[4],...i[5],...i[13],...i[5],...i[14],...i[13],...i[5],...i[6],...i[14],...i[6],...i[15],...i[14],...i[6],...i[7],...i[15],...i[7],...i[8],...i[15],...i[7],...i[0],...i[8]],kf=[[0,0,20],[0,50,20],[0,120,20],[20,120,20],[20,50,20],[50,50,20],[50,25,20],[40,0,20],[0,0,0],[0,50,0],[0,120,0],[20,120,0],[20,50,0],[50,50,0],[50,25,0],[40,0,0]];class CT{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||4473924,this.radius=e.radius||20,this.height=e.height||50,this.side=e.side||He,this.group=e.group||null,this.init()}init(){const t=new Yi(this.radius,this.radius,this.height,10,2,!0),e=new Fn({color:this.color,side:this.side}),n=new $t(t,e),s=new kr(this.radius,10);s.rotateX(-Math.PI/2),s.translate(0,this.height/2,0);const r=new $t(s,new Fn({color:255,side:this.side})),o=new oe;o.castShadow=!0,o.add(n),o.add(r),o.rotateX(this.rotation.x),o.rotateY(this.rotation.y),o.rotateZ(this.rotation.z),o.position.copy(this.position),this.group?this.group.add(o):this.scene.add(o)}}class PT{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||4473924,this.radius=e.radius||30,this.group=e.group||null,this.init()}init(){const t=new Ic(this.radius,this.radius-10,20),e=new Fn({color:this.color}),n=new $t(t,e);n.castShadow=!0,n.rotateX(this.rotation.x),n.rotateY(this.rotation.y),n.rotateZ(this.rotation.z),n.position.copy(this.position),this.group?this.group.add(n):this.scene.add(n)}}class LT{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||10066329,this.wrireframe=e.wrireframe||!0,this.init()}init(){const t=new Ur(1e5,1e5,10,10),e=new Fc({wireframe:this.wrireframe}),n=new Fn({color:this.color}),s=new $t(t,e);s.receiveShadow=!0;const r=new $t(t,n);r.receiveShadow=!0;const o=new oe;o.add(s),o.add(r),o.rotateX(this.rotation.x),o.rotateY(this.rotation.y),o.rotateZ(this.rotation.z),o.position.copy(this.position),o.receiveShadow=!0,this.scene.add(o)}}class RT{constructor(t){this.scene=t,this.init()}init(){const t=new On(1e5,20,20,Math.PI*2,Math.PI*2,Math.PI*2,Math.PI*2);new Vr().load("/src/assets/sky.jpg",n=>{const s=new Fc({map:n}),r=new $t(t,s);this.scene.add(r)})}}class ds{constructor(t,e){this.scene=t,this.position=e.position||{x:0,y:0,z:0},this.rotation=e.rotation||{x:0,y:0,z:0},this.color=e.color||4473924,this.radius=e.radius||80,this.height=e.height||80,this.group=e.group||null,this.init()}init(){new Vr().load("/src/assets/tyre.jpg",e=>{const n=new kr(this.radius,20,0,Math.PI*2),s=new Fn({map:e}),r=new $t(n,s);r.rotateX(-Math.PI/2),r.translateZ(41);const o=new Yi(this.radius,this.radius,this.height,20,2,!1),a=new Fn({color:this.color}),l=new $t(o,a),c=new de;c.add(l),c.add(r),c.castShadow=!0,c.rotateX(this.rotation.x),c.rotateY(this.rotation.y),c.rotateZ(this.rotation.z),c.position.copy(this.position),this.group?this.group.add(c):this.scene.add(c)})}}let IT=class{constructor(t,e,n,s){this.tweenPosition=null,this.tweenRotation=null,this.tweenTransform={},this.camera=e,this.scene=t,this.controls=n,this.renderer=s,this.time={value:0},this.audio=document.getElementById("audio"),this.status="robot",this.bulk=new de,this.head=new de,this.body=new de,this.gun=new de,this.rightHand=new de,this.rightArm=new de,this.rightForearm=new de,this.rightPalm=new de,this.leftHand=new de,this.leftArm=new de,this.leftForearm=new de,this.leftPalm=new de,this.rightLeg=new de,this.leftLeg=new de,this.countDown=60,this.direction=-1,this.initEffect()}initEffect(){new Gt(this.scene,Zt(Ef),{position:{x:-150,y:40,z:0},group:this.body}),new Gt(this.scene,Zt(Ef),{position:{x:150,y:40,z:0},rotation:{x:0,y:0,z:Math.PI},group:this.body}),new Gt(this.scene,Zt(bT),{position:{x:0,y:-60,z:0},group:this.body}),new Gt(this.scene,Zt(gl),{position:{x:-0,y:-60,z:0},color:4473924,group:this.body}),new Gt(this.scene,Zt(gl),{position:{x:-0,y:-130,z:0},color:4473924,group:this.body}),new Gt(this.scene,Zt(gl),{position:{x:-0,y:-200,z:0},color:4473924,group:this.body}),new Gt(this.scene,Zt(_l),{position:{x:-0,y:-60,z:0},color:4473924,group:this.body}),new Gt(this.scene,Zt(_l),{position:{x:-0,y:-130,z:0},color:4473924,group:this.body}),new Gt(this.scene,Zt(_l),{position:{x:-0,y:-200,z:0},color:4473924,group:this.body}),new Gt(this.scene,Zt(ST),{position:{x:0,y:-260,z:0},group:this.body}),new Gt(this.scene,Zt(TT),{position:{x:0,y:-410,z:0},color:4473924,group:this.body}),this.bulk.add(this.body),new Qe(this.scene,{position:{x:0,y:145,z:0},group:this.head}),new er(this.scene,{position:{x:0,y:250,z:0},group:this.head}),new Gt(this.scene,Zt(MT),{position:{x:0,y:220,z:10},rotation:{x:.3,y:0,z:0},group:this.head}),new bf(this.scene,{position:{x:0,y:270,z:0},rotation:{x:Math.PI*1.5,y:0,z:0},group:this.head}),new yT(this.scene,{position:{x:0,y:270,z:0},rotation:{x:Math.PI*.5,y:0,z:0},group:this.head}),new bf(this.scene,{position:{x:0,y:260,z:0},rotation:{x:3,y:0,z:0},group:this.head}),new Gt(this.scene,Zt(wT),{position:{x:0,y:350,z:0},color:255,group:this.head}),new Gt(this.scene,Zt(Af),{position:{x:0,y:290,z:110},group:this.head}),new Gt(this.scene,Zt(Af),{position:{x:0,y:200,z:80},rotation:{x:.5,y:0,z:0},group:this.head}),new Gt(this.scene,Zt(Sf),{position:{x:80,y:180,z:70},rotation:{x:0,y:0,z:-.2},color:255,group:this.head}),new Gt(this.scene,Zt(Tf),{position:{x:80,y:180,z:70},rotation:{x:0,y:0,z:-.2},color:255,group:this.head}),new Gt(this.scene,Zt(Sf),{position:{x:-80,y:180,z:70},rotation:{x:0,y:0,z:.2},color:255,group:this.head}),new Gt(this.scene,Zt(Tf),{position:{x:-80,y:180,z:70},rotation:{x:0,y:0,z:.2},color:255,group:this.head}),new Ff(this.scene,{position:{x:0,y:230,z:110},rotation:{x:0,y:.4,z:0},side:pn,group:this.head}),new Ff(this.scene,{position:{x:0,y:230,z:110},rotation:{x:0,y:Math.PI-.4,z:0},side:He,group:this.head}),new zf(this.scene,{position:{x:80,y:250,z:10},rotation:{x:-.2,y:Math.PI/2,z:0},group:this.head}),new zf(this.scene,{position:{x:-80,y:250,z:10},rotation:{x:Math.PI-.2,y:-Math.PI/2,z:0},group:this.head}),this.bulk.add(this.head),this.leftHand.position.set(270,90,0),new Qe(this.scene,{position:{x:0,y:0,z:0},rotation:{x:0,y:0,z:Math.PI/2},group:this.leftHand}),new Qe(this.scene,{position:{x:160,y:20,z:0},rotation:{x:-.3,y:0,z:.2},radius:30,height:150,color:6710886,group:this.leftArm}),new Qe(this.scene,{position:{x:140,y:120,z:-30},rotation:{x:-.3,y:0,z:.2},radius:20,height:200,color:6710886,group:this.leftArm}),new Gt(this.scene,Zt(Cf),{position:{x:0,y:10,z:-50},rotation:{x:-.3,y:0,z:.2},group:this.leftArm}),new Gt(this.scene,Of(Nf),{position:{x:-40,y:50,z:-60},rotation:{x:-.3,y:0,z:-.5},color:255,side:Be,group:this.leftArm}),this.leftForearm.position.set(120,-290,130),new Qe(this.scene,{position:{x:0,y:0,z:170},rotation:{x:-Math.PI/2,y:0,z:0},color:255,radius:50,height:300,group:this.leftForearm}),new er(this.scene,{position:{x:0,y:0,z:0},radius:50,color:4473924,group:this.leftForearm}),new Qe(this.scene,{position:{x:0,y:0,z:330},rotation:{x:-Math.PI/2,y:0,z:0},radius:30,height:50,group:this.leftPalm}),new Gt(this.scene,Uf(kf),{position:{x:20,y:30,z:350},rotation:{x:Math.PI/2,y:-Math.PI/2,z:0},color:4095,group:this.leftPalm}),new Gt(this.scene,Zt(Pf),{position:{x:0,y:30,z:350},rotation:{x:Math.PI/2,y:-Math.PI/2,z:0},color:4095,group:this.leftPalm}),this.leftForearm.add(this.leftPalm),this.leftArm.add(this.leftForearm),this.leftHand.add(this.leftArm),this.bulk.add(this.leftHand),this.rightHand.position.set(-270,90,0),new Qe(this.scene,{position:{x:0,y:0,z:0},rotation:{x:0,y:0,z:Math.PI/2},group:this.rightHand}),new Qe(this.scene,{position:{x:-170,y:10,z:0},rotation:{x:-.3,y:0,z:-.2},radius:30,height:150,color:6710886,group:this.rightArm}),new Qe(this.scene,{position:{x:-150,y:110,z:-30},rotation:{x:-.3,y:0,z:-.2},radius:20,height:200,color:6710886,group:this.rightArm}),new Gt(this.scene,Zt(Cf),{position:{x:-100,y:10,z:-50},rotation:{x:-.3,y:0,z:-.2},group:this.rightArm}),new Gt(this.scene,Of(Nf),{position:{x:40,y:70,z:30},rotation:{x:-.3,y:-Math.PI,z:-.5},color:255,side:Be,group:this.rightArm}),this.rightForearm.position.set(-120,-310,100),new Qe(this.scene,{position:{x:0,y:-150,z:80},rotation:{x:-.5,y:0,z:0},color:255,radius:50,height:300,group:this.rightForearm}),new er(this.scene,{position:{x:0,y:0,z:0},radius:50,color:4473924,group:this.rightForearm}),new Qe(this.scene,{position:{x:0,y:-300,z:160},rotation:{x:-.5,y:0,z:0},radius:30,height:50,group:this.rightPalm}),new Gt(this.scene,Uf(kf),{position:{x:0,y:-300,z:190},rotation:{x:-Math.PI-.5,y:-Math.PI/2,z:0},color:4095,group:this.rightPalm}),new Gt(this.scene,Zt(Pf),{position:{x:20,y:-300,z:190},rotation:{x:-Math.PI-.5,y:-Math.PI/2,z:0},color:255,group:this.rightPalm}),this.rightForearm.add(this.rightPalm),this.rightArm.add(this.rightForearm),this.rightHand.add(this.rightArm),this.gun.position.set(-150,-800,400),new Gt(this.scene,Zt(ET),{position:{x:0,y:0,z:0},rotation:{x:-Math.PI-.5,y:-Math.PI/2,z:0},color:1052688,group:this.gun}),new Gt(this.scene,Zt(AT),{position:{x:20,y:150,z:-40},rotation:{x:-Math.PI-.5,y:-Math.PI/2,z:Math.PI/2},color:1052688,group:this.gun}),new Qe(this.scene,{position:{x:30,y:0,z:40},rotation:{x:-.5,y:0,z:0},radius:20,height:30,color:4473924,group:this.gun}),new Qe(this.scene,{position:{x:30,y:-90,z:90},rotation:{x:-.5,y:0,z:0},radius:30,height:200,open:!0,color:1052688,group:this.gun}),new PT(this.scene,{position:{x:30,y:-178,z:138},rotation:{x:-Math.PI/2-.5,y:0,z:0},color:1052688,group:this.gun}),new CT(this.scene,{position:{x:30,y:-155,z:125},rotation:{x:-.5,y:0,z:0},color:1052688,group:this.gun}),this.rightHand.add(this.gun),this.bulk.add(this.rightHand),this.rightLeg.position.set(0,-410,0),new Gt(this.scene,Zt(Lf),{position:{x:40,y:0,z:-80},rotation:{x:0,y:0,z:.2},group:this.rightLeg}),new ds(this.scene,{position:{x:200,y:-90,z:-60},rotation:{x:0,y:0,z:.2-Math.PI/2},group:this.rightLeg}),new Gt(this.scene,Zt(Rf),{position:{x:120,y:-490,z:-100},rotation:{x:0,y:0,z:.2},color:255,group:this.rightLeg}),new ds(this.scene,{position:{x:330,y:-540,z:-60},rotation:{x:0,y:0,z:.2-Math.PI/2},group:this.rightLeg}),new ds(this.scene,{position:{x:390,y:-840,z:-60},rotation:{x:0,y:0,z:.2-Math.PI/2},group:this.rightLeg}),new Gt(this.scene,Zt(If),{position:{x:430,y:-970,z:0},color:255,group:this.rightLeg}),new er(this.scene,{position:{x:320,y:-940,z:0},radius:80,color:4473924,group:this.rightLeg}),new Gt(this.scene,Zt(Df),{position:{x:430,y:-970,z:120},color:255,group:this.rightLeg}),this.bulk.add(this.rightLeg),this.leftLeg.position.set(0,-410,0),new Gt(this.scene,Zt(Lf),{position:{x:-190,y:30,z:-80},rotation:{x:0,y:0,z:-.2},group:this.leftLeg}),new ds(this.scene,{position:{x:-200,y:-90,z:-60},rotation:{x:0,y:0,z:Math.PI/2-.2},group:this.leftLeg}),new Gt(this.scene,Zt(Rf),{position:{x:-320,y:-450,z:-100},rotation:{x:0,y:0,z:-.2},color:255,group:this.leftLeg}),new ds(this.scene,{position:{x:-330,y:-540,z:-60},rotation:{x:0,y:0,z:Math.PI/2-.2},group:this.leftLeg}),new ds(this.scene,{position:{x:-390,y:-840,z:-60},rotation:{x:0,y:0,z:Math.PI/2-.2},group:this.leftLeg}),new Gt(this.scene,Zt(If),{position:{x:-230,y:-970,z:0},color:255,group:this.leftLeg}),new er(this.scene,{position:{x:-320,y:-940,z:0},radius:80,color:4473924,group:this.leftLeg}),new Gt(this.scene,Zt(Df),{position:{x:-230,y:-970,z:120},color:255,group:this.leftLeg}),this.bulk.add(this.leftLeg),this.scene.add(this.bulk),new LT(this.scene,{position:{x:0,y:-1480,z:0},rotation:{x:-Math.PI/2,y:0,z:0}}),new RT(this.scene),Qp(this.scene,this.camera,(t,e,n)=>{this.tweenPosition=new It(this.camera.position).to({x:t.point.x*e,y:t.point.y*e,z:t.point.z*e},n).start(),this.tweenRotation=new It(this.camera.rotation).to({x:this.camera.rotation.x,y:this.camera.rotation.y,z:this.camera.rotation.z},n).start()}),Jp(this.camera,this.controls),this.initTween(),this.initTweenReverse()}initTween(){this.tweenTransform.leftLegHorizontalRotate=new It(this.leftLeg.rotation).to({x:this.leftLeg.rotation.x,y:this.leftLeg.rotation.y+Math.PI,z:this.leftLeg.rotation.z},1e3),this.tweenTransform.leftLegVerticalRotate=new It(this.leftLeg.rotation).to({x:this.leftLeg.rotation.x,y:this.leftLeg.rotation.y+Math.PI,z:this.leftLeg.rotation.z+.2},1e3),this.tweenTransform.leftLegAroundRotate=new It(this.leftLeg.rotation).to({x:this.leftLeg.rotation.x+Math.PI/2,y:this.leftLeg.rotation.y+Math.PI,z:this.leftLeg.rotation.z+.2},1e3),this.tweenTransform.leftLegTranslate=new It(this.leftLeg.position).to({x:this.leftLeg.position.x,y:this.leftLeg.position.y+80,z:this.leftLeg.position.z-80},1e3),this.tweenTransform.leftLegHorizontalRotate.chain(this.tweenTransform.leftLegVerticalRotate),this.tweenTransform.leftLegVerticalRotate.chain(this.tweenTransform.leftLegAroundRotate),this.tweenTransform.leftLegAroundRotate.chain(this.tweenTransform.leftLegTranslate),this.tweenTransform.rightLegHorizontalRotate=new It(this.rightLeg.rotation).to({x:this.rightLeg.rotation.x,y:this.rightLeg.rotation.y+Math.PI,z:this.rightLeg.rotation.z},1e3),this.tweenTransform.rightLegVerticalRotate=new It(this.rightLeg.rotation).to({x:this.rightLeg.rotation.x,y:this.rightLeg.rotation.y+Math.PI,z:this.rightLeg.rotation.z-.2},1e3),this.tweenTransform.rightLegAroundRotate=new It(this.rightLeg.rotation).to({x:this.rightLeg.rotation.x+Math.PI/2,y:this.rightLeg.rotation.y+Math.PI,z:this.rightLeg.rotation.z-.2},1e3),this.tweenTransform.rightLegTranslate=new It(this.rightLeg.position).to({x:this.rightLeg.position.x,y:this.rightLeg.position.y+80,z:this.rightLeg.position.z-80},1e3),this.tweenTransform.rightLegHorizontalRotate.chain(this.tweenTransform.rightLegVerticalRotate),this.tweenTransform.rightLegVerticalRotate.chain(this.tweenTransform.rightLegAroundRotate),this.tweenTransform.rightLegAroundRotate.chain(this.tweenTransform.rightLegTranslate),this.tweenTransform.leftHandRotate=new It(this.leftHand.rotation).to({x:this.leftHand.rotation.x,y:this.leftHand.rotation.y+Math.PI/2,z:this.leftHand.rotation.z},1e3),this.tweenTransform.leftHandTranslate=new It(this.leftHand.position).to({x:this.leftHand.position.x-70,y:this.leftHand.position.y,z:this.leftHand.position.z-100},1e3),this.tweenTransform.leftArmRotate=new It(this.leftArm.rotation).to({x:this.leftArm.rotation.x+.3,y:this.leftArm.rotation.y,z:this.leftArm.rotation.z-.2},1e3),this.tweenTransform.leftForearmRotate=new It(this.leftForearm.rotation).to({x:-.3,y:-Math.PI/2-.1,z:.2},1e3),this.tweenTransform.leftPalmTranslate=new It(this.leftPalm.position).to({x:this.leftPalm.position.x,y:this.leftPalm.position.y,z:this.leftPalm.position.z-170},1e3),this.tweenTransform.leftHandRotate.chain(this.tweenTransform.leftHandTranslate),this.tweenTransform.leftHandTranslate.chain(this.tweenTransform.leftArmRotate),this.tweenTransform.leftArmRotate.chain(this.tweenTransform.leftForearmRotate),this.tweenTransform.leftForearmRotate.chain(this.tweenTransform.leftPalmTranslate),this.tweenTransform.rightForearmRotateY=new It(this.rightForearm.rotation).to({x:-Math.PI/2+.5,y:0,z:0},1e3),this.tweenTransform.rightHandRotate=new It(this.rightHand.rotation).to({x:this.rightHand.rotation.x,y:this.rightHand.rotation.y-Math.PI/2,z:this.rightHand.rotation.z},1e3),this.tweenTransform.rightHandTranslate=new It(this.rightHand.position).to({x:this.rightHand.position.x+70,y:this.rightHand.position.y,z:this.rightHand.position.z-100},1e3),this.tweenTransform.rightArmRotate=new It(this.rightArm.rotation).to({x:this.rightArm.rotation.x+.3,y:this.rightArm.rotation.y,z:this.rightArm.rotation.z+.2},1e3),this.tweenTransform.rightForearmRotate=new It(this.rightForearm.rotation).to({x:Math.PI/2,y:.5,z:Math.PI/2},1e3),this.tweenTransform.rightPalmTranslate=new It(this.rightPalm.position).to({x:this.rightPalm.position.x,y:this.rightPalm.position.y+170,z:this.rightPalm.position.z-80},1e3),this.tweenTransform.rightHandRotate.chain(this.tweenTransform.rightHandTranslate),this.tweenTransform.rightHandTranslate.chain(this.tweenTransform.rightArmRotate),this.tweenTransform.rightArmRotate.chain(this.tweenTransform.rightForearmRotate),this.tweenTransform.rightForearmRotate.chain(this.tweenTransform.rightPalmTranslate),this.tweenTransform.gunRotate=new It(this.gun.rotation).to({x:-Math.PI/2+.5,y:0,z:0},1e3),this.tweenTransform.gunTranslate=new It(this.gun.position).to({x:-200,y:this.gun.position.y+480,z:this.gun.position.z-600},1e3),this.tweenTransform.gunRotate.chain(this.tweenTransform.gunTranslate),this.tweenTransform.headTranslate=new It(this.head.position).to({x:this.head.position.x,y:this.head.position.y-200,z:this.head.position.z-100},1e3),this.tweenTransform.bulkTranslate=new It(this.bulk.position).to({y:-1e3},1e3),this.tweenTransform.controlsTarget=new It(this.controls.target).to({y:-1e3}),this.tweenTransform.cameraPosition=new It(this.camera.position).to({x:-1e3,z:1e3}),this.tweenTransform.headTranslate.onComplete(()=>{this.tweenTransform.leftLegHorizontalRotate.start(),this.tweenTransform.rightLegHorizontalRotate.start(),this.tweenTransform.rightForearmRotateY.start(),this.tweenTransform.gunRotate.start()}),this.tweenTransform.leftLegTranslate.onComplete(()=>{this.tweenTransform.bulkTranslate.start(),this.tweenTransform.controlsTarget.start(),this.tweenTransform.cameraPosition.start()}),this.tweenTransform.rightForearmRotateY.onComplete(()=>{this.tweenTransform.leftHandRotate.start(),this.tweenTransform.rightHandRotate.start()}),this.tweenTransform.bulkTranslate.onComplete(()=>{this.status="auto",this.audio.pause(),this.audio.currentTime=0})}initTweenReverse(){this.tweenTransform.leftLegHorizontalRotateReverse=new It(this.leftLeg.rotation).to({x:this.leftLeg.rotation.x,y:this.leftLeg.rotation.y,z:this.leftLeg.rotation.z},1e3),this.tweenTransform.leftLegVerticalRotateReverse=new It(this.leftLeg.rotation).to({x:this.leftLeg.rotation.x,y:this.leftLeg.rotation.y,z:this.leftLeg.rotation.z},1e3),this.tweenTransform.leftLegAroundRotateReverse=new It(this.leftLeg.rotation).to({x:this.leftLeg.rotation.x,y:this.leftLeg.rotation.y,z:this.leftLeg.rotation.z},1e3),this.tweenTransform.leftLegTranslateReverse=new It(this.leftLeg.position).to({x:this.leftLeg.position.x,y:this.leftLeg.position.y,z:this.leftLeg.position.z},1e3),this.tweenTransform.leftLegHorizontalRotateReverse.chain(this.tweenTransform.leftLegVerticalRotateReverse),this.tweenTransform.leftLegVerticalRotateReverse.chain(this.tweenTransform.leftLegAroundRotateReverse),this.tweenTransform.leftLegAroundRotateReverse.chain(this.tweenTransform.leftLegTranslateReverse),this.tweenTransform.rightLegHorizontalRotateReverse=new It(this.rightLeg.rotation).to({x:this.rightLeg.rotation.x,y:this.rightLeg.rotation.y,z:this.rightLeg.rotation.z},1e3),this.tweenTransform.rightLegVerticalRotateReverse=new It(this.rightLeg.rotation).to({x:this.rightLeg.rotation.x,y:this.rightLeg.rotation.y,z:this.rightLeg.rotation.z},1e3),this.tweenTransform.rightLegAroundRotateReverse=new It(this.rightLeg.rotation).to({x:this.rightLeg.rotation.x,y:this.rightLeg.rotation.y,z:this.rightLeg.rotation.z},1e3),this.tweenTransform.rightLegTranslateReverse=new It(this.rightLeg.position).to({x:this.rightLeg.position.x,y:this.rightLeg.position.y,z:this.rightLeg.position.z},1e3),this.tweenTransform.rightLegHorizontalRotateReverse.chain(this.tweenTransform.rightLegVerticalRotateReverse),this.tweenTransform.rightLegVerticalRotateReverse.chain(this.tweenTransform.rightLegAroundRotateReverse),this.tweenTransform.rightLegAroundRotateReverse.chain(this.tweenTransform.rightLegTranslateReverse),this.tweenTransform.leftHandRotateReverse=new It(this.leftHand.rotation).to({x:this.leftHand.rotation.x,y:this.leftHand.rotation.y,z:this.leftHand.rotation.z},1e3),this.tweenTransform.leftHandTranslateReverse=new It(this.leftHand.position).to({x:this.leftHand.position.x,y:this.leftHand.position.y,z:this.leftHand.position.z},1e3),this.tweenTransform.leftArmRotateReverse=new It(this.leftArm.rotation).to({x:this.leftArm.rotation.x,y:this.leftArm.rotation.y,z:this.leftArm.rotation.z},1e3),this.tweenTransform.leftForearmRotateReverse=new It(this.leftForearm.rotation).to({x:0,y:0,z:0},1e3),this.tweenTransform.leftPalmTranslateReverse=new It(this.leftPalm.position).to({x:this.leftPalm.position.x,y:this.leftPalm.position.y,z:this.leftPalm.position.z},1e3),this.tweenTransform.leftHandRotateReverse.chain(this.tweenTransform.leftHandTranslateReverse),this.tweenTransform.leftHandTranslateReverse.chain(this.tweenTransform.leftArmRotateReverse),this.tweenTransform.leftArmRotateReverse.chain(this.tweenTransform.leftForearmRotateReverse),this.tweenTransform.leftForearmRotateReverse.chain(this.tweenTransform.leftPalmTranslateReverse),this.tweenTransform.rightForearmRotateYReverse=new It(this.rightForearm.rotation).to({x:0,y:0,z:0},1e3),this.tweenTransform.rightHandRotateReverse=new It(this.rightHand.rotation).to({x:this.rightHand.rotation.x,y:this.rightHand.rotation.y,z:this.rightHand.rotation.z},1e3),this.tweenTransform.rightHandTranslateReverse=new It(this.rightHand.position).to({x:this.rightHand.position.x,y:this.rightHand.position.y,z:this.rightHand.position.z},1e3),this.tweenTransform.rightArmRotateReverse=new It(this.rightArm.rotation).to({x:this.rightArm.rotation.x,y:this.rightArm.rotation.y,z:this.rightArm.rotation.z},1e3),this.tweenTransform.rightForearmRotateReverse=new It(this.rightForearm.rotation).to({x:0,y:0,z:0},1e3),this.tweenTransform.rightPalmTranslateReverse=new It(this.rightPalm.position).to({x:this.rightPalm.position.x,y:this.rightPalm.position.y,z:this.rightPalm.position.z},1e3),this.tweenTransform.rightHandRotateReverse.chain(this.tweenTransform.rightHandTranslateReverse),this.tweenTransform.rightHandTranslateReverse.chain(this.tweenTransform.rightArmRotateReverse),this.tweenTransform.rightArmRotateReverse.chain(this.tweenTransform.rightForearmRotateReverse),this.tweenTransform.rightForearmRotateReverse.chain(this.tweenTransform.rightPalmTranslateReverse),this.tweenTransform.gunRotateReverse=new It(this.gun.rotation).to({x:0,y:0,z:0},1e3),this.tweenTransform.gunTranslateReverse=new It(this.gun.position).to({x:this.gun.position.x,y:this.gun.position.y,z:this.gun.position.z},1e3),this.tweenTransform.gunRotateReverse.chain(this.tweenTransform.gunTranslateReverse),this.tweenTransform.headTranslateReverse=new It(this.head.position).to({x:this.head.position.x,y:this.head.position.y,z:this.head.position.z},1e3),this.tweenTransform.bulkTranslateReverse=new It(this.bulk.position).to({y:0},1e3),this.tweenTransform.controlsTargetReverse=new It(this.controls.target).to({y:0}),this.tweenTransform.cameraPositionReverse=new It(this.camera.position).to({x:0,z:6e3}),this.tweenTransform.headTranslateReverse.onComplete(()=>{this.tweenTransform.bulkTranslateReverse.start(),this.tweenTransform.leftLegHorizontalRotateReverse.start(),this.tweenTransform.rightLegHorizontalRotateReverse.start(),this.tweenTransform.rightForearmRotateYReverse.start(),this.tweenTransform.gunRotateReverse.start()}),this.tweenTransform.leftLegTranslateReverse.onComplete(()=>{this.tweenTransform.controlsTargetReverse.start(),this.tweenTransform.cameraPositionReverse.start()}),this.tweenTransform.rightForearmRotateYReverse.onComplete(()=>{this.tweenTransform.leftHandRotateReverse.start(),this.tweenTransform.rightHandRotateReverse.start()}),this.tweenTransform.rightPalmTranslateReverse.onComplete(()=>{this.status="robot",this.audio.pause()})}start(t){this.tweenPosition&&this.tweenRotation&&(this.tweenPosition.update(),this.tweenRotation.update()),uS(),this.time.value+=t}transform(){if(this.status==="robot")this.tweenTransform.headTranslate.start(),this.audio.play(),this.status="translating";else if(this.status==="auto")this.tweenTransform.headTranslateReverse.start(),this.audio.play(),this.status="translating";else return}};const DT=i=>{const{scene:t,camera:e,controls:n,renderer:s}=Kp("tf");e.position.set(0,-1400,6e3),n.target.set(0,0,0),i.OptimusPrime=new IT(t,e,n,s);const r=new Np,o=()=>{i.OptimusPrime.start(r.getDelta()),n.update(),s.render(t,e),requestAnimationFrame(o)};o(),window.addEventListener("resize",()=>Zp(e,s))};const FT={data(){return{transformer:{OptimusPrime:null}}},mounted(){DT(this.transformer)},unmounted(){window.removeEventListener("resize",()=>{})},methods:{transform(i){i.preventDefault(),i.stopPropagation(),this.transformer.OptimusPrime.transform()}}},em=i=>(ug("data-v-4d5ff822"),i=i(),fg(),i),zT={class:"wrap"},OT=em(()=>Hi("canvas",{id:"tf"}," 浏览器不支持canvas，请切换浏览器重试 ",-1)),NT={class:"actions"},UT=["onclick"],kT=em(()=>Hi("audio",{src:"/src/assets/transform.mp3",loop:"loop",id:"audio"},null,-1));function BT(i,t,e,n,s,r){return Di(),xs("div",zT,[OT,Hi("div",NT,[Hi("a",{onclick:r.transform},"transform",8,UT)]),kT])}const VT=Uc(FT,[["render",BT],["__scopeId","data-v-4d5ff822"]]),nm=[{path:"/",component:vT,title:"3d city"},{path:"/transformer",component:VT,title:"transformer"}],HT=V_({history:i_(),routes:nm});const GT={data(){return{routes:nm,showMenus:!1}},methods:{switchShowMenus(){this.showMenus=!this.showMenus}}},WT=["onmouseleave"],XT=["onmouseenter"],jT={key:1,class:"menus-wrap"};function qT(i,t,e,n,s,r){const o=Qc("router-link"),a=Qc("router-view");return Di(),xs("div",null,[Hi("div",{class:"menus",onmouseleave:r.switchShowMenus},[s.showMenus?(Di(),xs("div",jT,[(Di(!0),xs(yn,null,zg(s.routes,l=>(Di(),t0(o,{key:l.title,to:l.path},{default:gd(()=>[Nd(pm(l.title),1)]),_:2},1032,["to"]))),128))])):(Di(),xs("a",{key:0,class:"more-icon",onmouseenter:r.switchShowMenus},"...",8,XT))],8,WT),en(a)])}const YT=Uc(GT,[["render",qT],["__scopeId","data-v-eacaee66"]]),im=N0(YT);im.use(HT);im.mount("#app");
